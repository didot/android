// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: snapshot.proto

package com.android.emulator;

public final class SnapshotOuterClass {
  private SnapshotOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ImageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:emulator_snapshot.Image)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .emulator_snapshot.Image.Type type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>optional .emulator_snapshot.Image.Type type = 1;</code>
     */
    com.android.emulator.SnapshotOuterClass.Image.Type getType();

    /**
     * <code>optional string path = 2;</code>
     */
    boolean hasPath();
    /**
     * <code>optional string path = 2;</code>
     */
    java.lang.String getPath();
    /**
     * <code>optional string path = 2;</code>
     */
    com.google.protobuf.ByteString
        getPathBytes();

    /**
     * <code>optional bool present = 3;</code>
     */
    boolean hasPresent();
    /**
     * <code>optional bool present = 3;</code>
     */
    boolean getPresent();

    /**
     * <code>optional int64 size = 4;</code>
     */
    boolean hasSize();
    /**
     * <code>optional int64 size = 4;</code>
     */
    long getSize();

    /**
     * <code>optional int64 modification_time = 5;</code>
     */
    boolean hasModificationTime();
    /**
     * <code>optional int64 modification_time = 5;</code>
     */
    long getModificationTime();
  }
  /**
   * Protobuf type {@code emulator_snapshot.Image}
   */
  public  static final class Image extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:emulator_snapshot.Image)
      ImageOrBuilder {
    // Use Image.newBuilder() to construct.
    private Image(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Image() {
      type_ = 0;
      path_ = "";
      present_ = false;
      size_ = 0L;
      modificationTime_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Image(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.android.emulator.SnapshotOuterClass.Image.Type value = com.android.emulator.SnapshotOuterClass.Image.Type.forNumber(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = rawValue;
              }
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              path_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              present_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              size_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              modificationTime_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.android.emulator.SnapshotOuterClass.internal_static_emulator_snapshot_Image_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.android.emulator.SnapshotOuterClass.internal_static_emulator_snapshot_Image_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.android.emulator.SnapshotOuterClass.Image.class, com.android.emulator.SnapshotOuterClass.Image.Builder.class);
    }

    /**
     * Protobuf enum {@code emulator_snapshot.Image.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>IMAGE_TYPE_UNKNOWN = 0;</code>
       */
      IMAGE_TYPE_UNKNOWN(0),
      /**
       * <code>IMAGE_TYPE_KERNEL = 1;</code>
       */
      IMAGE_TYPE_KERNEL(1),
      /**
       * <code>IMAGE_TYPE_KERNEL_RANCHU = 2;</code>
       */
      IMAGE_TYPE_KERNEL_RANCHU(2),
      /**
       * <code>IMAGE_TYPE_SYSTEM = 3;</code>
       */
      IMAGE_TYPE_SYSTEM(3),
      /**
       * <code>IMAGE_TYPE_SYSTEM_COPY = 4;</code>
       */
      IMAGE_TYPE_SYSTEM_COPY(4),
      /**
       * <code>IMAGE_TYPE_DATA = 5;</code>
       */
      IMAGE_TYPE_DATA(5),
      /**
       * <code>IMAGE_TYPE_DATA_COPY = 6;</code>
       */
      IMAGE_TYPE_DATA_COPY(6),
      /**
       * <code>IMAGE_TYPE_RAMDISK = 7;</code>
       */
      IMAGE_TYPE_RAMDISK(7),
      /**
       * <code>IMAGE_TYPE_SDCARD = 8;</code>
       */
      IMAGE_TYPE_SDCARD(8),
      /**
       * <code>IMAGE_TYPE_CACHE = 9;</code>
       */
      IMAGE_TYPE_CACHE(9),
      /**
       * <code>IMAGE_TYPE_VENDOR = 10;</code>
       */
      IMAGE_TYPE_VENDOR(10),
      /**
       * <code>IMAGE_TYPE_ENCRYPTION_KEY = 11;</code>
       */
      IMAGE_TYPE_ENCRYPTION_KEY(11),
      ;

      /**
       * <code>IMAGE_TYPE_UNKNOWN = 0;</code>
       */
      public static final int IMAGE_TYPE_UNKNOWN_VALUE = 0;
      /**
       * <code>IMAGE_TYPE_KERNEL = 1;</code>
       */
      public static final int IMAGE_TYPE_KERNEL_VALUE = 1;
      /**
       * <code>IMAGE_TYPE_KERNEL_RANCHU = 2;</code>
       */
      public static final int IMAGE_TYPE_KERNEL_RANCHU_VALUE = 2;
      /**
       * <code>IMAGE_TYPE_SYSTEM = 3;</code>
       */
      public static final int IMAGE_TYPE_SYSTEM_VALUE = 3;
      /**
       * <code>IMAGE_TYPE_SYSTEM_COPY = 4;</code>
       */
      public static final int IMAGE_TYPE_SYSTEM_COPY_VALUE = 4;
      /**
       * <code>IMAGE_TYPE_DATA = 5;</code>
       */
      public static final int IMAGE_TYPE_DATA_VALUE = 5;
      /**
       * <code>IMAGE_TYPE_DATA_COPY = 6;</code>
       */
      public static final int IMAGE_TYPE_DATA_COPY_VALUE = 6;
      /**
       * <code>IMAGE_TYPE_RAMDISK = 7;</code>
       */
      public static final int IMAGE_TYPE_RAMDISK_VALUE = 7;
      /**
       * <code>IMAGE_TYPE_SDCARD = 8;</code>
       */
      public static final int IMAGE_TYPE_SDCARD_VALUE = 8;
      /**
       * <code>IMAGE_TYPE_CACHE = 9;</code>
       */
      public static final int IMAGE_TYPE_CACHE_VALUE = 9;
      /**
       * <code>IMAGE_TYPE_VENDOR = 10;</code>
       */
      public static final int IMAGE_TYPE_VENDOR_VALUE = 10;
      /**
       * <code>IMAGE_TYPE_ENCRYPTION_KEY = 11;</code>
       */
      public static final int IMAGE_TYPE_ENCRYPTION_KEY_VALUE = 11;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      public static Type forNumber(int value) {
        switch (value) {
          case 0: return IMAGE_TYPE_UNKNOWN;
          case 1: return IMAGE_TYPE_KERNEL;
          case 2: return IMAGE_TYPE_KERNEL_RANCHU;
          case 3: return IMAGE_TYPE_SYSTEM;
          case 4: return IMAGE_TYPE_SYSTEM_COPY;
          case 5: return IMAGE_TYPE_DATA;
          case 6: return IMAGE_TYPE_DATA_COPY;
          case 7: return IMAGE_TYPE_RAMDISK;
          case 8: return IMAGE_TYPE_SDCARD;
          case 9: return IMAGE_TYPE_CACHE;
          case 10: return IMAGE_TYPE_VENDOR;
          case 11: return IMAGE_TYPE_ENCRYPTION_KEY;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.android.emulator.SnapshotOuterClass.Image.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:emulator_snapshot.Image.Type)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>optional .emulator_snapshot.Image.Type type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .emulator_snapshot.Image.Type type = 1;</code>
     */
    public com.android.emulator.SnapshotOuterClass.Image.Type getType() {
      com.android.emulator.SnapshotOuterClass.Image.Type result = com.android.emulator.SnapshotOuterClass.Image.Type.forNumber(type_);
      return result == null ? com.android.emulator.SnapshotOuterClass.Image.Type.IMAGE_TYPE_UNKNOWN : result;
    }

    public static final int PATH_FIELD_NUMBER = 2;
    private volatile java.lang.Object path_;
    /**
     * <code>optional string path = 2;</code>
     */
    public boolean hasPath() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string path = 2;</code>
     */
    public java.lang.String getPath() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          path_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string path = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPathBytes() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        path_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PRESENT_FIELD_NUMBER = 3;
    private boolean present_;
    /**
     * <code>optional bool present = 3;</code>
     */
    public boolean hasPresent() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool present = 3;</code>
     */
    public boolean getPresent() {
      return present_;
    }

    public static final int SIZE_FIELD_NUMBER = 4;
    private long size_;
    /**
     * <code>optional int64 size = 4;</code>
     */
    public boolean hasSize() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 size = 4;</code>
     */
    public long getSize() {
      return size_;
    }

    public static final int MODIFICATION_TIME_FIELD_NUMBER = 5;
    private long modificationTime_;
    /**
     * <code>optional int64 modification_time = 5;</code>
     */
    public boolean hasModificationTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 modification_time = 5;</code>
     */
    public long getModificationTime() {
      return modificationTime_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, path_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, present_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, size_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, modificationTime_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, path_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, present_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, size_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, modificationTime_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.android.emulator.SnapshotOuterClass.Image parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.emulator.SnapshotOuterClass.Image parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.emulator.SnapshotOuterClass.Image parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.emulator.SnapshotOuterClass.Image parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.emulator.SnapshotOuterClass.Image parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.android.emulator.SnapshotOuterClass.Image parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.android.emulator.SnapshotOuterClass.Image parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.android.emulator.SnapshotOuterClass.Image parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.android.emulator.SnapshotOuterClass.Image parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.android.emulator.SnapshotOuterClass.Image parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.emulator.SnapshotOuterClass.Image prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code emulator_snapshot.Image}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:emulator_snapshot.Image)
        com.android.emulator.SnapshotOuterClass.ImageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.android.emulator.SnapshotOuterClass.internal_static_emulator_snapshot_Image_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.android.emulator.SnapshotOuterClass.internal_static_emulator_snapshot_Image_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.android.emulator.SnapshotOuterClass.Image.class, com.android.emulator.SnapshotOuterClass.Image.Builder.class);
      }

      // Construct using com.android.emulator.SnapshotOuterClass.Image.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        path_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        present_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        size_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        modificationTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.android.emulator.SnapshotOuterClass.internal_static_emulator_snapshot_Image_descriptor;
      }

      public com.android.emulator.SnapshotOuterClass.Image getDefaultInstanceForType() {
        return com.android.emulator.SnapshotOuterClass.Image.getDefaultInstance();
      }

      public com.android.emulator.SnapshotOuterClass.Image build() {
        com.android.emulator.SnapshotOuterClass.Image result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.android.emulator.SnapshotOuterClass.Image buildPartial() {
        com.android.emulator.SnapshotOuterClass.Image result = new com.android.emulator.SnapshotOuterClass.Image(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.path_ = path_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.present_ = present_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.modificationTime_ = modificationTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.android.emulator.SnapshotOuterClass.Image) {
          return mergeFrom((com.android.emulator.SnapshotOuterClass.Image)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.android.emulator.SnapshotOuterClass.Image other) {
        if (other == com.android.emulator.SnapshotOuterClass.Image.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasPath()) {
          bitField0_ |= 0x00000002;
          path_ = other.path_;
          onChanged();
        }
        if (other.hasPresent()) {
          setPresent(other.getPresent());
        }
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasModificationTime()) {
          setModificationTime(other.getModificationTime());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.android.emulator.SnapshotOuterClass.Image parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.android.emulator.SnapshotOuterClass.Image) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int type_ = 0;
      /**
       * <code>optional .emulator_snapshot.Image.Type type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .emulator_snapshot.Image.Type type = 1;</code>
       */
      public com.android.emulator.SnapshotOuterClass.Image.Type getType() {
        com.android.emulator.SnapshotOuterClass.Image.Type result = com.android.emulator.SnapshotOuterClass.Image.Type.forNumber(type_);
        return result == null ? com.android.emulator.SnapshotOuterClass.Image.Type.IMAGE_TYPE_UNKNOWN : result;
      }
      /**
       * <code>optional .emulator_snapshot.Image.Type type = 1;</code>
       */
      public Builder setType(com.android.emulator.SnapshotOuterClass.Image.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .emulator_snapshot.Image.Type type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object path_ = "";
      /**
       * <code>optional string path = 2;</code>
       */
      public boolean hasPath() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string path = 2;</code>
       */
      public java.lang.String getPath() {
        java.lang.Object ref = path_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            path_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string path = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPathBytes() {
        java.lang.Object ref = path_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          path_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string path = 2;</code>
       */
      public Builder setPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        path_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string path = 2;</code>
       */
      public Builder clearPath() {
        bitField0_ = (bitField0_ & ~0x00000002);
        path_ = getDefaultInstance().getPath();
        onChanged();
        return this;
      }
      /**
       * <code>optional string path = 2;</code>
       */
      public Builder setPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        path_ = value;
        onChanged();
        return this;
      }

      private boolean present_ ;
      /**
       * <code>optional bool present = 3;</code>
       */
      public boolean hasPresent() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool present = 3;</code>
       */
      public boolean getPresent() {
        return present_;
      }
      /**
       * <code>optional bool present = 3;</code>
       */
      public Builder setPresent(boolean value) {
        bitField0_ |= 0x00000004;
        present_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool present = 3;</code>
       */
      public Builder clearPresent() {
        bitField0_ = (bitField0_ & ~0x00000004);
        present_ = false;
        onChanged();
        return this;
      }

      private long size_ ;
      /**
       * <code>optional int64 size = 4;</code>
       */
      public boolean hasSize() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 size = 4;</code>
       */
      public long getSize() {
        return size_;
      }
      /**
       * <code>optional int64 size = 4;</code>
       */
      public Builder setSize(long value) {
        bitField0_ |= 0x00000008;
        size_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 size = 4;</code>
       */
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000008);
        size_ = 0L;
        onChanged();
        return this;
      }

      private long modificationTime_ ;
      /**
       * <code>optional int64 modification_time = 5;</code>
       */
      public boolean hasModificationTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 modification_time = 5;</code>
       */
      public long getModificationTime() {
        return modificationTime_;
      }
      /**
       * <code>optional int64 modification_time = 5;</code>
       */
      public Builder setModificationTime(long value) {
        bitField0_ |= 0x00000010;
        modificationTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 modification_time = 5;</code>
       */
      public Builder clearModificationTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        modificationTime_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:emulator_snapshot.Image)
    }

    // @@protoc_insertion_point(class_scope:emulator_snapshot.Image)
    private static final com.android.emulator.SnapshotOuterClass.Image DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.android.emulator.SnapshotOuterClass.Image();
    }

    public static com.android.emulator.SnapshotOuterClass.Image getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Image>
        PARSER = new com.google.protobuf.AbstractParser<Image>() {
      public Image parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Image(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Image> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Image> getParserForType() {
      return PARSER;
    }

    public com.android.emulator.SnapshotOuterClass.Image getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HostOrBuilder extends
      // @@protoc_insertion_point(interface_extends:emulator_snapshot.Host)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string gpu_driver = 4;</code>
     */
    boolean hasGpuDriver();
    /**
     * <code>optional string gpu_driver = 4;</code>
     */
    java.lang.String getGpuDriver();
    /**
     * <code>optional string gpu_driver = 4;</code>
     */
    com.google.protobuf.ByteString
        getGpuDriverBytes();

    /**
     * <code>optional int32 hypervisor = 5;</code>
     */
    boolean hasHypervisor();
    /**
     * <code>optional int32 hypervisor = 5;</code>
     */
    int getHypervisor();
  }
  /**
   * Protobuf type {@code emulator_snapshot.Host}
   */
  public  static final class Host extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:emulator_snapshot.Host)
      HostOrBuilder {
    // Use Host.newBuilder() to construct.
    private Host(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Host() {
      gpuDriver_ = "";
      hypervisor_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Host(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              gpuDriver_ = bs;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000002;
              hypervisor_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.android.emulator.SnapshotOuterClass.internal_static_emulator_snapshot_Host_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.android.emulator.SnapshotOuterClass.internal_static_emulator_snapshot_Host_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.android.emulator.SnapshotOuterClass.Host.class, com.android.emulator.SnapshotOuterClass.Host.Builder.class);
    }

    private int bitField0_;
    public static final int GPU_DRIVER_FIELD_NUMBER = 4;
    private volatile java.lang.Object gpuDriver_;
    /**
     * <code>optional string gpu_driver = 4;</code>
     */
    public boolean hasGpuDriver() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string gpu_driver = 4;</code>
     */
    public java.lang.String getGpuDriver() {
      java.lang.Object ref = gpuDriver_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gpuDriver_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string gpu_driver = 4;</code>
     */
    public com.google.protobuf.ByteString
        getGpuDriverBytes() {
      java.lang.Object ref = gpuDriver_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gpuDriver_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HYPERVISOR_FIELD_NUMBER = 5;
    private int hypervisor_;
    /**
     * <code>optional int32 hypervisor = 5;</code>
     */
    public boolean hasHypervisor() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 hypervisor = 5;</code>
     */
    public int getHypervisor() {
      return hypervisor_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, gpuDriver_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(5, hypervisor_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(4, gpuDriver_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, hypervisor_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.android.emulator.SnapshotOuterClass.Host parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.emulator.SnapshotOuterClass.Host parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.emulator.SnapshotOuterClass.Host parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.emulator.SnapshotOuterClass.Host parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.emulator.SnapshotOuterClass.Host parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.android.emulator.SnapshotOuterClass.Host parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.android.emulator.SnapshotOuterClass.Host parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.android.emulator.SnapshotOuterClass.Host parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.android.emulator.SnapshotOuterClass.Host parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.android.emulator.SnapshotOuterClass.Host parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.emulator.SnapshotOuterClass.Host prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code emulator_snapshot.Host}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:emulator_snapshot.Host)
        com.android.emulator.SnapshotOuterClass.HostOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.android.emulator.SnapshotOuterClass.internal_static_emulator_snapshot_Host_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.android.emulator.SnapshotOuterClass.internal_static_emulator_snapshot_Host_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.android.emulator.SnapshotOuterClass.Host.class, com.android.emulator.SnapshotOuterClass.Host.Builder.class);
      }

      // Construct using com.android.emulator.SnapshotOuterClass.Host.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        gpuDriver_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        hypervisor_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.android.emulator.SnapshotOuterClass.internal_static_emulator_snapshot_Host_descriptor;
      }

      public com.android.emulator.SnapshotOuterClass.Host getDefaultInstanceForType() {
        return com.android.emulator.SnapshotOuterClass.Host.getDefaultInstance();
      }

      public com.android.emulator.SnapshotOuterClass.Host build() {
        com.android.emulator.SnapshotOuterClass.Host result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.android.emulator.SnapshotOuterClass.Host buildPartial() {
        com.android.emulator.SnapshotOuterClass.Host result = new com.android.emulator.SnapshotOuterClass.Host(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.gpuDriver_ = gpuDriver_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.hypervisor_ = hypervisor_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.android.emulator.SnapshotOuterClass.Host) {
          return mergeFrom((com.android.emulator.SnapshotOuterClass.Host)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.android.emulator.SnapshotOuterClass.Host other) {
        if (other == com.android.emulator.SnapshotOuterClass.Host.getDefaultInstance()) return this;
        if (other.hasGpuDriver()) {
          bitField0_ |= 0x00000001;
          gpuDriver_ = other.gpuDriver_;
          onChanged();
        }
        if (other.hasHypervisor()) {
          setHypervisor(other.getHypervisor());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.android.emulator.SnapshotOuterClass.Host parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.android.emulator.SnapshotOuterClass.Host) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object gpuDriver_ = "";
      /**
       * <code>optional string gpu_driver = 4;</code>
       */
      public boolean hasGpuDriver() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string gpu_driver = 4;</code>
       */
      public java.lang.String getGpuDriver() {
        java.lang.Object ref = gpuDriver_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            gpuDriver_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string gpu_driver = 4;</code>
       */
      public com.google.protobuf.ByteString
          getGpuDriverBytes() {
        java.lang.Object ref = gpuDriver_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gpuDriver_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string gpu_driver = 4;</code>
       */
      public Builder setGpuDriver(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        gpuDriver_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string gpu_driver = 4;</code>
       */
      public Builder clearGpuDriver() {
        bitField0_ = (bitField0_ & ~0x00000001);
        gpuDriver_ = getDefaultInstance().getGpuDriver();
        onChanged();
        return this;
      }
      /**
       * <code>optional string gpu_driver = 4;</code>
       */
      public Builder setGpuDriverBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        gpuDriver_ = value;
        onChanged();
        return this;
      }

      private int hypervisor_ ;
      /**
       * <code>optional int32 hypervisor = 5;</code>
       */
      public boolean hasHypervisor() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 hypervisor = 5;</code>
       */
      public int getHypervisor() {
        return hypervisor_;
      }
      /**
       * <code>optional int32 hypervisor = 5;</code>
       */
      public Builder setHypervisor(int value) {
        bitField0_ |= 0x00000002;
        hypervisor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hypervisor = 5;</code>
       */
      public Builder clearHypervisor() {
        bitField0_ = (bitField0_ & ~0x00000002);
        hypervisor_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:emulator_snapshot.Host)
    }

    // @@protoc_insertion_point(class_scope:emulator_snapshot.Host)
    private static final com.android.emulator.SnapshotOuterClass.Host DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.android.emulator.SnapshotOuterClass.Host();
    }

    public static com.android.emulator.SnapshotOuterClass.Host getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Host>
        PARSER = new com.google.protobuf.AbstractParser<Host>() {
      public Host parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Host(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Host> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Host> getParserForType() {
      return PARSER;
    }

    public com.android.emulator.SnapshotOuterClass.Host getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:emulator_snapshot.Config)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Features are int32, not enums here to make sure we don't have to update
     * one more protobuf definition with every single new feature flag, even
     * when the code doesn't really care about the actual meaning for them,
     * only for the values.
     * </pre>
     *
     * <code>repeated int32 enabled_features = 1;</code>
     */
    java.util.List<java.lang.Integer> getEnabledFeaturesList();
    /**
     * <pre>
     * Features are int32, not enums here to make sure we don't have to update
     * one more protobuf definition with every single new feature flag, even
     * when the code doesn't really care about the actual meaning for them,
     * only for the values.
     * </pre>
     *
     * <code>repeated int32 enabled_features = 1;</code>
     */
    int getEnabledFeaturesCount();
    /**
     * <pre>
     * Features are int32, not enums here to make sure we don't have to update
     * one more protobuf definition with every single new feature flag, even
     * when the code doesn't really care about the actual meaning for them,
     * only for the values.
     * </pre>
     *
     * <code>repeated int32 enabled_features = 1;</code>
     */
    int getEnabledFeatures(int index);

    /**
     * <pre>
     * This holds the renderer; int32 for the same reason as |enabled_features|.
     * </pre>
     *
     * <code>optional int32 selected_renderer = 2;</code>
     */
    boolean hasSelectedRenderer();
    /**
     * <pre>
     * This holds the renderer; int32 for the same reason as |enabled_features|.
     * </pre>
     *
     * <code>optional int32 selected_renderer = 2;</code>
     */
    int getSelectedRenderer();

    /**
     * <code>optional int32 cpu_core_count = 3;</code>
     */
    boolean hasCpuCoreCount();
    /**
     * <code>optional int32 cpu_core_count = 3;</code>
     */
    int getCpuCoreCount();

    /**
     * <code>optional int64 ram_size_bytes = 4;</code>
     */
    boolean hasRamSizeBytes();
    /**
     * <code>optional int64 ram_size_bytes = 4;</code>
     */
    long getRamSizeBytes();
  }
  /**
   * Protobuf type {@code emulator_snapshot.Config}
   */
  public  static final class Config extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:emulator_snapshot.Config)
      ConfigOrBuilder {
    // Use Config.newBuilder() to construct.
    private Config(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Config() {
      enabledFeatures_ = java.util.Collections.emptyList();
      selectedRenderer_ = 0;
      cpuCoreCount_ = 0;
      ramSizeBytes_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Config(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                enabledFeatures_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              enabledFeatures_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                enabledFeatures_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                enabledFeatures_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              selectedRenderer_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              cpuCoreCount_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              ramSizeBytes_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          enabledFeatures_ = java.util.Collections.unmodifiableList(enabledFeatures_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.android.emulator.SnapshotOuterClass.internal_static_emulator_snapshot_Config_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.android.emulator.SnapshotOuterClass.internal_static_emulator_snapshot_Config_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.android.emulator.SnapshotOuterClass.Config.class, com.android.emulator.SnapshotOuterClass.Config.Builder.class);
    }

    private int bitField0_;
    public static final int ENABLED_FEATURES_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> enabledFeatures_;
    /**
     * <pre>
     * Features are int32, not enums here to make sure we don't have to update
     * one more protobuf definition with every single new feature flag, even
     * when the code doesn't really care about the actual meaning for them,
     * only for the values.
     * </pre>
     *
     * <code>repeated int32 enabled_features = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getEnabledFeaturesList() {
      return enabledFeatures_;
    }
    /**
     * <pre>
     * Features are int32, not enums here to make sure we don't have to update
     * one more protobuf definition with every single new feature flag, even
     * when the code doesn't really care about the actual meaning for them,
     * only for the values.
     * </pre>
     *
     * <code>repeated int32 enabled_features = 1;</code>
     */
    public int getEnabledFeaturesCount() {
      return enabledFeatures_.size();
    }
    /**
     * <pre>
     * Features are int32, not enums here to make sure we don't have to update
     * one more protobuf definition with every single new feature flag, even
     * when the code doesn't really care about the actual meaning for them,
     * only for the values.
     * </pre>
     *
     * <code>repeated int32 enabled_features = 1;</code>
     */
    public int getEnabledFeatures(int index) {
      return enabledFeatures_.get(index);
    }

    public static final int SELECTED_RENDERER_FIELD_NUMBER = 2;
    private int selectedRenderer_;
    /**
     * <pre>
     * This holds the renderer; int32 for the same reason as |enabled_features|.
     * </pre>
     *
     * <code>optional int32 selected_renderer = 2;</code>
     */
    public boolean hasSelectedRenderer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * This holds the renderer; int32 for the same reason as |enabled_features|.
     * </pre>
     *
     * <code>optional int32 selected_renderer = 2;</code>
     */
    public int getSelectedRenderer() {
      return selectedRenderer_;
    }

    public static final int CPU_CORE_COUNT_FIELD_NUMBER = 3;
    private int cpuCoreCount_;
    /**
     * <code>optional int32 cpu_core_count = 3;</code>
     */
    public boolean hasCpuCoreCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 cpu_core_count = 3;</code>
     */
    public int getCpuCoreCount() {
      return cpuCoreCount_;
    }

    public static final int RAM_SIZE_BYTES_FIELD_NUMBER = 4;
    private long ramSizeBytes_;
    /**
     * <code>optional int64 ram_size_bytes = 4;</code>
     */
    public boolean hasRamSizeBytes() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 ram_size_bytes = 4;</code>
     */
    public long getRamSizeBytes() {
      return ramSizeBytes_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < enabledFeatures_.size(); i++) {
        output.writeInt32(1, enabledFeatures_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, selectedRenderer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, cpuCoreCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(4, ramSizeBytes_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < enabledFeatures_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(enabledFeatures_.get(i));
        }
        size += dataSize;
        size += 1 * getEnabledFeaturesList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, selectedRenderer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, cpuCoreCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, ramSizeBytes_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.android.emulator.SnapshotOuterClass.Config parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.emulator.SnapshotOuterClass.Config parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.emulator.SnapshotOuterClass.Config parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.emulator.SnapshotOuterClass.Config parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.emulator.SnapshotOuterClass.Config parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.android.emulator.SnapshotOuterClass.Config parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.android.emulator.SnapshotOuterClass.Config parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.android.emulator.SnapshotOuterClass.Config parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.android.emulator.SnapshotOuterClass.Config parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.android.emulator.SnapshotOuterClass.Config parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.emulator.SnapshotOuterClass.Config prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code emulator_snapshot.Config}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:emulator_snapshot.Config)
        com.android.emulator.SnapshotOuterClass.ConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.android.emulator.SnapshotOuterClass.internal_static_emulator_snapshot_Config_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.android.emulator.SnapshotOuterClass.internal_static_emulator_snapshot_Config_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.android.emulator.SnapshotOuterClass.Config.class, com.android.emulator.SnapshotOuterClass.Config.Builder.class);
      }

      // Construct using com.android.emulator.SnapshotOuterClass.Config.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        enabledFeatures_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        selectedRenderer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        cpuCoreCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        ramSizeBytes_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.android.emulator.SnapshotOuterClass.internal_static_emulator_snapshot_Config_descriptor;
      }

      public com.android.emulator.SnapshotOuterClass.Config getDefaultInstanceForType() {
        return com.android.emulator.SnapshotOuterClass.Config.getDefaultInstance();
      }

      public com.android.emulator.SnapshotOuterClass.Config build() {
        com.android.emulator.SnapshotOuterClass.Config result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.android.emulator.SnapshotOuterClass.Config buildPartial() {
        com.android.emulator.SnapshotOuterClass.Config result = new com.android.emulator.SnapshotOuterClass.Config(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          enabledFeatures_ = java.util.Collections.unmodifiableList(enabledFeatures_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.enabledFeatures_ = enabledFeatures_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.selectedRenderer_ = selectedRenderer_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cpuCoreCount_ = cpuCoreCount_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ramSizeBytes_ = ramSizeBytes_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.android.emulator.SnapshotOuterClass.Config) {
          return mergeFrom((com.android.emulator.SnapshotOuterClass.Config)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.android.emulator.SnapshotOuterClass.Config other) {
        if (other == com.android.emulator.SnapshotOuterClass.Config.getDefaultInstance()) return this;
        if (!other.enabledFeatures_.isEmpty()) {
          if (enabledFeatures_.isEmpty()) {
            enabledFeatures_ = other.enabledFeatures_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureEnabledFeaturesIsMutable();
            enabledFeatures_.addAll(other.enabledFeatures_);
          }
          onChanged();
        }
        if (other.hasSelectedRenderer()) {
          setSelectedRenderer(other.getSelectedRenderer());
        }
        if (other.hasCpuCoreCount()) {
          setCpuCoreCount(other.getCpuCoreCount());
        }
        if (other.hasRamSizeBytes()) {
          setRamSizeBytes(other.getRamSizeBytes());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.android.emulator.SnapshotOuterClass.Config parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.android.emulator.SnapshotOuterClass.Config) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> enabledFeatures_ = java.util.Collections.emptyList();
      private void ensureEnabledFeaturesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          enabledFeatures_ = new java.util.ArrayList<java.lang.Integer>(enabledFeatures_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * Features are int32, not enums here to make sure we don't have to update
       * one more protobuf definition with every single new feature flag, even
       * when the code doesn't really care about the actual meaning for them,
       * only for the values.
       * </pre>
       *
       * <code>repeated int32 enabled_features = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getEnabledFeaturesList() {
        return java.util.Collections.unmodifiableList(enabledFeatures_);
      }
      /**
       * <pre>
       * Features are int32, not enums here to make sure we don't have to update
       * one more protobuf definition with every single new feature flag, even
       * when the code doesn't really care about the actual meaning for them,
       * only for the values.
       * </pre>
       *
       * <code>repeated int32 enabled_features = 1;</code>
       */
      public int getEnabledFeaturesCount() {
        return enabledFeatures_.size();
      }
      /**
       * <pre>
       * Features are int32, not enums here to make sure we don't have to update
       * one more protobuf definition with every single new feature flag, even
       * when the code doesn't really care about the actual meaning for them,
       * only for the values.
       * </pre>
       *
       * <code>repeated int32 enabled_features = 1;</code>
       */
      public int getEnabledFeatures(int index) {
        return enabledFeatures_.get(index);
      }
      /**
       * <pre>
       * Features are int32, not enums here to make sure we don't have to update
       * one more protobuf definition with every single new feature flag, even
       * when the code doesn't really care about the actual meaning for them,
       * only for the values.
       * </pre>
       *
       * <code>repeated int32 enabled_features = 1;</code>
       */
      public Builder setEnabledFeatures(
          int index, int value) {
        ensureEnabledFeaturesIsMutable();
        enabledFeatures_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Features are int32, not enums here to make sure we don't have to update
       * one more protobuf definition with every single new feature flag, even
       * when the code doesn't really care about the actual meaning for them,
       * only for the values.
       * </pre>
       *
       * <code>repeated int32 enabled_features = 1;</code>
       */
      public Builder addEnabledFeatures(int value) {
        ensureEnabledFeaturesIsMutable();
        enabledFeatures_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Features are int32, not enums here to make sure we don't have to update
       * one more protobuf definition with every single new feature flag, even
       * when the code doesn't really care about the actual meaning for them,
       * only for the values.
       * </pre>
       *
       * <code>repeated int32 enabled_features = 1;</code>
       */
      public Builder addAllEnabledFeatures(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEnabledFeaturesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, enabledFeatures_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Features are int32, not enums here to make sure we don't have to update
       * one more protobuf definition with every single new feature flag, even
       * when the code doesn't really care about the actual meaning for them,
       * only for the values.
       * </pre>
       *
       * <code>repeated int32 enabled_features = 1;</code>
       */
      public Builder clearEnabledFeatures() {
        enabledFeatures_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private int selectedRenderer_ ;
      /**
       * <pre>
       * This holds the renderer; int32 for the same reason as |enabled_features|.
       * </pre>
       *
       * <code>optional int32 selected_renderer = 2;</code>
       */
      public boolean hasSelectedRenderer() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * This holds the renderer; int32 for the same reason as |enabled_features|.
       * </pre>
       *
       * <code>optional int32 selected_renderer = 2;</code>
       */
      public int getSelectedRenderer() {
        return selectedRenderer_;
      }
      /**
       * <pre>
       * This holds the renderer; int32 for the same reason as |enabled_features|.
       * </pre>
       *
       * <code>optional int32 selected_renderer = 2;</code>
       */
      public Builder setSelectedRenderer(int value) {
        bitField0_ |= 0x00000002;
        selectedRenderer_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This holds the renderer; int32 for the same reason as |enabled_features|.
       * </pre>
       *
       * <code>optional int32 selected_renderer = 2;</code>
       */
      public Builder clearSelectedRenderer() {
        bitField0_ = (bitField0_ & ~0x00000002);
        selectedRenderer_ = 0;
        onChanged();
        return this;
      }

      private int cpuCoreCount_ ;
      /**
       * <code>optional int32 cpu_core_count = 3;</code>
       */
      public boolean hasCpuCoreCount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 cpu_core_count = 3;</code>
       */
      public int getCpuCoreCount() {
        return cpuCoreCount_;
      }
      /**
       * <code>optional int32 cpu_core_count = 3;</code>
       */
      public Builder setCpuCoreCount(int value) {
        bitField0_ |= 0x00000004;
        cpuCoreCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cpu_core_count = 3;</code>
       */
      public Builder clearCpuCoreCount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cpuCoreCount_ = 0;
        onChanged();
        return this;
      }

      private long ramSizeBytes_ ;
      /**
       * <code>optional int64 ram_size_bytes = 4;</code>
       */
      public boolean hasRamSizeBytes() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 ram_size_bytes = 4;</code>
       */
      public long getRamSizeBytes() {
        return ramSizeBytes_;
      }
      /**
       * <code>optional int64 ram_size_bytes = 4;</code>
       */
      public Builder setRamSizeBytes(long value) {
        bitField0_ |= 0x00000008;
        ramSizeBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ram_size_bytes = 4;</code>
       */
      public Builder clearRamSizeBytes() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ramSizeBytes_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:emulator_snapshot.Config)
    }

    // @@protoc_insertion_point(class_scope:emulator_snapshot.Config)
    private static final com.android.emulator.SnapshotOuterClass.Config DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.android.emulator.SnapshotOuterClass.Config();
    }

    public static com.android.emulator.SnapshotOuterClass.Config getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Config>
        PARSER = new com.google.protobuf.AbstractParser<Config>() {
      public Config parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Config(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Config> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Config> getParserForType() {
      return PARSER;
    }

    public com.android.emulator.SnapshotOuterClass.Config getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SaveStatsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:emulator_snapshot.SaveStats)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Type of save
     * 0: non-incremental
     * 1: incremental
     * </pre>
     *
     * <code>optional uint32 incremental = 1;</code>
     */
    boolean hasIncremental();
    /**
     * <pre>
     * Type of save
     * 0: non-incremental
     * 1: incremental
     * </pre>
     *
     * <code>optional uint32 incremental = 1;</code>
     */
    int getIncremental();

    /**
     * <pre>
     * Time taken to save.
     * </pre>
     *
     * <code>optional uint64 duration = 2;</code>
     */
    boolean hasDuration();
    /**
     * <pre>
     * Time taken to save.
     * </pre>
     *
     * <code>optional uint64 duration = 2;</code>
     */
    long getDuration();

    /**
     * <pre>
     * How many changed bytes in RAM.
     * </pre>
     *
     * <code>optional uint64 ram_changed_bytes = 3;</code>
     */
    boolean hasRamChangedBytes();
    /**
     * <pre>
     * How many changed bytes in RAM.
     * </pre>
     *
     * <code>optional uint64 ram_changed_bytes = 3;</code>
     */
    long getRamChangedBytes();
  }
  /**
   * Protobuf type {@code emulator_snapshot.SaveStats}
   */
  public  static final class SaveStats extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:emulator_snapshot.SaveStats)
      SaveStatsOrBuilder {
    // Use SaveStats.newBuilder() to construct.
    private SaveStats(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private SaveStats() {
      incremental_ = 0;
      duration_ = 0L;
      ramChangedBytes_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SaveStats(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              incremental_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              duration_ = input.readUInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              ramChangedBytes_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.android.emulator.SnapshotOuterClass.internal_static_emulator_snapshot_SaveStats_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.android.emulator.SnapshotOuterClass.internal_static_emulator_snapshot_SaveStats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.android.emulator.SnapshotOuterClass.SaveStats.class, com.android.emulator.SnapshotOuterClass.SaveStats.Builder.class);
    }

    private int bitField0_;
    public static final int INCREMENTAL_FIELD_NUMBER = 1;
    private int incremental_;
    /**
     * <pre>
     * Type of save
     * 0: non-incremental
     * 1: incremental
     * </pre>
     *
     * <code>optional uint32 incremental = 1;</code>
     */
    public boolean hasIncremental() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Type of save
     * 0: non-incremental
     * 1: incremental
     * </pre>
     *
     * <code>optional uint32 incremental = 1;</code>
     */
    public int getIncremental() {
      return incremental_;
    }

    public static final int DURATION_FIELD_NUMBER = 2;
    private long duration_;
    /**
     * <pre>
     * Time taken to save.
     * </pre>
     *
     * <code>optional uint64 duration = 2;</code>
     */
    public boolean hasDuration() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Time taken to save.
     * </pre>
     *
     * <code>optional uint64 duration = 2;</code>
     */
    public long getDuration() {
      return duration_;
    }

    public static final int RAM_CHANGED_BYTES_FIELD_NUMBER = 3;
    private long ramChangedBytes_;
    /**
     * <pre>
     * How many changed bytes in RAM.
     * </pre>
     *
     * <code>optional uint64 ram_changed_bytes = 3;</code>
     */
    public boolean hasRamChangedBytes() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * How many changed bytes in RAM.
     * </pre>
     *
     * <code>optional uint64 ram_changed_bytes = 3;</code>
     */
    public long getRamChangedBytes() {
      return ramChangedBytes_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, incremental_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, duration_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, ramChangedBytes_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, incremental_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, duration_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, ramChangedBytes_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.android.emulator.SnapshotOuterClass.SaveStats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.emulator.SnapshotOuterClass.SaveStats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.emulator.SnapshotOuterClass.SaveStats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.emulator.SnapshotOuterClass.SaveStats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.emulator.SnapshotOuterClass.SaveStats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.android.emulator.SnapshotOuterClass.SaveStats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.android.emulator.SnapshotOuterClass.SaveStats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.android.emulator.SnapshotOuterClass.SaveStats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.android.emulator.SnapshotOuterClass.SaveStats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.android.emulator.SnapshotOuterClass.SaveStats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.emulator.SnapshotOuterClass.SaveStats prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code emulator_snapshot.SaveStats}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:emulator_snapshot.SaveStats)
        com.android.emulator.SnapshotOuterClass.SaveStatsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.android.emulator.SnapshotOuterClass.internal_static_emulator_snapshot_SaveStats_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.android.emulator.SnapshotOuterClass.internal_static_emulator_snapshot_SaveStats_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.android.emulator.SnapshotOuterClass.SaveStats.class, com.android.emulator.SnapshotOuterClass.SaveStats.Builder.class);
      }

      // Construct using com.android.emulator.SnapshotOuterClass.SaveStats.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        incremental_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        duration_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        ramChangedBytes_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.android.emulator.SnapshotOuterClass.internal_static_emulator_snapshot_SaveStats_descriptor;
      }

      public com.android.emulator.SnapshotOuterClass.SaveStats getDefaultInstanceForType() {
        return com.android.emulator.SnapshotOuterClass.SaveStats.getDefaultInstance();
      }

      public com.android.emulator.SnapshotOuterClass.SaveStats build() {
        com.android.emulator.SnapshotOuterClass.SaveStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.android.emulator.SnapshotOuterClass.SaveStats buildPartial() {
        com.android.emulator.SnapshotOuterClass.SaveStats result = new com.android.emulator.SnapshotOuterClass.SaveStats(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.incremental_ = incremental_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.duration_ = duration_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ramChangedBytes_ = ramChangedBytes_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.android.emulator.SnapshotOuterClass.SaveStats) {
          return mergeFrom((com.android.emulator.SnapshotOuterClass.SaveStats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.android.emulator.SnapshotOuterClass.SaveStats other) {
        if (other == com.android.emulator.SnapshotOuterClass.SaveStats.getDefaultInstance()) return this;
        if (other.hasIncremental()) {
          setIncremental(other.getIncremental());
        }
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        if (other.hasRamChangedBytes()) {
          setRamChangedBytes(other.getRamChangedBytes());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.android.emulator.SnapshotOuterClass.SaveStats parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.android.emulator.SnapshotOuterClass.SaveStats) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int incremental_ ;
      /**
       * <pre>
       * Type of save
       * 0: non-incremental
       * 1: incremental
       * </pre>
       *
       * <code>optional uint32 incremental = 1;</code>
       */
      public boolean hasIncremental() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Type of save
       * 0: non-incremental
       * 1: incremental
       * </pre>
       *
       * <code>optional uint32 incremental = 1;</code>
       */
      public int getIncremental() {
        return incremental_;
      }
      /**
       * <pre>
       * Type of save
       * 0: non-incremental
       * 1: incremental
       * </pre>
       *
       * <code>optional uint32 incremental = 1;</code>
       */
      public Builder setIncremental(int value) {
        bitField0_ |= 0x00000001;
        incremental_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type of save
       * 0: non-incremental
       * 1: incremental
       * </pre>
       *
       * <code>optional uint32 incremental = 1;</code>
       */
      public Builder clearIncremental() {
        bitField0_ = (bitField0_ & ~0x00000001);
        incremental_ = 0;
        onChanged();
        return this;
      }

      private long duration_ ;
      /**
       * <pre>
       * Time taken to save.
       * </pre>
       *
       * <code>optional uint64 duration = 2;</code>
       */
      public boolean hasDuration() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Time taken to save.
       * </pre>
       *
       * <code>optional uint64 duration = 2;</code>
       */
      public long getDuration() {
        return duration_;
      }
      /**
       * <pre>
       * Time taken to save.
       * </pre>
       *
       * <code>optional uint64 duration = 2;</code>
       */
      public Builder setDuration(long value) {
        bitField0_ |= 0x00000002;
        duration_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time taken to save.
       * </pre>
       *
       * <code>optional uint64 duration = 2;</code>
       */
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000002);
        duration_ = 0L;
        onChanged();
        return this;
      }

      private long ramChangedBytes_ ;
      /**
       * <pre>
       * How many changed bytes in RAM.
       * </pre>
       *
       * <code>optional uint64 ram_changed_bytes = 3;</code>
       */
      public boolean hasRamChangedBytes() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * How many changed bytes in RAM.
       * </pre>
       *
       * <code>optional uint64 ram_changed_bytes = 3;</code>
       */
      public long getRamChangedBytes() {
        return ramChangedBytes_;
      }
      /**
       * <pre>
       * How many changed bytes in RAM.
       * </pre>
       *
       * <code>optional uint64 ram_changed_bytes = 3;</code>
       */
      public Builder setRamChangedBytes(long value) {
        bitField0_ |= 0x00000004;
        ramChangedBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * How many changed bytes in RAM.
       * </pre>
       *
       * <code>optional uint64 ram_changed_bytes = 3;</code>
       */
      public Builder clearRamChangedBytes() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ramChangedBytes_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:emulator_snapshot.SaveStats)
    }

    // @@protoc_insertion_point(class_scope:emulator_snapshot.SaveStats)
    private static final com.android.emulator.SnapshotOuterClass.SaveStats DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.android.emulator.SnapshotOuterClass.SaveStats();
    }

    public static com.android.emulator.SnapshotOuterClass.SaveStats getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SaveStats>
        PARSER = new com.google.protobuf.AbstractParser<SaveStats>() {
      public SaveStats parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SaveStats(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SaveStats> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SaveStats> getParserForType() {
      return PARSER;
    }

    public com.android.emulator.SnapshotOuterClass.SaveStats getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SnapshotOrBuilder extends
      // @@protoc_insertion_point(interface_extends:emulator_snapshot.Snapshot)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Update every time when introducing some breaking changes that make the
     * previous loading code break when trying to load the new snapshot.
     * NOTE: if the old code is fine with just skipping the new fields or not
     *       getting the meaning of new values, |version| should remain
     *       unchanged.
     * </pre>
     *
     * <code>optional int32 version = 1;</code>
     */
    boolean hasVersion();
    /**
     * <pre>
     * Update every time when introducing some breaking changes that make the
     * previous loading code break when trying to load the new snapshot.
     * NOTE: if the old code is fine with just skipping the new fields or not
     *       getting the meaning of new values, |version| should remain
     *       unchanged.
     * </pre>
     *
     * <code>optional int32 version = 1;</code>
     */
    int getVersion();

    /**
     * <pre>
     * Purely informative: when this snapshot was created, Unix timestamp.
     * </pre>
     *
     * <code>optional int64 creation_time = 2;</code>
     */
    boolean hasCreationTime();
    /**
     * <pre>
     * Purely informative: when this snapshot was created, Unix timestamp.
     * </pre>
     *
     * <code>optional int64 creation_time = 2;</code>
     */
    long getCreationTime();

    /**
     * <pre>
     * List of mounted disk images used during the snapshot creation.
     * </pre>
     *
     * <code>repeated .emulator_snapshot.Image images = 3;</code>
     */
    java.util.List<com.android.emulator.SnapshotOuterClass.Image> 
        getImagesList();
    /**
     * <pre>
     * List of mounted disk images used during the snapshot creation.
     * </pre>
     *
     * <code>repeated .emulator_snapshot.Image images = 3;</code>
     */
    com.android.emulator.SnapshotOuterClass.Image getImages(int index);
    /**
     * <pre>
     * List of mounted disk images used during the snapshot creation.
     * </pre>
     *
     * <code>repeated .emulator_snapshot.Image images = 3;</code>
     */
    int getImagesCount();
    /**
     * <pre>
     * List of mounted disk images used during the snapshot creation.
     * </pre>
     *
     * <code>repeated .emulator_snapshot.Image images = 3;</code>
     */
    java.util.List<? extends com.android.emulator.SnapshotOuterClass.ImageOrBuilder> 
        getImagesOrBuilderList();
    /**
     * <pre>
     * List of mounted disk images used during the snapshot creation.
     * </pre>
     *
     * <code>repeated .emulator_snapshot.Image images = 3;</code>
     */
    com.android.emulator.SnapshotOuterClass.ImageOrBuilder getImagesOrBuilder(
        int index);

    /**
     * <pre>
     * Description of the host machine properties needed to load this snapshot.
     * </pre>
     *
     * <code>optional .emulator_snapshot.Host host = 4;</code>
     */
    boolean hasHost();
    /**
     * <pre>
     * Description of the host machine properties needed to load this snapshot.
     * </pre>
     *
     * <code>optional .emulator_snapshot.Host host = 4;</code>
     */
    com.android.emulator.SnapshotOuterClass.Host getHost();
    /**
     * <pre>
     * Description of the host machine properties needed to load this snapshot.
     * </pre>
     *
     * <code>optional .emulator_snapshot.Host host = 4;</code>
     */
    com.android.emulator.SnapshotOuterClass.HostOrBuilder getHostOrBuilder();

    /**
     * <pre>
     * Description of the emulator configuration needed for this snapshot.
     * NOTE: try not to duplicate the configuration that's already in
     *       hardware-qemu.ini; only add what's either not there or what
     *       could've been overridden during process initialization.
     * </pre>
     *
     * <code>optional .emulator_snapshot.Config config = 5;</code>
     */
    boolean hasConfig();
    /**
     * <pre>
     * Description of the emulator configuration needed for this snapshot.
     * NOTE: try not to duplicate the configuration that's already in
     *       hardware-qemu.ini; only add what's either not there or what
     *       could've been overridden during process initialization.
     * </pre>
     *
     * <code>optional .emulator_snapshot.Config config = 5;</code>
     */
    com.android.emulator.SnapshotOuterClass.Config getConfig();
    /**
     * <pre>
     * Description of the emulator configuration needed for this snapshot.
     * NOTE: try not to duplicate the configuration that's already in
     *       hardware-qemu.ini; only add what's either not there or what
     *       could've been overridden during process initialization.
     * </pre>
     *
     * <code>optional .emulator_snapshot.Config config = 5;</code>
     */
    com.android.emulator.SnapshotOuterClass.ConfigOrBuilder getConfigOrBuilder();

    /**
     * <pre>
     * Set if the snapshot failed to load during the last attempt.
     * Code is up to the application to define, with 0 meaning 'not failed' just
     * in case.
     * </pre>
     *
     * <code>optional int64 failed_to_load_reason_code = 7;</code>
     */
    boolean hasFailedToLoadReasonCode();
    /**
     * <pre>
     * Set if the snapshot failed to load during the last attempt.
     * Code is up to the application to define, with 0 meaning 'not failed' just
     * in case.
     * </pre>
     *
     * <code>optional int64 failed_to_load_reason_code = 7;</code>
     */
    long getFailedToLoadReasonCode();

    /**
     * <pre>
     * Set if data image is mounted.
     * User build and userdebug build mount data partition at different time.
     * But it should be done before boot finished, so this field is very likely
     * to be true.
     * We snapshot it here just in case someday we support snapshot during
     * booting.
     * </pre>
     *
     * <code>optional bool guest_data_partition_mounted = 8;</code>
     */
    boolean hasGuestDataPartitionMounted();
    /**
     * <pre>
     * Set if data image is mounted.
     * User build and userdebug build mount data partition at different time.
     * But it should be done before boot finished, so this field is very likely
     * to be true.
     * We snapshot it here just in case someday we support snapshot during
     * booting.
     * </pre>
     *
     * <code>optional bool guest_data_partition_mounted = 8;</code>
     */
    boolean getGuestDataPartitionMounted();

    /**
     * <pre>
     * Emulator rotation angle, in right angles (e.g. 1 is 90 degrees, 2 is 180
     * etc).
     * </pre>
     *
     * <code>optional int32 rotation = 9;</code>
     */
    boolean hasRotation();
    /**
     * <pre>
     * Emulator rotation angle, in right angles (e.g. 1 is 90 degrees, 2 is 180
     * etc).
     * </pre>
     *
     * <code>optional int32 rotation = 9;</code>
     */
    int getRotation();

    /**
     * <pre>
     * Number of invalid loads / crashes that happened under this snapshot.
     * </pre>
     *
     * <code>optional int32 invalid_loads = 10;</code>
     */
    boolean hasInvalidLoads();
    /**
     * <pre>
     * Number of invalid loads / crashes that happened under this snapshot.
     * </pre>
     *
     * <code>optional int32 invalid_loads = 10;</code>
     */
    int getInvalidLoads();

    /**
     * <pre>
     * Number of successful loads.
     * </pre>
     *
     * <code>optional int32 successful_loads = 11;</code>
     */
    boolean hasSuccessfulLoads();
    /**
     * <pre>
     * Number of successful loads.
     * </pre>
     *
     * <code>optional int32 successful_loads = 11;</code>
     */
    int getSuccessfulLoads();

    /**
     * <pre>
     * The name given to the snapshot by the user. Independent of the
     * file name.
     * </pre>
     *
     * <code>optional string logical_name = 12;</code>
     */
    boolean hasLogicalName();
    /**
     * <pre>
     * The name given to the snapshot by the user. Independent of the
     * file name.
     * </pre>
     *
     * <code>optional string logical_name = 12;</code>
     */
    java.lang.String getLogicalName();
    /**
     * <pre>
     * The name given to the snapshot by the user. Independent of the
     * file name.
     * </pre>
     *
     * <code>optional string logical_name = 12;</code>
     */
    com.google.protobuf.ByteString
        getLogicalNameBytes();

    /**
     * <pre>
     * The file name of this snapshot's parent. The parent is the
     * snapshot that was loaded into the AVD prior to this snapshot
     * being taken
     * </pre>
     *
     * <code>optional string parent = 13;</code>
     */
    boolean hasParent();
    /**
     * <pre>
     * The file name of this snapshot's parent. The parent is the
     * snapshot that was loaded into the AVD prior to this snapshot
     * being taken
     * </pre>
     *
     * <code>optional string parent = 13;</code>
     */
    java.lang.String getParent();
    /**
     * <pre>
     * The file name of this snapshot's parent. The parent is the
     * snapshot that was loaded into the AVD prior to this snapshot
     * being taken
     * </pre>
     *
     * <code>optional string parent = 13;</code>
     */
    com.google.protobuf.ByteString
        getParentBytes();

    /**
     * <pre>
     * Arbitrary description added by the user
     * </pre>
     *
     * <code>optional string description = 14;</code>
     */
    boolean hasDescription();
    /**
     * <pre>
     * Arbitrary description added by the user
     * </pre>
     *
     * <code>optional string description = 14;</code>
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * Arbitrary description added by the user
     * </pre>
     *
     * <code>optional string description = 14;</code>
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * Record of save stats.
     * </pre>
     *
     * <code>repeated .emulator_snapshot.SaveStats save_stats = 15;</code>
     */
    java.util.List<com.android.emulator.SnapshotOuterClass.SaveStats> 
        getSaveStatsList();
    /**
     * <pre>
     * Record of save stats.
     * </pre>
     *
     * <code>repeated .emulator_snapshot.SaveStats save_stats = 15;</code>
     */
    com.android.emulator.SnapshotOuterClass.SaveStats getSaveStats(int index);
    /**
     * <pre>
     * Record of save stats.
     * </pre>
     *
     * <code>repeated .emulator_snapshot.SaveStats save_stats = 15;</code>
     */
    int getSaveStatsCount();
    /**
     * <pre>
     * Record of save stats.
     * </pre>
     *
     * <code>repeated .emulator_snapshot.SaveStats save_stats = 15;</code>
     */
    java.util.List<? extends com.android.emulator.SnapshotOuterClass.SaveStatsOrBuilder> 
        getSaveStatsOrBuilderList();
    /**
     * <pre>
     * Record of save stats.
     * </pre>
     *
     * <code>repeated .emulator_snapshot.SaveStats save_stats = 15;</code>
     */
    com.android.emulator.SnapshotOuterClass.SaveStatsOrBuilder getSaveStatsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code emulator_snapshot.Snapshot}
   */
  public  static final class Snapshot extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:emulator_snapshot.Snapshot)
      SnapshotOrBuilder {
    // Use Snapshot.newBuilder() to construct.
    private Snapshot(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Snapshot() {
      version_ = 0;
      creationTime_ = 0L;
      images_ = java.util.Collections.emptyList();
      failedToLoadReasonCode_ = 0L;
      guestDataPartitionMounted_ = false;
      rotation_ = 0;
      invalidLoads_ = 0;
      successfulLoads_ = 0;
      logicalName_ = "";
      parent_ = "";
      description_ = "";
      saveStats_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Snapshot(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              version_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              creationTime_ = input.readInt64();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                images_ = new java.util.ArrayList<com.android.emulator.SnapshotOuterClass.Image>();
                mutable_bitField0_ |= 0x00000004;
              }
              images_.add(input.readMessage(com.android.emulator.SnapshotOuterClass.Image.parser(), extensionRegistry));
              break;
            }
            case 34: {
              com.android.emulator.SnapshotOuterClass.Host.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = host_.toBuilder();
              }
              host_ = input.readMessage(com.android.emulator.SnapshotOuterClass.Host.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(host_);
                host_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 42: {
              com.android.emulator.SnapshotOuterClass.Config.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = config_.toBuilder();
              }
              config_ = input.readMessage(com.android.emulator.SnapshotOuterClass.Config.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(config_);
                config_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              failedToLoadReasonCode_ = input.readInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000020;
              guestDataPartitionMounted_ = input.readBool();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000040;
              rotation_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000080;
              invalidLoads_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000100;
              successfulLoads_ = input.readInt32();
              break;
            }
            case 98: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000200;
              logicalName_ = bs;
              break;
            }
            case 106: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000400;
              parent_ = bs;
              break;
            }
            case 114: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000800;
              description_ = bs;
              break;
            }
            case 122: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                saveStats_ = new java.util.ArrayList<com.android.emulator.SnapshotOuterClass.SaveStats>();
                mutable_bitField0_ |= 0x00002000;
              }
              saveStats_.add(input.readMessage(com.android.emulator.SnapshotOuterClass.SaveStats.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          images_ = java.util.Collections.unmodifiableList(images_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          saveStats_ = java.util.Collections.unmodifiableList(saveStats_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.android.emulator.SnapshotOuterClass.internal_static_emulator_snapshot_Snapshot_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.android.emulator.SnapshotOuterClass.internal_static_emulator_snapshot_Snapshot_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.android.emulator.SnapshotOuterClass.Snapshot.class, com.android.emulator.SnapshotOuterClass.Snapshot.Builder.class);
    }

    private int bitField0_;
    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    /**
     * <pre>
     * Update every time when introducing some breaking changes that make the
     * previous loading code break when trying to load the new snapshot.
     * NOTE: if the old code is fine with just skipping the new fields or not
     *       getting the meaning of new values, |version| should remain
     *       unchanged.
     * </pre>
     *
     * <code>optional int32 version = 1;</code>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Update every time when introducing some breaking changes that make the
     * previous loading code break when trying to load the new snapshot.
     * NOTE: if the old code is fine with just skipping the new fields or not
     *       getting the meaning of new values, |version| should remain
     *       unchanged.
     * </pre>
     *
     * <code>optional int32 version = 1;</code>
     */
    public int getVersion() {
      return version_;
    }

    public static final int CREATION_TIME_FIELD_NUMBER = 2;
    private long creationTime_;
    /**
     * <pre>
     * Purely informative: when this snapshot was created, Unix timestamp.
     * </pre>
     *
     * <code>optional int64 creation_time = 2;</code>
     */
    public boolean hasCreationTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Purely informative: when this snapshot was created, Unix timestamp.
     * </pre>
     *
     * <code>optional int64 creation_time = 2;</code>
     */
    public long getCreationTime() {
      return creationTime_;
    }

    public static final int IMAGES_FIELD_NUMBER = 3;
    private java.util.List<com.android.emulator.SnapshotOuterClass.Image> images_;
    /**
     * <pre>
     * List of mounted disk images used during the snapshot creation.
     * </pre>
     *
     * <code>repeated .emulator_snapshot.Image images = 3;</code>
     */
    public java.util.List<com.android.emulator.SnapshotOuterClass.Image> getImagesList() {
      return images_;
    }
    /**
     * <pre>
     * List of mounted disk images used during the snapshot creation.
     * </pre>
     *
     * <code>repeated .emulator_snapshot.Image images = 3;</code>
     */
    public java.util.List<? extends com.android.emulator.SnapshotOuterClass.ImageOrBuilder> 
        getImagesOrBuilderList() {
      return images_;
    }
    /**
     * <pre>
     * List of mounted disk images used during the snapshot creation.
     * </pre>
     *
     * <code>repeated .emulator_snapshot.Image images = 3;</code>
     */
    public int getImagesCount() {
      return images_.size();
    }
    /**
     * <pre>
     * List of mounted disk images used during the snapshot creation.
     * </pre>
     *
     * <code>repeated .emulator_snapshot.Image images = 3;</code>
     */
    public com.android.emulator.SnapshotOuterClass.Image getImages(int index) {
      return images_.get(index);
    }
    /**
     * <pre>
     * List of mounted disk images used during the snapshot creation.
     * </pre>
     *
     * <code>repeated .emulator_snapshot.Image images = 3;</code>
     */
    public com.android.emulator.SnapshotOuterClass.ImageOrBuilder getImagesOrBuilder(
        int index) {
      return images_.get(index);
    }

    public static final int HOST_FIELD_NUMBER = 4;
    private com.android.emulator.SnapshotOuterClass.Host host_;
    /**
     * <pre>
     * Description of the host machine properties needed to load this snapshot.
     * </pre>
     *
     * <code>optional .emulator_snapshot.Host host = 4;</code>
     */
    public boolean hasHost() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Description of the host machine properties needed to load this snapshot.
     * </pre>
     *
     * <code>optional .emulator_snapshot.Host host = 4;</code>
     */
    public com.android.emulator.SnapshotOuterClass.Host getHost() {
      return host_ == null ? com.android.emulator.SnapshotOuterClass.Host.getDefaultInstance() : host_;
    }
    /**
     * <pre>
     * Description of the host machine properties needed to load this snapshot.
     * </pre>
     *
     * <code>optional .emulator_snapshot.Host host = 4;</code>
     */
    public com.android.emulator.SnapshotOuterClass.HostOrBuilder getHostOrBuilder() {
      return host_ == null ? com.android.emulator.SnapshotOuterClass.Host.getDefaultInstance() : host_;
    }

    public static final int CONFIG_FIELD_NUMBER = 5;
    private com.android.emulator.SnapshotOuterClass.Config config_;
    /**
     * <pre>
     * Description of the emulator configuration needed for this snapshot.
     * NOTE: try not to duplicate the configuration that's already in
     *       hardware-qemu.ini; only add what's either not there or what
     *       could've been overridden during process initialization.
     * </pre>
     *
     * <code>optional .emulator_snapshot.Config config = 5;</code>
     */
    public boolean hasConfig() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Description of the emulator configuration needed for this snapshot.
     * NOTE: try not to duplicate the configuration that's already in
     *       hardware-qemu.ini; only add what's either not there or what
     *       could've been overridden during process initialization.
     * </pre>
     *
     * <code>optional .emulator_snapshot.Config config = 5;</code>
     */
    public com.android.emulator.SnapshotOuterClass.Config getConfig() {
      return config_ == null ? com.android.emulator.SnapshotOuterClass.Config.getDefaultInstance() : config_;
    }
    /**
     * <pre>
     * Description of the emulator configuration needed for this snapshot.
     * NOTE: try not to duplicate the configuration that's already in
     *       hardware-qemu.ini; only add what's either not there or what
     *       could've been overridden during process initialization.
     * </pre>
     *
     * <code>optional .emulator_snapshot.Config config = 5;</code>
     */
    public com.android.emulator.SnapshotOuterClass.ConfigOrBuilder getConfigOrBuilder() {
      return config_ == null ? com.android.emulator.SnapshotOuterClass.Config.getDefaultInstance() : config_;
    }

    public static final int FAILED_TO_LOAD_REASON_CODE_FIELD_NUMBER = 7;
    private long failedToLoadReasonCode_;
    /**
     * <pre>
     * Set if the snapshot failed to load during the last attempt.
     * Code is up to the application to define, with 0 meaning 'not failed' just
     * in case.
     * </pre>
     *
     * <code>optional int64 failed_to_load_reason_code = 7;</code>
     */
    public boolean hasFailedToLoadReasonCode() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * Set if the snapshot failed to load during the last attempt.
     * Code is up to the application to define, with 0 meaning 'not failed' just
     * in case.
     * </pre>
     *
     * <code>optional int64 failed_to_load_reason_code = 7;</code>
     */
    public long getFailedToLoadReasonCode() {
      return failedToLoadReasonCode_;
    }

    public static final int GUEST_DATA_PARTITION_MOUNTED_FIELD_NUMBER = 8;
    private boolean guestDataPartitionMounted_;
    /**
     * <pre>
     * Set if data image is mounted.
     * User build and userdebug build mount data partition at different time.
     * But it should be done before boot finished, so this field is very likely
     * to be true.
     * We snapshot it here just in case someday we support snapshot during
     * booting.
     * </pre>
     *
     * <code>optional bool guest_data_partition_mounted = 8;</code>
     */
    public boolean hasGuestDataPartitionMounted() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * Set if data image is mounted.
     * User build and userdebug build mount data partition at different time.
     * But it should be done before boot finished, so this field is very likely
     * to be true.
     * We snapshot it here just in case someday we support snapshot during
     * booting.
     * </pre>
     *
     * <code>optional bool guest_data_partition_mounted = 8;</code>
     */
    public boolean getGuestDataPartitionMounted() {
      return guestDataPartitionMounted_;
    }

    public static final int ROTATION_FIELD_NUMBER = 9;
    private int rotation_;
    /**
     * <pre>
     * Emulator rotation angle, in right angles (e.g. 1 is 90 degrees, 2 is 180
     * etc).
     * </pre>
     *
     * <code>optional int32 rotation = 9;</code>
     */
    public boolean hasRotation() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     * Emulator rotation angle, in right angles (e.g. 1 is 90 degrees, 2 is 180
     * etc).
     * </pre>
     *
     * <code>optional int32 rotation = 9;</code>
     */
    public int getRotation() {
      return rotation_;
    }

    public static final int INVALID_LOADS_FIELD_NUMBER = 10;
    private int invalidLoads_;
    /**
     * <pre>
     * Number of invalid loads / crashes that happened under this snapshot.
     * </pre>
     *
     * <code>optional int32 invalid_loads = 10;</code>
     */
    public boolean hasInvalidLoads() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     * Number of invalid loads / crashes that happened under this snapshot.
     * </pre>
     *
     * <code>optional int32 invalid_loads = 10;</code>
     */
    public int getInvalidLoads() {
      return invalidLoads_;
    }

    public static final int SUCCESSFUL_LOADS_FIELD_NUMBER = 11;
    private int successfulLoads_;
    /**
     * <pre>
     * Number of successful loads.
     * </pre>
     *
     * <code>optional int32 successful_loads = 11;</code>
     */
    public boolean hasSuccessfulLoads() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     * Number of successful loads.
     * </pre>
     *
     * <code>optional int32 successful_loads = 11;</code>
     */
    public int getSuccessfulLoads() {
      return successfulLoads_;
    }

    public static final int LOGICAL_NAME_FIELD_NUMBER = 12;
    private volatile java.lang.Object logicalName_;
    /**
     * <pre>
     * The name given to the snapshot by the user. Independent of the
     * file name.
     * </pre>
     *
     * <code>optional string logical_name = 12;</code>
     */
    public boolean hasLogicalName() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <pre>
     * The name given to the snapshot by the user. Independent of the
     * file name.
     * </pre>
     *
     * <code>optional string logical_name = 12;</code>
     */
    public java.lang.String getLogicalName() {
      java.lang.Object ref = logicalName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          logicalName_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * The name given to the snapshot by the user. Independent of the
     * file name.
     * </pre>
     *
     * <code>optional string logical_name = 12;</code>
     */
    public com.google.protobuf.ByteString
        getLogicalNameBytes() {
      java.lang.Object ref = logicalName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        logicalName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARENT_FIELD_NUMBER = 13;
    private volatile java.lang.Object parent_;
    /**
     * <pre>
     * The file name of this snapshot's parent. The parent is the
     * snapshot that was loaded into the AVD prior to this snapshot
     * being taken
     * </pre>
     *
     * <code>optional string parent = 13;</code>
     */
    public boolean hasParent() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <pre>
     * The file name of this snapshot's parent. The parent is the
     * snapshot that was loaded into the AVD prior to this snapshot
     * being taken
     * </pre>
     *
     * <code>optional string parent = 13;</code>
     */
    public java.lang.String getParent() {
      java.lang.Object ref = parent_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          parent_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * The file name of this snapshot's parent. The parent is the
     * snapshot that was loaded into the AVD prior to this snapshot
     * being taken
     * </pre>
     *
     * <code>optional string parent = 13;</code>
     */
    public com.google.protobuf.ByteString
        getParentBytes() {
      java.lang.Object ref = parent_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        parent_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 14;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * Arbitrary description added by the user
     * </pre>
     *
     * <code>optional string description = 14;</code>
     */
    public boolean hasDescription() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <pre>
     * Arbitrary description added by the user
     * </pre>
     *
     * <code>optional string description = 14;</code>
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          description_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Arbitrary description added by the user
     * </pre>
     *
     * <code>optional string description = 14;</code>
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SAVE_STATS_FIELD_NUMBER = 15;
    private java.util.List<com.android.emulator.SnapshotOuterClass.SaveStats> saveStats_;
    /**
     * <pre>
     * Record of save stats.
     * </pre>
     *
     * <code>repeated .emulator_snapshot.SaveStats save_stats = 15;</code>
     */
    public java.util.List<com.android.emulator.SnapshotOuterClass.SaveStats> getSaveStatsList() {
      return saveStats_;
    }
    /**
     * <pre>
     * Record of save stats.
     * </pre>
     *
     * <code>repeated .emulator_snapshot.SaveStats save_stats = 15;</code>
     */
    public java.util.List<? extends com.android.emulator.SnapshotOuterClass.SaveStatsOrBuilder> 
        getSaveStatsOrBuilderList() {
      return saveStats_;
    }
    /**
     * <pre>
     * Record of save stats.
     * </pre>
     *
     * <code>repeated .emulator_snapshot.SaveStats save_stats = 15;</code>
     */
    public int getSaveStatsCount() {
      return saveStats_.size();
    }
    /**
     * <pre>
     * Record of save stats.
     * </pre>
     *
     * <code>repeated .emulator_snapshot.SaveStats save_stats = 15;</code>
     */
    public com.android.emulator.SnapshotOuterClass.SaveStats getSaveStats(int index) {
      return saveStats_.get(index);
    }
    /**
     * <pre>
     * Record of save stats.
     * </pre>
     *
     * <code>repeated .emulator_snapshot.SaveStats save_stats = 15;</code>
     */
    public com.android.emulator.SnapshotOuterClass.SaveStatsOrBuilder getSaveStatsOrBuilder(
        int index) {
      return saveStats_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, creationTime_);
      }
      for (int i = 0; i < images_.size(); i++) {
        output.writeMessage(3, images_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(4, getHost());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(5, getConfig());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(7, failedToLoadReasonCode_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(8, guestDataPartitionMounted_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(9, rotation_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(10, invalidLoads_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(11, successfulLoads_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 12, logicalName_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 13, parent_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 14, description_);
      }
      for (int i = 0; i < saveStats_.size(); i++) {
        output.writeMessage(15, saveStats_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, creationTime_);
      }
      for (int i = 0; i < images_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, images_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getHost());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getConfig());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, failedToLoadReasonCode_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, guestDataPartitionMounted_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, rotation_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, invalidLoads_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, successfulLoads_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(12, logicalName_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(13, parent_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(14, description_);
      }
      for (int i = 0; i < saveStats_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, saveStats_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.android.emulator.SnapshotOuterClass.Snapshot parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.emulator.SnapshotOuterClass.Snapshot parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.emulator.SnapshotOuterClass.Snapshot parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.emulator.SnapshotOuterClass.Snapshot parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.emulator.SnapshotOuterClass.Snapshot parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.android.emulator.SnapshotOuterClass.Snapshot parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.android.emulator.SnapshotOuterClass.Snapshot parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.android.emulator.SnapshotOuterClass.Snapshot parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.android.emulator.SnapshotOuterClass.Snapshot parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.android.emulator.SnapshotOuterClass.Snapshot parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.emulator.SnapshotOuterClass.Snapshot prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code emulator_snapshot.Snapshot}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:emulator_snapshot.Snapshot)
        com.android.emulator.SnapshotOuterClass.SnapshotOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.android.emulator.SnapshotOuterClass.internal_static_emulator_snapshot_Snapshot_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.android.emulator.SnapshotOuterClass.internal_static_emulator_snapshot_Snapshot_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.android.emulator.SnapshotOuterClass.Snapshot.class, com.android.emulator.SnapshotOuterClass.Snapshot.Builder.class);
      }

      // Construct using com.android.emulator.SnapshotOuterClass.Snapshot.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getImagesFieldBuilder();
          getHostFieldBuilder();
          getConfigFieldBuilder();
          getSaveStatsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        version_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        creationTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (imagesBuilder_ == null) {
          images_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          imagesBuilder_.clear();
        }
        if (hostBuilder_ == null) {
          host_ = null;
        } else {
          hostBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (configBuilder_ == null) {
          config_ = null;
        } else {
          configBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        failedToLoadReasonCode_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        guestDataPartitionMounted_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        rotation_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        invalidLoads_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        successfulLoads_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        logicalName_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        parent_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        description_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        if (saveStatsBuilder_ == null) {
          saveStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
        } else {
          saveStatsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.android.emulator.SnapshotOuterClass.internal_static_emulator_snapshot_Snapshot_descriptor;
      }

      public com.android.emulator.SnapshotOuterClass.Snapshot getDefaultInstanceForType() {
        return com.android.emulator.SnapshotOuterClass.Snapshot.getDefaultInstance();
      }

      public com.android.emulator.SnapshotOuterClass.Snapshot build() {
        com.android.emulator.SnapshotOuterClass.Snapshot result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.android.emulator.SnapshotOuterClass.Snapshot buildPartial() {
        com.android.emulator.SnapshotOuterClass.Snapshot result = new com.android.emulator.SnapshotOuterClass.Snapshot(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.creationTime_ = creationTime_;
        if (imagesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            images_ = java.util.Collections.unmodifiableList(images_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.images_ = images_;
        } else {
          result.images_ = imagesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        if (hostBuilder_ == null) {
          result.host_ = host_;
        } else {
          result.host_ = hostBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        if (configBuilder_ == null) {
          result.config_ = config_;
        } else {
          result.config_ = configBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.failedToLoadReasonCode_ = failedToLoadReasonCode_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.guestDataPartitionMounted_ = guestDataPartitionMounted_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.rotation_ = rotation_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.invalidLoads_ = invalidLoads_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.successfulLoads_ = successfulLoads_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.logicalName_ = logicalName_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.parent_ = parent_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.description_ = description_;
        if (saveStatsBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000)) {
            saveStats_ = java.util.Collections.unmodifiableList(saveStats_);
            bitField0_ = (bitField0_ & ~0x00002000);
          }
          result.saveStats_ = saveStats_;
        } else {
          result.saveStats_ = saveStatsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.android.emulator.SnapshotOuterClass.Snapshot) {
          return mergeFrom((com.android.emulator.SnapshotOuterClass.Snapshot)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.android.emulator.SnapshotOuterClass.Snapshot other) {
        if (other == com.android.emulator.SnapshotOuterClass.Snapshot.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasCreationTime()) {
          setCreationTime(other.getCreationTime());
        }
        if (imagesBuilder_ == null) {
          if (!other.images_.isEmpty()) {
            if (images_.isEmpty()) {
              images_ = other.images_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureImagesIsMutable();
              images_.addAll(other.images_);
            }
            onChanged();
          }
        } else {
          if (!other.images_.isEmpty()) {
            if (imagesBuilder_.isEmpty()) {
              imagesBuilder_.dispose();
              imagesBuilder_ = null;
              images_ = other.images_;
              bitField0_ = (bitField0_ & ~0x00000004);
              imagesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getImagesFieldBuilder() : null;
            } else {
              imagesBuilder_.addAllMessages(other.images_);
            }
          }
        }
        if (other.hasHost()) {
          mergeHost(other.getHost());
        }
        if (other.hasConfig()) {
          mergeConfig(other.getConfig());
        }
        if (other.hasFailedToLoadReasonCode()) {
          setFailedToLoadReasonCode(other.getFailedToLoadReasonCode());
        }
        if (other.hasGuestDataPartitionMounted()) {
          setGuestDataPartitionMounted(other.getGuestDataPartitionMounted());
        }
        if (other.hasRotation()) {
          setRotation(other.getRotation());
        }
        if (other.hasInvalidLoads()) {
          setInvalidLoads(other.getInvalidLoads());
        }
        if (other.hasSuccessfulLoads()) {
          setSuccessfulLoads(other.getSuccessfulLoads());
        }
        if (other.hasLogicalName()) {
          bitField0_ |= 0x00000400;
          logicalName_ = other.logicalName_;
          onChanged();
        }
        if (other.hasParent()) {
          bitField0_ |= 0x00000800;
          parent_ = other.parent_;
          onChanged();
        }
        if (other.hasDescription()) {
          bitField0_ |= 0x00001000;
          description_ = other.description_;
          onChanged();
        }
        if (saveStatsBuilder_ == null) {
          if (!other.saveStats_.isEmpty()) {
            if (saveStats_.isEmpty()) {
              saveStats_ = other.saveStats_;
              bitField0_ = (bitField0_ & ~0x00002000);
            } else {
              ensureSaveStatsIsMutable();
              saveStats_.addAll(other.saveStats_);
            }
            onChanged();
          }
        } else {
          if (!other.saveStats_.isEmpty()) {
            if (saveStatsBuilder_.isEmpty()) {
              saveStatsBuilder_.dispose();
              saveStatsBuilder_ = null;
              saveStats_ = other.saveStats_;
              bitField0_ = (bitField0_ & ~0x00002000);
              saveStatsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSaveStatsFieldBuilder() : null;
            } else {
              saveStatsBuilder_.addAllMessages(other.saveStats_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.android.emulator.SnapshotOuterClass.Snapshot parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.android.emulator.SnapshotOuterClass.Snapshot) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int version_ ;
      /**
       * <pre>
       * Update every time when introducing some breaking changes that make the
       * previous loading code break when trying to load the new snapshot.
       * NOTE: if the old code is fine with just skipping the new fields or not
       *       getting the meaning of new values, |version| should remain
       *       unchanged.
       * </pre>
       *
       * <code>optional int32 version = 1;</code>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Update every time when introducing some breaking changes that make the
       * previous loading code break when trying to load the new snapshot.
       * NOTE: if the old code is fine with just skipping the new fields or not
       *       getting the meaning of new values, |version| should remain
       *       unchanged.
       * </pre>
       *
       * <code>optional int32 version = 1;</code>
       */
      public int getVersion() {
        return version_;
      }
      /**
       * <pre>
       * Update every time when introducing some breaking changes that make the
       * previous loading code break when trying to load the new snapshot.
       * NOTE: if the old code is fine with just skipping the new fields or not
       *       getting the meaning of new values, |version| should remain
       *       unchanged.
       * </pre>
       *
       * <code>optional int32 version = 1;</code>
       */
      public Builder setVersion(int value) {
        bitField0_ |= 0x00000001;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Update every time when introducing some breaking changes that make the
       * previous loading code break when trying to load the new snapshot.
       * NOTE: if the old code is fine with just skipping the new fields or not
       *       getting the meaning of new values, |version| should remain
       *       unchanged.
       * </pre>
       *
       * <code>optional int32 version = 1;</code>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = 0;
        onChanged();
        return this;
      }

      private long creationTime_ ;
      /**
       * <pre>
       * Purely informative: when this snapshot was created, Unix timestamp.
       * </pre>
       *
       * <code>optional int64 creation_time = 2;</code>
       */
      public boolean hasCreationTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Purely informative: when this snapshot was created, Unix timestamp.
       * </pre>
       *
       * <code>optional int64 creation_time = 2;</code>
       */
      public long getCreationTime() {
        return creationTime_;
      }
      /**
       * <pre>
       * Purely informative: when this snapshot was created, Unix timestamp.
       * </pre>
       *
       * <code>optional int64 creation_time = 2;</code>
       */
      public Builder setCreationTime(long value) {
        bitField0_ |= 0x00000002;
        creationTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Purely informative: when this snapshot was created, Unix timestamp.
       * </pre>
       *
       * <code>optional int64 creation_time = 2;</code>
       */
      public Builder clearCreationTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        creationTime_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<com.android.emulator.SnapshotOuterClass.Image> images_ =
        java.util.Collections.emptyList();
      private void ensureImagesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          images_ = new java.util.ArrayList<com.android.emulator.SnapshotOuterClass.Image>(images_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.android.emulator.SnapshotOuterClass.Image, com.android.emulator.SnapshotOuterClass.Image.Builder, com.android.emulator.SnapshotOuterClass.ImageOrBuilder> imagesBuilder_;

      /**
       * <pre>
       * List of mounted disk images used during the snapshot creation.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.Image images = 3;</code>
       */
      public java.util.List<com.android.emulator.SnapshotOuterClass.Image> getImagesList() {
        if (imagesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(images_);
        } else {
          return imagesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of mounted disk images used during the snapshot creation.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.Image images = 3;</code>
       */
      public int getImagesCount() {
        if (imagesBuilder_ == null) {
          return images_.size();
        } else {
          return imagesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of mounted disk images used during the snapshot creation.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.Image images = 3;</code>
       */
      public com.android.emulator.SnapshotOuterClass.Image getImages(int index) {
        if (imagesBuilder_ == null) {
          return images_.get(index);
        } else {
          return imagesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of mounted disk images used during the snapshot creation.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.Image images = 3;</code>
       */
      public Builder setImages(
          int index, com.android.emulator.SnapshotOuterClass.Image value) {
        if (imagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureImagesIsMutable();
          images_.set(index, value);
          onChanged();
        } else {
          imagesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of mounted disk images used during the snapshot creation.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.Image images = 3;</code>
       */
      public Builder setImages(
          int index, com.android.emulator.SnapshotOuterClass.Image.Builder builderForValue) {
        if (imagesBuilder_ == null) {
          ensureImagesIsMutable();
          images_.set(index, builderForValue.build());
          onChanged();
        } else {
          imagesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of mounted disk images used during the snapshot creation.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.Image images = 3;</code>
       */
      public Builder addImages(com.android.emulator.SnapshotOuterClass.Image value) {
        if (imagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureImagesIsMutable();
          images_.add(value);
          onChanged();
        } else {
          imagesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of mounted disk images used during the snapshot creation.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.Image images = 3;</code>
       */
      public Builder addImages(
          int index, com.android.emulator.SnapshotOuterClass.Image value) {
        if (imagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureImagesIsMutable();
          images_.add(index, value);
          onChanged();
        } else {
          imagesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of mounted disk images used during the snapshot creation.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.Image images = 3;</code>
       */
      public Builder addImages(
          com.android.emulator.SnapshotOuterClass.Image.Builder builderForValue) {
        if (imagesBuilder_ == null) {
          ensureImagesIsMutable();
          images_.add(builderForValue.build());
          onChanged();
        } else {
          imagesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of mounted disk images used during the snapshot creation.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.Image images = 3;</code>
       */
      public Builder addImages(
          int index, com.android.emulator.SnapshotOuterClass.Image.Builder builderForValue) {
        if (imagesBuilder_ == null) {
          ensureImagesIsMutable();
          images_.add(index, builderForValue.build());
          onChanged();
        } else {
          imagesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of mounted disk images used during the snapshot creation.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.Image images = 3;</code>
       */
      public Builder addAllImages(
          java.lang.Iterable<? extends com.android.emulator.SnapshotOuterClass.Image> values) {
        if (imagesBuilder_ == null) {
          ensureImagesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, images_);
          onChanged();
        } else {
          imagesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of mounted disk images used during the snapshot creation.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.Image images = 3;</code>
       */
      public Builder clearImages() {
        if (imagesBuilder_ == null) {
          images_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          imagesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of mounted disk images used during the snapshot creation.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.Image images = 3;</code>
       */
      public Builder removeImages(int index) {
        if (imagesBuilder_ == null) {
          ensureImagesIsMutable();
          images_.remove(index);
          onChanged();
        } else {
          imagesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of mounted disk images used during the snapshot creation.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.Image images = 3;</code>
       */
      public com.android.emulator.SnapshotOuterClass.Image.Builder getImagesBuilder(
          int index) {
        return getImagesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of mounted disk images used during the snapshot creation.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.Image images = 3;</code>
       */
      public com.android.emulator.SnapshotOuterClass.ImageOrBuilder getImagesOrBuilder(
          int index) {
        if (imagesBuilder_ == null) {
          return images_.get(index);  } else {
          return imagesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of mounted disk images used during the snapshot creation.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.Image images = 3;</code>
       */
      public java.util.List<? extends com.android.emulator.SnapshotOuterClass.ImageOrBuilder> 
           getImagesOrBuilderList() {
        if (imagesBuilder_ != null) {
          return imagesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(images_);
        }
      }
      /**
       * <pre>
       * List of mounted disk images used during the snapshot creation.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.Image images = 3;</code>
       */
      public com.android.emulator.SnapshotOuterClass.Image.Builder addImagesBuilder() {
        return getImagesFieldBuilder().addBuilder(
            com.android.emulator.SnapshotOuterClass.Image.getDefaultInstance());
      }
      /**
       * <pre>
       * List of mounted disk images used during the snapshot creation.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.Image images = 3;</code>
       */
      public com.android.emulator.SnapshotOuterClass.Image.Builder addImagesBuilder(
          int index) {
        return getImagesFieldBuilder().addBuilder(
            index, com.android.emulator.SnapshotOuterClass.Image.getDefaultInstance());
      }
      /**
       * <pre>
       * List of mounted disk images used during the snapshot creation.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.Image images = 3;</code>
       */
      public java.util.List<com.android.emulator.SnapshotOuterClass.Image.Builder> 
           getImagesBuilderList() {
        return getImagesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.android.emulator.SnapshotOuterClass.Image, com.android.emulator.SnapshotOuterClass.Image.Builder, com.android.emulator.SnapshotOuterClass.ImageOrBuilder> 
          getImagesFieldBuilder() {
        if (imagesBuilder_ == null) {
          imagesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.android.emulator.SnapshotOuterClass.Image, com.android.emulator.SnapshotOuterClass.Image.Builder, com.android.emulator.SnapshotOuterClass.ImageOrBuilder>(
                  images_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          images_ = null;
        }
        return imagesBuilder_;
      }

      private com.android.emulator.SnapshotOuterClass.Host host_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          com.android.emulator.SnapshotOuterClass.Host, com.android.emulator.SnapshotOuterClass.Host.Builder, com.android.emulator.SnapshotOuterClass.HostOrBuilder> hostBuilder_;
      /**
       * <pre>
       * Description of the host machine properties needed to load this snapshot.
       * </pre>
       *
       * <code>optional .emulator_snapshot.Host host = 4;</code>
       */
      public boolean hasHost() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * Description of the host machine properties needed to load this snapshot.
       * </pre>
       *
       * <code>optional .emulator_snapshot.Host host = 4;</code>
       */
      public com.android.emulator.SnapshotOuterClass.Host getHost() {
        if (hostBuilder_ == null) {
          return host_ == null ? com.android.emulator.SnapshotOuterClass.Host.getDefaultInstance() : host_;
        } else {
          return hostBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Description of the host machine properties needed to load this snapshot.
       * </pre>
       *
       * <code>optional .emulator_snapshot.Host host = 4;</code>
       */
      public Builder setHost(com.android.emulator.SnapshotOuterClass.Host value) {
        if (hostBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          host_ = value;
          onChanged();
        } else {
          hostBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Description of the host machine properties needed to load this snapshot.
       * </pre>
       *
       * <code>optional .emulator_snapshot.Host host = 4;</code>
       */
      public Builder setHost(
          com.android.emulator.SnapshotOuterClass.Host.Builder builderForValue) {
        if (hostBuilder_ == null) {
          host_ = builderForValue.build();
          onChanged();
        } else {
          hostBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Description of the host machine properties needed to load this snapshot.
       * </pre>
       *
       * <code>optional .emulator_snapshot.Host host = 4;</code>
       */
      public Builder mergeHost(com.android.emulator.SnapshotOuterClass.Host value) {
        if (hostBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              host_ != null &&
              host_ != com.android.emulator.SnapshotOuterClass.Host.getDefaultInstance()) {
            host_ =
              com.android.emulator.SnapshotOuterClass.Host.newBuilder(host_).mergeFrom(value).buildPartial();
          } else {
            host_ = value;
          }
          onChanged();
        } else {
          hostBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Description of the host machine properties needed to load this snapshot.
       * </pre>
       *
       * <code>optional .emulator_snapshot.Host host = 4;</code>
       */
      public Builder clearHost() {
        if (hostBuilder_ == null) {
          host_ = null;
          onChanged();
        } else {
          hostBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <pre>
       * Description of the host machine properties needed to load this snapshot.
       * </pre>
       *
       * <code>optional .emulator_snapshot.Host host = 4;</code>
       */
      public com.android.emulator.SnapshotOuterClass.Host.Builder getHostBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getHostFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Description of the host machine properties needed to load this snapshot.
       * </pre>
       *
       * <code>optional .emulator_snapshot.Host host = 4;</code>
       */
      public com.android.emulator.SnapshotOuterClass.HostOrBuilder getHostOrBuilder() {
        if (hostBuilder_ != null) {
          return hostBuilder_.getMessageOrBuilder();
        } else {
          return host_ == null ?
              com.android.emulator.SnapshotOuterClass.Host.getDefaultInstance() : host_;
        }
      }
      /**
       * <pre>
       * Description of the host machine properties needed to load this snapshot.
       * </pre>
       *
       * <code>optional .emulator_snapshot.Host host = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.android.emulator.SnapshotOuterClass.Host, com.android.emulator.SnapshotOuterClass.Host.Builder, com.android.emulator.SnapshotOuterClass.HostOrBuilder> 
          getHostFieldBuilder() {
        if (hostBuilder_ == null) {
          hostBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.android.emulator.SnapshotOuterClass.Host, com.android.emulator.SnapshotOuterClass.Host.Builder, com.android.emulator.SnapshotOuterClass.HostOrBuilder>(
                  getHost(),
                  getParentForChildren(),
                  isClean());
          host_ = null;
        }
        return hostBuilder_;
      }

      private com.android.emulator.SnapshotOuterClass.Config config_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          com.android.emulator.SnapshotOuterClass.Config, com.android.emulator.SnapshotOuterClass.Config.Builder, com.android.emulator.SnapshotOuterClass.ConfigOrBuilder> configBuilder_;
      /**
       * <pre>
       * Description of the emulator configuration needed for this snapshot.
       * NOTE: try not to duplicate the configuration that's already in
       *       hardware-qemu.ini; only add what's either not there or what
       *       could've been overridden during process initialization.
       * </pre>
       *
       * <code>optional .emulator_snapshot.Config config = 5;</code>
       */
      public boolean hasConfig() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       * Description of the emulator configuration needed for this snapshot.
       * NOTE: try not to duplicate the configuration that's already in
       *       hardware-qemu.ini; only add what's either not there or what
       *       could've been overridden during process initialization.
       * </pre>
       *
       * <code>optional .emulator_snapshot.Config config = 5;</code>
       */
      public com.android.emulator.SnapshotOuterClass.Config getConfig() {
        if (configBuilder_ == null) {
          return config_ == null ? com.android.emulator.SnapshotOuterClass.Config.getDefaultInstance() : config_;
        } else {
          return configBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Description of the emulator configuration needed for this snapshot.
       * NOTE: try not to duplicate the configuration that's already in
       *       hardware-qemu.ini; only add what's either not there or what
       *       could've been overridden during process initialization.
       * </pre>
       *
       * <code>optional .emulator_snapshot.Config config = 5;</code>
       */
      public Builder setConfig(com.android.emulator.SnapshotOuterClass.Config value) {
        if (configBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          config_ = value;
          onChanged();
        } else {
          configBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       * Description of the emulator configuration needed for this snapshot.
       * NOTE: try not to duplicate the configuration that's already in
       *       hardware-qemu.ini; only add what's either not there or what
       *       could've been overridden during process initialization.
       * </pre>
       *
       * <code>optional .emulator_snapshot.Config config = 5;</code>
       */
      public Builder setConfig(
          com.android.emulator.SnapshotOuterClass.Config.Builder builderForValue) {
        if (configBuilder_ == null) {
          config_ = builderForValue.build();
          onChanged();
        } else {
          configBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       * Description of the emulator configuration needed for this snapshot.
       * NOTE: try not to duplicate the configuration that's already in
       *       hardware-qemu.ini; only add what's either not there or what
       *       could've been overridden during process initialization.
       * </pre>
       *
       * <code>optional .emulator_snapshot.Config config = 5;</code>
       */
      public Builder mergeConfig(com.android.emulator.SnapshotOuterClass.Config value) {
        if (configBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              config_ != null &&
              config_ != com.android.emulator.SnapshotOuterClass.Config.getDefaultInstance()) {
            config_ =
              com.android.emulator.SnapshotOuterClass.Config.newBuilder(config_).mergeFrom(value).buildPartial();
          } else {
            config_ = value;
          }
          onChanged();
        } else {
          configBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       * Description of the emulator configuration needed for this snapshot.
       * NOTE: try not to duplicate the configuration that's already in
       *       hardware-qemu.ini; only add what's either not there or what
       *       could've been overridden during process initialization.
       * </pre>
       *
       * <code>optional .emulator_snapshot.Config config = 5;</code>
       */
      public Builder clearConfig() {
        if (configBuilder_ == null) {
          config_ = null;
          onChanged();
        } else {
          configBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <pre>
       * Description of the emulator configuration needed for this snapshot.
       * NOTE: try not to duplicate the configuration that's already in
       *       hardware-qemu.ini; only add what's either not there or what
       *       could've been overridden during process initialization.
       * </pre>
       *
       * <code>optional .emulator_snapshot.Config config = 5;</code>
       */
      public com.android.emulator.SnapshotOuterClass.Config.Builder getConfigBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Description of the emulator configuration needed for this snapshot.
       * NOTE: try not to duplicate the configuration that's already in
       *       hardware-qemu.ini; only add what's either not there or what
       *       could've been overridden during process initialization.
       * </pre>
       *
       * <code>optional .emulator_snapshot.Config config = 5;</code>
       */
      public com.android.emulator.SnapshotOuterClass.ConfigOrBuilder getConfigOrBuilder() {
        if (configBuilder_ != null) {
          return configBuilder_.getMessageOrBuilder();
        } else {
          return config_ == null ?
              com.android.emulator.SnapshotOuterClass.Config.getDefaultInstance() : config_;
        }
      }
      /**
       * <pre>
       * Description of the emulator configuration needed for this snapshot.
       * NOTE: try not to duplicate the configuration that's already in
       *       hardware-qemu.ini; only add what's either not there or what
       *       could've been overridden during process initialization.
       * </pre>
       *
       * <code>optional .emulator_snapshot.Config config = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.android.emulator.SnapshotOuterClass.Config, com.android.emulator.SnapshotOuterClass.Config.Builder, com.android.emulator.SnapshotOuterClass.ConfigOrBuilder> 
          getConfigFieldBuilder() {
        if (configBuilder_ == null) {
          configBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.android.emulator.SnapshotOuterClass.Config, com.android.emulator.SnapshotOuterClass.Config.Builder, com.android.emulator.SnapshotOuterClass.ConfigOrBuilder>(
                  getConfig(),
                  getParentForChildren(),
                  isClean());
          config_ = null;
        }
        return configBuilder_;
      }

      private long failedToLoadReasonCode_ ;
      /**
       * <pre>
       * Set if the snapshot failed to load during the last attempt.
       * Code is up to the application to define, with 0 meaning 'not failed' just
       * in case.
       * </pre>
       *
       * <code>optional int64 failed_to_load_reason_code = 7;</code>
       */
      public boolean hasFailedToLoadReasonCode() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       * Set if the snapshot failed to load during the last attempt.
       * Code is up to the application to define, with 0 meaning 'not failed' just
       * in case.
       * </pre>
       *
       * <code>optional int64 failed_to_load_reason_code = 7;</code>
       */
      public long getFailedToLoadReasonCode() {
        return failedToLoadReasonCode_;
      }
      /**
       * <pre>
       * Set if the snapshot failed to load during the last attempt.
       * Code is up to the application to define, with 0 meaning 'not failed' just
       * in case.
       * </pre>
       *
       * <code>optional int64 failed_to_load_reason_code = 7;</code>
       */
      public Builder setFailedToLoadReasonCode(long value) {
        bitField0_ |= 0x00000020;
        failedToLoadReasonCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Set if the snapshot failed to load during the last attempt.
       * Code is up to the application to define, with 0 meaning 'not failed' just
       * in case.
       * </pre>
       *
       * <code>optional int64 failed_to_load_reason_code = 7;</code>
       */
      public Builder clearFailedToLoadReasonCode() {
        bitField0_ = (bitField0_ & ~0x00000020);
        failedToLoadReasonCode_ = 0L;
        onChanged();
        return this;
      }

      private boolean guestDataPartitionMounted_ ;
      /**
       * <pre>
       * Set if data image is mounted.
       * User build and userdebug build mount data partition at different time.
       * But it should be done before boot finished, so this field is very likely
       * to be true.
       * We snapshot it here just in case someday we support snapshot during
       * booting.
       * </pre>
       *
       * <code>optional bool guest_data_partition_mounted = 8;</code>
       */
      public boolean hasGuestDataPartitionMounted() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       * Set if data image is mounted.
       * User build and userdebug build mount data partition at different time.
       * But it should be done before boot finished, so this field is very likely
       * to be true.
       * We snapshot it here just in case someday we support snapshot during
       * booting.
       * </pre>
       *
       * <code>optional bool guest_data_partition_mounted = 8;</code>
       */
      public boolean getGuestDataPartitionMounted() {
        return guestDataPartitionMounted_;
      }
      /**
       * <pre>
       * Set if data image is mounted.
       * User build and userdebug build mount data partition at different time.
       * But it should be done before boot finished, so this field is very likely
       * to be true.
       * We snapshot it here just in case someday we support snapshot during
       * booting.
       * </pre>
       *
       * <code>optional bool guest_data_partition_mounted = 8;</code>
       */
      public Builder setGuestDataPartitionMounted(boolean value) {
        bitField0_ |= 0x00000040;
        guestDataPartitionMounted_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Set if data image is mounted.
       * User build and userdebug build mount data partition at different time.
       * But it should be done before boot finished, so this field is very likely
       * to be true.
       * We snapshot it here just in case someday we support snapshot during
       * booting.
       * </pre>
       *
       * <code>optional bool guest_data_partition_mounted = 8;</code>
       */
      public Builder clearGuestDataPartitionMounted() {
        bitField0_ = (bitField0_ & ~0x00000040);
        guestDataPartitionMounted_ = false;
        onChanged();
        return this;
      }

      private int rotation_ ;
      /**
       * <pre>
       * Emulator rotation angle, in right angles (e.g. 1 is 90 degrees, 2 is 180
       * etc).
       * </pre>
       *
       * <code>optional int32 rotation = 9;</code>
       */
      public boolean hasRotation() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       * Emulator rotation angle, in right angles (e.g. 1 is 90 degrees, 2 is 180
       * etc).
       * </pre>
       *
       * <code>optional int32 rotation = 9;</code>
       */
      public int getRotation() {
        return rotation_;
      }
      /**
       * <pre>
       * Emulator rotation angle, in right angles (e.g. 1 is 90 degrees, 2 is 180
       * etc).
       * </pre>
       *
       * <code>optional int32 rotation = 9;</code>
       */
      public Builder setRotation(int value) {
        bitField0_ |= 0x00000080;
        rotation_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Emulator rotation angle, in right angles (e.g. 1 is 90 degrees, 2 is 180
       * etc).
       * </pre>
       *
       * <code>optional int32 rotation = 9;</code>
       */
      public Builder clearRotation() {
        bitField0_ = (bitField0_ & ~0x00000080);
        rotation_ = 0;
        onChanged();
        return this;
      }

      private int invalidLoads_ ;
      /**
       * <pre>
       * Number of invalid loads / crashes that happened under this snapshot.
       * </pre>
       *
       * <code>optional int32 invalid_loads = 10;</code>
       */
      public boolean hasInvalidLoads() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <pre>
       * Number of invalid loads / crashes that happened under this snapshot.
       * </pre>
       *
       * <code>optional int32 invalid_loads = 10;</code>
       */
      public int getInvalidLoads() {
        return invalidLoads_;
      }
      /**
       * <pre>
       * Number of invalid loads / crashes that happened under this snapshot.
       * </pre>
       *
       * <code>optional int32 invalid_loads = 10;</code>
       */
      public Builder setInvalidLoads(int value) {
        bitField0_ |= 0x00000100;
        invalidLoads_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of invalid loads / crashes that happened under this snapshot.
       * </pre>
       *
       * <code>optional int32 invalid_loads = 10;</code>
       */
      public Builder clearInvalidLoads() {
        bitField0_ = (bitField0_ & ~0x00000100);
        invalidLoads_ = 0;
        onChanged();
        return this;
      }

      private int successfulLoads_ ;
      /**
       * <pre>
       * Number of successful loads.
       * </pre>
       *
       * <code>optional int32 successful_loads = 11;</code>
       */
      public boolean hasSuccessfulLoads() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <pre>
       * Number of successful loads.
       * </pre>
       *
       * <code>optional int32 successful_loads = 11;</code>
       */
      public int getSuccessfulLoads() {
        return successfulLoads_;
      }
      /**
       * <pre>
       * Number of successful loads.
       * </pre>
       *
       * <code>optional int32 successful_loads = 11;</code>
       */
      public Builder setSuccessfulLoads(int value) {
        bitField0_ |= 0x00000200;
        successfulLoads_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of successful loads.
       * </pre>
       *
       * <code>optional int32 successful_loads = 11;</code>
       */
      public Builder clearSuccessfulLoads() {
        bitField0_ = (bitField0_ & ~0x00000200);
        successfulLoads_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object logicalName_ = "";
      /**
       * <pre>
       * The name given to the snapshot by the user. Independent of the
       * file name.
       * </pre>
       *
       * <code>optional string logical_name = 12;</code>
       */
      public boolean hasLogicalName() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <pre>
       * The name given to the snapshot by the user. Independent of the
       * file name.
       * </pre>
       *
       * <code>optional string logical_name = 12;</code>
       */
      public java.lang.String getLogicalName() {
        java.lang.Object ref = logicalName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            logicalName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name given to the snapshot by the user. Independent of the
       * file name.
       * </pre>
       *
       * <code>optional string logical_name = 12;</code>
       */
      public com.google.protobuf.ByteString
          getLogicalNameBytes() {
        java.lang.Object ref = logicalName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          logicalName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name given to the snapshot by the user. Independent of the
       * file name.
       * </pre>
       *
       * <code>optional string logical_name = 12;</code>
       */
      public Builder setLogicalName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        logicalName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name given to the snapshot by the user. Independent of the
       * file name.
       * </pre>
       *
       * <code>optional string logical_name = 12;</code>
       */
      public Builder clearLogicalName() {
        bitField0_ = (bitField0_ & ~0x00000400);
        logicalName_ = getDefaultInstance().getLogicalName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name given to the snapshot by the user. Independent of the
       * file name.
       * </pre>
       *
       * <code>optional string logical_name = 12;</code>
       */
      public Builder setLogicalNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        logicalName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object parent_ = "";
      /**
       * <pre>
       * The file name of this snapshot's parent. The parent is the
       * snapshot that was loaded into the AVD prior to this snapshot
       * being taken
       * </pre>
       *
       * <code>optional string parent = 13;</code>
       */
      public boolean hasParent() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <pre>
       * The file name of this snapshot's parent. The parent is the
       * snapshot that was loaded into the AVD prior to this snapshot
       * being taken
       * </pre>
       *
       * <code>optional string parent = 13;</code>
       */
      public java.lang.String getParent() {
        java.lang.Object ref = parent_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            parent_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The file name of this snapshot's parent. The parent is the
       * snapshot that was loaded into the AVD prior to this snapshot
       * being taken
       * </pre>
       *
       * <code>optional string parent = 13;</code>
       */
      public com.google.protobuf.ByteString
          getParentBytes() {
        java.lang.Object ref = parent_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          parent_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The file name of this snapshot's parent. The parent is the
       * snapshot that was loaded into the AVD prior to this snapshot
       * being taken
       * </pre>
       *
       * <code>optional string parent = 13;</code>
       */
      public Builder setParent(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        parent_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The file name of this snapshot's parent. The parent is the
       * snapshot that was loaded into the AVD prior to this snapshot
       * being taken
       * </pre>
       *
       * <code>optional string parent = 13;</code>
       */
      public Builder clearParent() {
        bitField0_ = (bitField0_ & ~0x00000800);
        parent_ = getDefaultInstance().getParent();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The file name of this snapshot's parent. The parent is the
       * snapshot that was loaded into the AVD prior to this snapshot
       * being taken
       * </pre>
       *
       * <code>optional string parent = 13;</code>
       */
      public Builder setParentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        parent_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * Arbitrary description added by the user
       * </pre>
       *
       * <code>optional string description = 14;</code>
       */
      public boolean hasDescription() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <pre>
       * Arbitrary description added by the user
       * </pre>
       *
       * <code>optional string description = 14;</code>
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            description_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Arbitrary description added by the user
       * </pre>
       *
       * <code>optional string description = 14;</code>
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Arbitrary description added by the user
       * </pre>
       *
       * <code>optional string description = 14;</code>
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Arbitrary description added by the user
       * </pre>
       *
       * <code>optional string description = 14;</code>
       */
      public Builder clearDescription() {
        bitField0_ = (bitField0_ & ~0x00001000);
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Arbitrary description added by the user
       * </pre>
       *
       * <code>optional string description = 14;</code>
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        description_ = value;
        onChanged();
        return this;
      }

      private java.util.List<com.android.emulator.SnapshotOuterClass.SaveStats> saveStats_ =
        java.util.Collections.emptyList();
      private void ensureSaveStatsIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          saveStats_ = new java.util.ArrayList<com.android.emulator.SnapshotOuterClass.SaveStats>(saveStats_);
          bitField0_ |= 0x00002000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.android.emulator.SnapshotOuterClass.SaveStats, com.android.emulator.SnapshotOuterClass.SaveStats.Builder, com.android.emulator.SnapshotOuterClass.SaveStatsOrBuilder> saveStatsBuilder_;

      /**
       * <pre>
       * Record of save stats.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.SaveStats save_stats = 15;</code>
       */
      public java.util.List<com.android.emulator.SnapshotOuterClass.SaveStats> getSaveStatsList() {
        if (saveStatsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(saveStats_);
        } else {
          return saveStatsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Record of save stats.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.SaveStats save_stats = 15;</code>
       */
      public int getSaveStatsCount() {
        if (saveStatsBuilder_ == null) {
          return saveStats_.size();
        } else {
          return saveStatsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Record of save stats.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.SaveStats save_stats = 15;</code>
       */
      public com.android.emulator.SnapshotOuterClass.SaveStats getSaveStats(int index) {
        if (saveStatsBuilder_ == null) {
          return saveStats_.get(index);
        } else {
          return saveStatsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Record of save stats.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.SaveStats save_stats = 15;</code>
       */
      public Builder setSaveStats(
          int index, com.android.emulator.SnapshotOuterClass.SaveStats value) {
        if (saveStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSaveStatsIsMutable();
          saveStats_.set(index, value);
          onChanged();
        } else {
          saveStatsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Record of save stats.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.SaveStats save_stats = 15;</code>
       */
      public Builder setSaveStats(
          int index, com.android.emulator.SnapshotOuterClass.SaveStats.Builder builderForValue) {
        if (saveStatsBuilder_ == null) {
          ensureSaveStatsIsMutable();
          saveStats_.set(index, builderForValue.build());
          onChanged();
        } else {
          saveStatsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Record of save stats.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.SaveStats save_stats = 15;</code>
       */
      public Builder addSaveStats(com.android.emulator.SnapshotOuterClass.SaveStats value) {
        if (saveStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSaveStatsIsMutable();
          saveStats_.add(value);
          onChanged();
        } else {
          saveStatsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Record of save stats.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.SaveStats save_stats = 15;</code>
       */
      public Builder addSaveStats(
          int index, com.android.emulator.SnapshotOuterClass.SaveStats value) {
        if (saveStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSaveStatsIsMutable();
          saveStats_.add(index, value);
          onChanged();
        } else {
          saveStatsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Record of save stats.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.SaveStats save_stats = 15;</code>
       */
      public Builder addSaveStats(
          com.android.emulator.SnapshotOuterClass.SaveStats.Builder builderForValue) {
        if (saveStatsBuilder_ == null) {
          ensureSaveStatsIsMutable();
          saveStats_.add(builderForValue.build());
          onChanged();
        } else {
          saveStatsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Record of save stats.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.SaveStats save_stats = 15;</code>
       */
      public Builder addSaveStats(
          int index, com.android.emulator.SnapshotOuterClass.SaveStats.Builder builderForValue) {
        if (saveStatsBuilder_ == null) {
          ensureSaveStatsIsMutable();
          saveStats_.add(index, builderForValue.build());
          onChanged();
        } else {
          saveStatsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Record of save stats.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.SaveStats save_stats = 15;</code>
       */
      public Builder addAllSaveStats(
          java.lang.Iterable<? extends com.android.emulator.SnapshotOuterClass.SaveStats> values) {
        if (saveStatsBuilder_ == null) {
          ensureSaveStatsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, saveStats_);
          onChanged();
        } else {
          saveStatsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Record of save stats.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.SaveStats save_stats = 15;</code>
       */
      public Builder clearSaveStats() {
        if (saveStatsBuilder_ == null) {
          saveStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
          onChanged();
        } else {
          saveStatsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Record of save stats.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.SaveStats save_stats = 15;</code>
       */
      public Builder removeSaveStats(int index) {
        if (saveStatsBuilder_ == null) {
          ensureSaveStatsIsMutable();
          saveStats_.remove(index);
          onChanged();
        } else {
          saveStatsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Record of save stats.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.SaveStats save_stats = 15;</code>
       */
      public com.android.emulator.SnapshotOuterClass.SaveStats.Builder getSaveStatsBuilder(
          int index) {
        return getSaveStatsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Record of save stats.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.SaveStats save_stats = 15;</code>
       */
      public com.android.emulator.SnapshotOuterClass.SaveStatsOrBuilder getSaveStatsOrBuilder(
          int index) {
        if (saveStatsBuilder_ == null) {
          return saveStats_.get(index);  } else {
          return saveStatsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Record of save stats.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.SaveStats save_stats = 15;</code>
       */
      public java.util.List<? extends com.android.emulator.SnapshotOuterClass.SaveStatsOrBuilder> 
           getSaveStatsOrBuilderList() {
        if (saveStatsBuilder_ != null) {
          return saveStatsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(saveStats_);
        }
      }
      /**
       * <pre>
       * Record of save stats.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.SaveStats save_stats = 15;</code>
       */
      public com.android.emulator.SnapshotOuterClass.SaveStats.Builder addSaveStatsBuilder() {
        return getSaveStatsFieldBuilder().addBuilder(
            com.android.emulator.SnapshotOuterClass.SaveStats.getDefaultInstance());
      }
      /**
       * <pre>
       * Record of save stats.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.SaveStats save_stats = 15;</code>
       */
      public com.android.emulator.SnapshotOuterClass.SaveStats.Builder addSaveStatsBuilder(
          int index) {
        return getSaveStatsFieldBuilder().addBuilder(
            index, com.android.emulator.SnapshotOuterClass.SaveStats.getDefaultInstance());
      }
      /**
       * <pre>
       * Record of save stats.
       * </pre>
       *
       * <code>repeated .emulator_snapshot.SaveStats save_stats = 15;</code>
       */
      public java.util.List<com.android.emulator.SnapshotOuterClass.SaveStats.Builder> 
           getSaveStatsBuilderList() {
        return getSaveStatsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.android.emulator.SnapshotOuterClass.SaveStats, com.android.emulator.SnapshotOuterClass.SaveStats.Builder, com.android.emulator.SnapshotOuterClass.SaveStatsOrBuilder> 
          getSaveStatsFieldBuilder() {
        if (saveStatsBuilder_ == null) {
          saveStatsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.android.emulator.SnapshotOuterClass.SaveStats, com.android.emulator.SnapshotOuterClass.SaveStats.Builder, com.android.emulator.SnapshotOuterClass.SaveStatsOrBuilder>(
                  saveStats_,
                  ((bitField0_ & 0x00002000) == 0x00002000),
                  getParentForChildren(),
                  isClean());
          saveStats_ = null;
        }
        return saveStatsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:emulator_snapshot.Snapshot)
    }

    // @@protoc_insertion_point(class_scope:emulator_snapshot.Snapshot)
    private static final com.android.emulator.SnapshotOuterClass.Snapshot DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.android.emulator.SnapshotOuterClass.Snapshot();
    }

    public static com.android.emulator.SnapshotOuterClass.Snapshot getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Snapshot>
        PARSER = new com.google.protobuf.AbstractParser<Snapshot>() {
      public Snapshot parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Snapshot(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Snapshot> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Snapshot> getParserForType() {
      return PARSER;
    }

    public com.android.emulator.SnapshotOuterClass.Snapshot getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_emulator_snapshot_Image_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_emulator_snapshot_Image_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_emulator_snapshot_Host_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_emulator_snapshot_Host_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_emulator_snapshot_Config_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_emulator_snapshot_Config_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_emulator_snapshot_SaveStats_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_emulator_snapshot_SaveStats_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_emulator_snapshot_Snapshot_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_emulator_snapshot_Snapshot_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016snapshot.proto\022\021emulator_snapshot\"\257\003\n\005" +
      "Image\022+\n\004type\030\001 \001(\0162\035.emulator_snapshot." +
      "Image.Type\022\014\n\004path\030\002 \001(\t\022\017\n\007present\030\003 \001(" +
      "\010\022\014\n\004size\030\004 \001(\003\022\031\n\021modification_time\030\005 \001" +
      "(\003\"\260\002\n\004Type\022\026\n\022IMAGE_TYPE_UNKNOWN\020\000\022\025\n\021I" +
      "MAGE_TYPE_KERNEL\020\001\022\034\n\030IMAGE_TYPE_KERNEL_" +
      "RANCHU\020\002\022\025\n\021IMAGE_TYPE_SYSTEM\020\003\022\032\n\026IMAGE" +
      "_TYPE_SYSTEM_COPY\020\004\022\023\n\017IMAGE_TYPE_DATA\020\005" +
      "\022\030\n\024IMAGE_TYPE_DATA_COPY\020\006\022\026\n\022IMAGE_TYPE" +
      "_RAMDISK\020\007\022\025\n\021IMAGE_TYPE_SDCARD\020\010\022\024\n\020IMA",
      "GE_TYPE_CACHE\020\t\022\025\n\021IMAGE_TYPE_VENDOR\020\n\022\035" +
      "\n\031IMAGE_TYPE_ENCRYPTION_KEY\020\013\".\n\004Host\022\022\n" +
      "\ngpu_driver\030\004 \001(\t\022\022\n\nhypervisor\030\005 \001(\005\"m\n" +
      "\006Config\022\030\n\020enabled_features\030\001 \003(\005\022\031\n\021sel" +
      "ected_renderer\030\002 \001(\005\022\026\n\016cpu_core_count\030\003" +
      " \001(\005\022\026\n\016ram_size_bytes\030\004 \001(\003\"M\n\tSaveStat" +
      "s\022\023\n\013incremental\030\001 \001(\r\022\020\n\010duration\030\002 \001(\004" +
      "\022\031\n\021ram_changed_bytes\030\003 \001(\004\"\250\003\n\010Snapshot" +
      "\022\017\n\007version\030\001 \001(\005\022\025\n\rcreation_time\030\002 \001(\003" +
      "\022(\n\006images\030\003 \003(\0132\030.emulator_snapshot.Ima",
      "ge\022%\n\004host\030\004 \001(\0132\027.emulator_snapshot.Hos" +
      "t\022)\n\006config\030\005 \001(\0132\031.emulator_snapshot.Co" +
      "nfig\022\"\n\032failed_to_load_reason_code\030\007 \001(\003" +
      "\022$\n\034guest_data_partition_mounted\030\010 \001(\010\022\020" +
      "\n\010rotation\030\t \001(\005\022\025\n\rinvalid_loads\030\n \001(\005\022" +
      "\030\n\020successful_loads\030\013 \001(\005\022\024\n\014logical_nam" +
      "e\030\014 \001(\t\022\016\n\006parent\030\r \001(\t\022\023\n\013description\030\016" +
      " \001(\t\0220\n\nsave_stats\030\017 \003(\0132\034.emulator_snap" +
      "shot.SaveStatsB\026\n\024com.android.emulator"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_emulator_snapshot_Image_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_emulator_snapshot_Image_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_emulator_snapshot_Image_descriptor,
        new java.lang.String[] { "Type", "Path", "Present", "Size", "ModificationTime", });
    internal_static_emulator_snapshot_Host_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_emulator_snapshot_Host_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_emulator_snapshot_Host_descriptor,
        new java.lang.String[] { "GpuDriver", "Hypervisor", });
    internal_static_emulator_snapshot_Config_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_emulator_snapshot_Config_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_emulator_snapshot_Config_descriptor,
        new java.lang.String[] { "EnabledFeatures", "SelectedRenderer", "CpuCoreCount", "RamSizeBytes", });
    internal_static_emulator_snapshot_SaveStats_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_emulator_snapshot_SaveStats_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_emulator_snapshot_SaveStats_descriptor,
        new java.lang.String[] { "Incremental", "Duration", "RamChangedBytes", });
    internal_static_emulator_snapshot_Snapshot_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_emulator_snapshot_Snapshot_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_emulator_snapshot_Snapshot_descriptor,
        new java.lang.String[] { "Version", "CreationTime", "Images", "Host", "Config", "FailedToLoadReasonCode", "GuestDataPartitionMounted", "Rotation", "InvalidLoads", "SuccessfulLoads", "LogicalName", "Parent", "Description", "SaveStats", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
