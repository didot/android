/* The following code was generated by JFlex 1.7.0-SNAPSHOT tweaked for IntelliJ platform */

package com.android.tools.idea.lang.roomSql.parser;

import com.intellij.lexer.FlexLexer;
import com.intellij.psi.tree.IElementType;

import static com.intellij.psi.TokenType.BAD_CHARACTER;
import static com.intellij.psi.TokenType.WHITE_SPACE;
import static com.android.tools.idea.lang.roomSql.psi.RoomPsiTypes.*;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0-SNAPSHOT
 * from the specification file <tt>_RoomSqlLexer.flex</tt>
 */
public class _RoomSqlLexer implements FlexLexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   * Chosen bits are [8, 7, 6]
   * Total runtime size is 2320 bytes
   */
  public static int ZZ_CMAP(int ch) {
    return ZZ_CMAP_A[(ZZ_CMAP_Y[(ZZ_CMAP_Z[ch>>13]<<7)|((ch>>6)&0x7f)]<<6)|(ch&0x3f)];
  }

  /* The ZZ_CMAP_Z table has 136 entries */
  static final char ZZ_CMAP_Z[] = zzUnpackCMap(
    "\1\0\1\1\206\2");

  /* The ZZ_CMAP_Y table has 384 entries */
  static final char ZZ_CMAP_Y[] = zzUnpackCMap(
    "\1\0\1\1\1\2\1\3\1\4\1\5\124\3\1\6\45\3\1\7\1\10\2\3\1\11\73\3\1\6\277\3");

  /* The ZZ_CMAP_A table has 640 entries */
  static final char ZZ_CMAP_A[] = zzUnpackCMap(
    "\11\0\1\1\1\2\2\1\1\2\22\0\1\1\1\0\1\14\10\0\1\6\1\0\1\7\1\4\1\0\12\3\1\13"+
    "\6\0\1\56\1\70\1\25\1\45\1\5\1\31\1\74\1\43\1\50\1\12\1\77\1\23\1\37\1\52"+
    "\1\35\1\62\1\64\1\33\1\21\1\27\1\60\1\54\1\41\1\16\1\66\1\72\4\0\1\100\1\0"+
    "\1\55\1\67\1\24\1\44\1\11\1\30\1\73\1\42\1\47\1\10\1\76\1\22\1\36\1\51\1\34"+
    "\1\61\1\63\1\32\1\20\1\26\1\57\1\53\1\40\1\15\1\65\1\71\12\0\1\1\32\0\1\1"+
    "\217\0\2\46\115\0\1\17\1\1\77\0\13\1\35\0\2\1\5\0\1\1\57\0\1\1\112\0\1\75"+
    "\25\0");

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\3\3\1\2\4\3\1\1\4"+
    "\2\1\2\4\1\1\1\4\1\1\1\4\1\1\1\4"+
    "\1\1\1\4\1\1\1\4\1\1\1\4\1\1\1\4"+
    "\1\1\1\4\1\1\1\4\2\1\2\4\1\1\1\4"+
    "\1\1\1\4\1\1\1\4\1\1\1\4\1\1\1\4"+
    "\1\1\2\4\1\1\1\4\2\1\1\4\1\3\6\0"+
    "\5\4\1\0\1\5\1\0\1\6\3\0\3\4\1\0"+
    "\1\4\1\0\5\4\5\0\2\4\1\7\2\4\2\0"+
    "\1\7\2\0\3\4\3\0\3\4\3\0\1\10\1\11"+
    "\1\12\1\4\1\10\1\11\1\12\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\2\4\1\0"+
    "\2\4\3\0\1\13\3\0\1\13\3\4\1\14\2\4"+
    "\1\14\3\0\2\4\1\0\2\15\10\4\11\0\3\4"+
    "\2\0\2\4\2\0\1\4\1\0\1\4\1\16\1\0"+
    "\1\16\1\4\2\0\1\4\1\3\5\0\1\17\1\0"+
    "\1\20\1\0\5\4\1\17\1\4\1\21\1\0\1\22"+
    "\1\0\1\4\1\22\2\4\1\0\1\4\1\0\6\4"+
    "\1\0\2\4\7\0\1\4\1\0\4\4\4\0\1\4"+
    "\1\23\1\0\1\4\1\0\1\23\1\0\4\4\1\0"+
    "\4\4\1\24\1\0\1\4\6\0\1\24\3\4\3\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\2\0"+
    "\5\4\1\0\2\4\14\0\7\4\1\25\2\4\1\25"+
    "\4\0\4\4\2\0\2\26\1\27\4\4\1\30\3\4"+
    "\1\27\4\0\1\30\4\0\1\4\1\0\2\4\1\0"+
    "\1\4\1\0\2\4\2\0\1\4\1\0\2\4\2\0"+
    "\1\4\1\0\2\31\4\0\1\32\1\33\2\34\4\4"+
    "\1\32\1\33\2\0\2\4\1\35\1\0\1\4\1\35"+
    "\1\4\1\0\4\4\1\0\3\4\1\36\1\0\1\37"+
    "\1\36\1\4\1\37\1\4\7\0\1\40\1\0\2\4"+
    "\1\41\1\4\1\40\1\0\1\41\1\0\1\42\1\4"+
    "\2\43\1\42\2\0\4\4\1\0\4\4\1\0\1\4"+
    "\1\0\1\4\7\0\3\4\2\0\1\4\1\0\1\4"+
    "\1\44\2\45\1\0\1\44\1\0\1\4\2\46\4\4"+
    "\1\47\1\0\2\4\4\0\1\47\5\0\1\50\4\0"+
    "\4\4\1\50\5\4\1\51\1\0\1\51\1\52\1\0"+
    "\1\52\3\4\2\0\1\4\1\0\6\4\7\0\1\4"+
    "\2\0\3\4\1\0\1\53\1\0\2\4\1\53\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\5\0"+
    "\4\4\2\0\2\4\2\54\1\4\2\55\2\4\1\0"+
    "\1\4\1\0\2\4\2\56\1\0\2\4\5\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\57\1\0\1\57\1\0"+
    "\1\4\1\0\4\4\1\0\4\4\2\60\2\61\7\0"+
    "\1\4\1\62\1\63\1\62\1\63\2\64\1\65\1\0"+
    "\1\4\1\65\1\0\5\4\1\0\2\4\11\0\1\66"+
    "\1\0\1\67\1\0\4\4\1\66\1\4\1\67\2\4"+
    "\2\0\3\4\2\0\1\70\1\0\2\4\1\71\1\4"+
    "\1\0\1\4\1\72\1\70\1\0\1\71\1\0\1\72"+
    "\2\73\1\74\1\0\1\74\2\4\2\0\2\4\1\0"+
    "\2\75\1\4\2\76\1\0\2\77\1\100\1\0\1\101"+
    "\1\0\1\100\1\4\1\101\1\4\1\102\1\0\1\102"+
    "\1\4\1\103\1\4\1\104\2\105\1\0\1\4\1\0"+
    "\1\4\1\0\2\4\1\103\1\0\1\104\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\2\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\2\4\1\0\1\4\1\106\2\4"+
    "\1\0\1\106\2\0\2\107\1\0\1\4\2\110\1\111"+
    "\1\112\2\4\1\0\2\4\1\111\1\112\4\0\1\113"+
    "\4\0\1\114\1\4\1\113\4\4\1\114\1\4\2\0"+
    "\1\4\2\115\2\116\2\117\1\120\1\4\1\0\1\4"+
    "\1\120\1\0\2\121\2\122\1\0\1\4\2\123\2\124"+
    "\1\0\1\125\1\4\1\125\1\0\1\4\1\126\1\0"+
    "\1\4\1\0\1\4\2\127\1\4\1\126\1\0\1\4"+
    "\2\130\1\0\1\4\1\0\2\131\1\0\1\4\2\132"+
    "\1\0\2\4\2\133\1\134\1\4\1\0\1\134\1\0"+
    "\2\135\2\4\1\136\1\0\1\4\1\0\1\4\2\0"+
    "\1\136\1\0\1\137\1\0\1\140\1\0\1\4\1\137"+
    "\1\4\1\140\1\4\2\141\2\142\1\143\1\0\1\4"+
    "\1\143\2\144\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\2\145\1\4\1\0\1\4\1\0\1\4\1\0\2\146"+
    "\1\0\2\4\2\147\1\0\1\150\1\4\2\151\2\152"+
    "\1\150\4\0\3\4\1\0\1\4\2\153\2\154\1\0"+
    "\3\4\2\0\1\155\1\0\1\4\1\155\2\156\1\4"+
    "\1\0\1\4\1\0\1\157\1\160\1\161\1\157\1\160"+
    "\1\161\1\0\1\4\2\162\1\0\2\4\2\0\1\4"+
    "\2\163\2\164\1\0\1\4\1\0\2\4\1\0\2\165"+
    "\1\0\1\4\2\166\2\167\1\0\1\4\1\0\1\4"+
    "\2\170\1\0\1\4\1\0\1\4\1\0\1\4\2\171";

  private static int [] zzUnpackAction() {
    int [] result = new int[986];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\101\0\202\0\303\0\u0104\0\u0145\0\u0186\0\u01c7"+
    "\0\u0208\0\u0249\0\u028a\0\u02cb\0\u030c\0\u034d\0\u038e\0\u03cf"+
    "\0\u0410\0\u0451\0\u0492\0\u04d3\0\u0514\0\u0555\0\u0596\0\u05d7"+
    "\0\u0618\0\u0659\0\u069a\0\u06db\0\u071c\0\u075d\0\u079e\0\u07df"+
    "\0\u0820\0\u0861\0\u08a2\0\u08e3\0\u0924\0\u0965\0\u09a6\0\u09e7"+
    "\0\u0a28\0\u0a69\0\u0aaa\0\u0aeb\0\u0b2c\0\u0b6d\0\u0bae\0\u0bef"+
    "\0\u0c30\0\u0c71\0\u0cb2\0\u0cf3\0\u0d34\0\u0d75\0\u0db6\0\u0df7"+
    "\0\u0e38\0\u0e79\0\u0eba\0\u0efb\0\u0f3c\0\u0f7d\0\u0fbe\0\u0fff"+
    "\0\u1040\0\u1081\0\u10c2\0\u1103\0\u1144\0\u1185\0\u11c6\0\u02cb"+
    "\0\101\0\u1207\0\u1248\0\u1289\0\u12ca\0\u130b\0\u134c\0\u138d"+
    "\0\u13ce\0\u140f\0\u1450\0\u1491\0\u14d2\0\u1513\0\u1554\0\u1595"+
    "\0\u15d6\0\u1617\0\u1658\0\u1699\0\u16da\0\u171b\0\u0cb2\0\u175c"+
    "\0\u179d\0\u17de\0\u181f\0\101\0\u1860\0\u18a1\0\u18e2\0\u1923"+
    "\0\u1964\0\u19a5\0\u19e6\0\u1a27\0\u1a68\0\u1aa9\0\u1aea\0\u1b2b"+
    "\0\u1b6c\0\u1bad\0\u1bee\0\u1c2f\0\u0cb2\0\u1c70\0\u1cb1\0\u1cf2"+
    "\0\101\0\u1d33\0\u1d74\0\u1db5\0\u1df6\0\u1e37\0\u1e78\0\u1eb9"+
    "\0\u1efa\0\u1f3b\0\u1f7c\0\u1fbd\0\u1ffe\0\u203f\0\u2080\0\u20c1"+
    "\0\u2102\0\u2143\0\101\0\u2184\0\u21c5\0\u2206\0\u0cb2\0\u2247"+
    "\0\u2288\0\u22c9\0\u230a\0\u234b\0\u238c\0\u23cd\0\u240e\0\u244f"+
    "\0\u2490\0\u24d1\0\u2512\0\u2553\0\u2594\0\u25d5\0\u2616\0\u2657"+
    "\0\u2698\0\u26d9\0\u271a\0\u275b\0\u279c\0\u27dd\0\u281e\0\u285f"+
    "\0\u28a0\0\u28e1\0\u2922\0\u2963\0\u29a4\0\u29e5\0\u2a26\0\u2a67"+
    "\0\u2aa8\0\u2ae9\0\u2b2a\0\u2b6b\0\u2bac\0\u2bed\0\u2c2e\0\u2c6f"+
    "\0\u2cb0\0\u2cf1\0\u2d32\0\u0cb2\0\u2d73\0\101\0\u2db4\0\u2df5"+
    "\0\u2e36\0\u2e77\0\u2eb8\0\u2eb8\0\u2ef9\0\u2f3a\0\u2f7b\0\u2fbc"+
    "\0\101\0\u2ffd\0\101\0\u303e\0\u307f\0\u30c0\0\u3101\0\u3142"+
    "\0\u3183\0\u0cb2\0\u31c4\0\101\0\u3205\0\101\0\u3246\0\u3287"+
    "\0\u0cb2\0\u32c8\0\u3309\0\u334a\0\u338b\0\u33cc\0\u340d\0\u344e"+
    "\0\u348f\0\u34d0\0\u3511\0\u3552\0\u3593\0\u35d4\0\u3615\0\u3656"+
    "\0\u3697\0\u36d8\0\u3719\0\u375a\0\u379b\0\u37dc\0\u381d\0\u385e"+
    "\0\u389f\0\u38e0\0\u3921\0\u3962\0\u39a3\0\u39e4\0\u3a25\0\u3a66"+
    "\0\u3aa7\0\u3ae8\0\u3b29\0\u3b6a\0\u3bab\0\u3bec\0\u3c2d\0\u3c6e"+
    "\0\u3caf\0\u3cf0\0\u3d31\0\u3d72\0\u3db3\0\u3df4\0\u3e35\0\u3e76"+
    "\0\u3eb7\0\u3ef8\0\u3f39\0\u3f7a\0\u3fbb\0\u3ffc\0\u403d\0\u407e"+
    "\0\u40bf\0\u4100\0\u4141\0\u4182\0\u41c3\0\u4204\0\u4245\0\u4286"+
    "\0\u42c7\0\u4308\0\u4349\0\u438a\0\u43cb\0\u440c\0\u444d\0\u448e"+
    "\0\u44cf\0\u4510\0\u4551\0\u4592\0\u45d3\0\u4614\0\u4655\0\u4696"+
    "\0\u46d7\0\u4718\0\u4759\0\u479a\0\u47db\0\u481c\0\u485d\0\u489e"+
    "\0\u48df\0\u4920\0\u4961\0\u49a2\0\u49e3\0\u4a24\0\u4a65\0\u4aa6"+
    "\0\u4ae7\0\u4b28\0\u4b69\0\u4baa\0\u0cb2\0\u4beb\0\u4c2c\0\101"+
    "\0\u4c6d\0\u4cae\0\u4cef\0\u4d30\0\u4d71\0\u4db2\0\u4df3\0\u4e34"+
    "\0\u4e75\0\u4eb6\0\101\0\u0cb2\0\u0cb2\0\u4ef7\0\u4f38\0\u4f79"+
    "\0\u4fba\0\u0cb2\0\u4ffb\0\u503c\0\u507d\0\101\0\u50be\0\u50ff"+
    "\0\u5140\0\u5181\0\101\0\u51c2\0\u5203\0\u5244\0\u5285\0\u52c6"+
    "\0\u5307\0\u5348\0\u5389\0\u53ca\0\u540b\0\u544c\0\u548d\0\u54ce"+
    "\0\u550f\0\u5550\0\u5591\0\u55d2\0\u5613\0\u5654\0\u5695\0\u56d6"+
    "\0\u5717\0\u5758\0\101\0\u0cb2\0\u5799\0\u57da\0\u581b\0\u585c"+
    "\0\101\0\101\0\101\0\u0cb2\0\u589d\0\u58de\0\u591f\0\u5960"+
    "\0\u0cb2\0\u0cb2\0\u59a1\0\u59e2\0\u5a23\0\u5a64\0\u0cb2\0\u5aa5"+
    "\0\u5ae6\0\101\0\u5b27\0\u5b68\0\u5ba9\0\u5bea\0\u5c2b\0\u5c6c"+
    "\0\u5cad\0\u5cee\0\u5d2f\0\u5d70\0\101\0\u5db1\0\101\0\u0cb2"+
    "\0\u5df2\0\u0cb2\0\u5e33\0\u5e74\0\u5eb5\0\u5ef6\0\u5f37\0\u5f78"+
    "\0\u5fb9\0\u5ffa\0\u603b\0\u607c\0\u60bd\0\u60fe\0\u0cb2\0\u613f"+
    "\0\u6180\0\u61c1\0\101\0\u6202\0\u0cb2\0\u6243\0\101\0\u0cb2"+
    "\0\101\0\u6284\0\u62c5\0\u6306\0\u6347\0\u6388\0\u63c9\0\u640a"+
    "\0\u644b\0\u648c\0\u64cd\0\u650e\0\u654f\0\u6590\0\u65d1\0\u6612"+
    "\0\u6653\0\u6694\0\u66d5\0\u6716\0\u6757\0\u6798\0\u67d9\0\u681a"+
    "\0\u685b\0\u689c\0\u68dd\0\u691e\0\u695f\0\u69a0\0\u69e1\0\u0cb2"+
    "\0\u6a22\0\u6a63\0\u6aa4\0\101\0\u6ae5\0\u6b26\0\101\0\u0cb2"+
    "\0\u6b67\0\u6ba8\0\u6be9\0\u6c2a\0\u0cb2\0\u6c6b\0\u6cac\0\u6ced"+
    "\0\u6d2e\0\u6d6f\0\u6db0\0\u6df1\0\101\0\u6e32\0\u6e73\0\u6eb4"+
    "\0\u6ef5\0\u6f36\0\101\0\u6f77\0\u6fb8\0\u6ff9\0\u703a\0\u707b"+
    "\0\u70bc\0\u70fd\0\u713e\0\u0cb2\0\u717f\0\u71c0\0\u7201\0\u7242"+
    "\0\u7283\0\u0cb2\0\u72c4\0\101\0\101\0\u7305\0\u0cb2\0\u7346"+
    "\0\u7387\0\u73c8\0\u7409\0\u744a\0\u748b\0\u74cc\0\u750d\0\u754e"+
    "\0\u758f\0\u75d0\0\u7611\0\u7652\0\u7693\0\u76d4\0\u7715\0\u7756"+
    "\0\u7797\0\u77d8\0\u7819\0\u785a\0\u789b\0\u78dc\0\u791d\0\u795e"+
    "\0\u799f\0\u79e0\0\u0cb2\0\u7a21\0\u7a62\0\u7aa3\0\101\0\u7ae4"+
    "\0\u7b25\0\u7b66\0\u7ba7\0\u7be8\0\u7c29\0\u7c6a\0\u7cab\0\u7cec"+
    "\0\u7d2d\0\u7d6e\0\u7daf\0\u7df0\0\u7e31\0\u7e72\0\u7eb3\0\u7ef4"+
    "\0\u7f35\0\u7f76\0\u7fb7\0\u7ff8\0\101\0\u0cb2\0\u8039\0\101"+
    "\0\u0cb2\0\u807a\0\u80bb\0\u80fc\0\u813d\0\u817e\0\u81bf\0\u8200"+
    "\0\101\0\u0cb2\0\u8241\0\u8282\0\u82c3\0\u8304\0\u8345\0\u8386"+
    "\0\u83c7\0\u8408\0\u8449\0\u848a\0\u84cb\0\u850c\0\u854d\0\u0cb2"+
    "\0\u858e\0\101\0\u85cf\0\u8610\0\u8651\0\u8692\0\u86d3\0\u8714"+
    "\0\u8755\0\u8796\0\u87d7\0\u8818\0\u8859\0\u889a\0\101\0\u0cb2"+
    "\0\101\0\u0cb2\0\u88db\0\u891c\0\u895d\0\u899e\0\u89df\0\u8a20"+
    "\0\u8a61\0\u8aa2\0\u0cb2\0\u0cb2\0\101\0\101\0\u0cb2\0\101"+
    "\0\u0cb2\0\u8ae3\0\u8b24\0\101\0\u8b65\0\u8ba6\0\u8be7\0\u8c28"+
    "\0\u8c69\0\u8caa\0\u8ceb\0\u8d2c\0\u8d6d\0\u8dae\0\u8def\0\u8e30"+
    "\0\u8e71\0\u8eb2\0\u8ef3\0\u8f34\0\u8f75\0\u8fb6\0\u8ff7\0\u9038"+
    "\0\101\0\u9079\0\u90ba\0\u90fb\0\u913c\0\u917d\0\u91be\0\u91ff"+
    "\0\u0cb2\0\u9240\0\u9281\0\u92c2\0\u9303\0\u9344\0\u9385\0\u93c6"+
    "\0\u9407\0\u9448\0\u0cb2\0\u9489\0\u94ca\0\u950b\0\u0cb2\0\u954c"+
    "\0\u958d\0\u95ce\0\u0cb2\0\101\0\u960f\0\101\0\u9650\0\101"+
    "\0\101\0\u0cb2\0\101\0\u9691\0\u0cb2\0\u96d2\0\u9713\0\u9754"+
    "\0\u9795\0\u97d6\0\u9817\0\u9858\0\u0cb2\0\101\0\u9899\0\101"+
    "\0\u0cb2\0\u98da\0\u0cb2\0\101\0\101\0\u991b\0\101\0\u995c"+
    "\0\u0cb2\0\u999d\0\u0cb2\0\u99de\0\101\0\u9a1f\0\u0cb2\0\u9a60"+
    "\0\u0cb2\0\u9aa1\0\u0cb2\0\101\0\u0cb2\0\u9ae2\0\u9b23\0\u9b64"+
    "\0\u9ba5\0\u9be6\0\u9c27\0\u9c68\0\101\0\u9ca9\0\101\0\u9cea"+
    "\0\u9d2b\0\u9d6c\0\u9dad\0\u9dee\0\u9e2f\0\u9e70\0\u9eb1\0\u9ef2"+
    "\0\u9f33\0\u9f74\0\u9fb5\0\u9ff6\0\ua037\0\ua078\0\ua0b9\0\ua0fa"+
    "\0\ua13b\0\u0cb2\0\ua17c\0\ua1bd\0\ua1fe\0\101\0\ua23f\0\ua280"+
    "\0\101\0\u0cb2\0\ua2c1\0\ua302\0\101\0\u0cb2\0\u0cb2\0\u0cb2"+
    "\0\ua343\0\ua384\0\ua3c5\0\ua406\0\ua447\0\101\0\101\0\ua488"+
    "\0\ua4c9\0\ua50a\0\ua54b\0\101\0\ua58c\0\ua5cd\0\ua60e\0\ua64f"+
    "\0\101\0\ua690\0\u0cb2\0\ua6d1\0\ua712\0\ua753\0\ua794\0\u0cb2"+
    "\0\ua7d5\0\ua816\0\ua857\0\ua898\0\101\0\u0cb2\0\u0cb2\0\101"+
    "\0\101\0\u0cb2\0\u0cb2\0\ua8d9\0\ua91a\0\ua95b\0\101\0\ua99c"+
    "\0\101\0\u0cb2\0\u0cb2\0\101\0\ua9dd\0\uaa1e\0\u0cb2\0\101"+
    "\0\u0cb2\0\101\0\uaa5f\0\101\0\uaaa0\0\u0cb2\0\uaae1\0\uab22"+
    "\0\u0cb2\0\uab63\0\uaba4\0\uabe5\0\uac26\0\101\0\u0cb2\0\uac67"+
    "\0\101\0\uaca8\0\uace9\0\101\0\u0cb2\0\uad2a\0\uad6b\0\uadac"+
    "\0\101\0\u0cb2\0\uaded\0\uae2e\0\101\0\u0cb2\0\uae6f\0\uaeb0"+
    "\0\uaef1\0\101\0\u0cb2\0\u0cb2\0\uaf32\0\uaf73\0\101\0\uafb4"+
    "\0\101\0\u0cb2\0\uaff5\0\ub036\0\u0cb2\0\ub077\0\ub0b8\0\ub0f9"+
    "\0\ub13a\0\ub17b\0\ub1bc\0\101\0\ub1fd\0\101\0\ub23e\0\101"+
    "\0\ub27f\0\ub2c0\0\u0cb2\0\ub301\0\u0cb2\0\ub342\0\u0cb2\0\101"+
    "\0\101\0\u0cb2\0\u0cb2\0\ub383\0\ub3c4\0\101\0\101\0\u0cb2"+
    "\0\ub405\0\ub446\0\ub487\0\ub4c8\0\ub509\0\ub54a\0\101\0\u0cb2"+
    "\0\ub58b\0\ub5cc\0\ub60d\0\ub64e\0\ub68f\0\ub6d0\0\101\0\u0cb2"+
    "\0\ub711\0\ub752\0\ub793\0\101\0\u0cb2\0\ub7d4\0\u0cb2\0\ub815"+
    "\0\101\0\u0cb2\0\101\0\u0cb2\0\101\0\ub856\0\ub897\0\ub8d8"+
    "\0\ub919\0\ub95a\0\ub99b\0\ub9dc\0\uba1d\0\uba5e\0\101\0\u0cb2"+
    "\0\101\0\u0cb2\0\uba9f\0\ubae0\0\ubb21\0\ubb62\0\ubba3\0\ubbe4"+
    "\0\u0cb2\0\ubc25\0\ubc66\0\101\0\101\0\u0cb2\0\ubca7\0\ubce8"+
    "\0\ubd29\0\ubd6a\0\101\0\101\0\101\0\u0cb2\0\u0cb2\0\u0cb2"+
    "\0\ubdab\0\ubdec\0\101\0\u0cb2\0\ube2d\0\ube6e\0\ubeaf\0\ubef0"+
    "\0\ubf31\0\ubf72\0\101\0\u0cb2\0\u0cb2\0\101\0\ubfb3\0\ubff4"+
    "\0\uc035\0\uc076\0\uc0b7\0\uc0f8\0\101\0\u0cb2\0\uc139\0\uc17a"+
    "\0\uc1bb\0\uc1fc\0\u0cb2\0\101\0\uc23d\0\uc27e\0\uc2bf\0\uc300"+
    "\0\101\0\u0cb2\0\uc341\0\uc382\0\uc3c3\0\uc404\0\uc445\0\uc486"+
    "\0\101\0\u0cb2";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[986];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\2\3\1\4\1\5\1\6\1\2\1\7\1\10"+
    "\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20"+
    "\1\17\1\21\1\22\1\23\1\24\1\25\1\26\1\27"+
    "\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37"+
    "\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\45"+
    "\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56"+
    "\1\57\1\60\1\61\1\62\1\63\1\2\1\64\1\65"+
    "\1\63\1\2\1\66\1\67\1\70\1\71\1\70\1\2"+
    "\102\0\2\3\101\0\1\4\1\72\1\73\3\0\1\73"+
    "\72\0\1\72\112\0\2\74\3\0\2\75\25\0\2\76"+
    "\2\0\2\77\31\0\1\100\74\0\1\63\1\0\1\63"+
    "\2\0\3\63\2\0\2\63\1\0\14\63\2\101\10\63"+
    "\1\0\26\63\1\0\3\63\3\0\1\63\1\0\1\63"+
    "\2\0\3\63\2\0\2\102\1\0\2\63\2\103\22\63"+
    "\1\0\2\63\2\104\2\63\2\105\16\63\1\0\3\63"+
    "\34\0\2\106\53\0\2\107\3\0\1\107\2\0\1\107"+
    "\1\0\1\107\1\0\1\107\1\0\1\107\1\0\1\107"+
    "\1\0\1\107\1\0\1\107\1\0\1\107\1\0\1\107"+
    "\1\0\1\107\1\0\1\107\2\0\1\107\1\0\1\107"+
    "\1\0\1\107\1\0\1\107\1\0\1\107\1\0\1\107"+
    "\1\0\1\107\1\0\1\107\1\0\1\107\1\0\1\107"+
    "\1\0\1\107\2\0\1\107\2\0\14\110\1\111\64\110"+
    "\3\0\1\63\1\0\1\63\2\0\3\63\1\0\1\112"+
    "\2\63\1\0\26\63\1\0\26\63\1\0\3\63\14\0"+
    "\1\112\71\0\1\113\3\0\1\113\43\0\2\114\25\0"+
    "\1\63\1\0\1\115\2\0\1\63\1\115\1\63\2\0"+
    "\2\63\1\0\26\63\1\0\6\63\2\116\16\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\117\2\0\1\63\1\117"+
    "\1\63\2\0\2\63\1\0\26\63\1\120\2\121\24\63"+
    "\1\0\3\63\5\0\1\122\3\0\1\122\34\0\3\120"+
    "\33\0\1\63\1\0\1\63\2\0\3\63\2\0\2\63"+
    "\1\0\12\63\2\123\2\124\4\63\2\125\2\63\1\0"+
    "\6\63\2\126\2\127\14\63\1\0\3\63\32\0\2\130"+
    "\2\131\4\0\2\132\11\0\2\133\2\134\23\0\1\63"+
    "\1\0\1\135\2\0\1\63\1\135\1\63\2\0\2\63"+
    "\1\0\12\63\2\136\2\137\4\63\2\140\2\63\1\0"+
    "\6\63\2\141\16\63\1\0\3\63\5\0\1\142\3\0"+
    "\1\142\20\0\2\143\2\144\4\0\2\145\11\0\2\146"+
    "\25\0\1\63\1\0\1\63\2\0\3\63\2\0\2\63"+
    "\1\0\12\63\2\147\2\150\10\63\1\0\6\63\2\151"+
    "\16\63\1\0\3\63\32\0\2\152\2\153\17\0\2\154"+
    "\25\0\1\63\1\0\1\155\2\0\1\63\1\155\1\63"+
    "\2\0\2\63\1\0\14\63\2\156\10\63\1\0\6\63"+
    "\2\157\16\63\1\0\3\63\5\0\1\160\3\0\1\160"+
    "\22\0\2\161\17\0\2\162\25\0\1\63\1\0\1\63"+
    "\2\0\3\63\2\0\2\63\1\0\10\63\2\163\2\164"+
    "\12\63\1\0\2\63\2\165\4\63\2\166\14\63\1\0"+
    "\3\63\30\0\2\167\2\170\15\0\2\171\4\0\2\172"+
    "\23\0\1\63\1\0\1\63\2\0\3\63\2\0\2\63"+
    "\1\0\26\63\1\0\6\63\2\173\16\63\1\0\3\63"+
    "\55\0\2\174\25\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\0\22\63\2\175\2\63\1\176\2\177"+
    "\24\63\1\0\3\63\42\0\2\200\2\0\3\176\33\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\26\63\1\0\6\63\2\201\16\63\1\0\3\63\55\0"+
    "\2\202\25\0\1\63\1\0\1\203\2\0\1\63\1\203"+
    "\1\63\2\0\2\63\1\0\12\63\2\204\12\63\1\205"+
    "\2\206\4\63\2\207\16\63\1\0\3\63\5\0\1\210"+
    "\3\0\1\210\20\0\2\211\12\0\3\205\4\0\2\212"+
    "\52\0\2\213\4\0\2\214\11\0\2\215\20\0\2\216"+
    "\7\0\1\63\1\0\1\63\2\0\3\63\2\0\2\63"+
    "\1\0\10\63\2\217\4\63\2\220\6\63\1\0\2\63"+
    "\2\221\20\63\2\222\1\0\3\63\3\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\14\63\2\223"+
    "\10\63\1\0\6\63\2\224\2\225\14\63\1\0\3\63"+
    "\34\0\2\226\17\0\2\227\2\230\23\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\26\63\1\231"+
    "\2\232\4\63\2\233\16\63\1\0\3\63\46\0\3\231"+
    "\4\0\2\234\25\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\235\2\236\2\237\2\240\2\241\2\242"+
    "\12\63\2\243\1\0\2\63\2\244\4\63\2\245\6\63"+
    "\2\246\4\63\1\0\3\63\17\0\3\235\2\247\2\250"+
    "\2\251\2\252\12\0\2\253\3\0\2\254\4\0\2\255"+
    "\6\0\2\256\13\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\257\2\260\24\63\1\0\2\63\2\261"+
    "\6\63\2\262\12\63\1\0\3\63\17\0\3\257\27\0"+
    "\2\263\6\0\2\264\21\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\0\2\63\2\265\6\63\2\266"+
    "\12\63\1\0\26\63\1\0\3\63\22\0\2\267\6\0"+
    "\2\270\50\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\26\63\1\0\10\63\2\271\14\63\1\0"+
    "\3\63\57\0\2\272\23\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\0\26\63\1\0\26\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\273\2\0\1\63\1\273"+
    "\1\63\2\0\2\63\1\0\26\63\1\0\16\63\2\274"+
    "\6\63\1\0\3\63\5\0\1\275\3\0\1\275\53\0"+
    "\2\276\15\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\12\63\2\277\12\63\1\0\26\63\1\0"+
    "\3\63\32\0\2\300\52\0\1\301\3\0\1\301\72\0"+
    "\1\63\1\0\1\302\2\0\1\63\1\302\1\63\2\0"+
    "\2\63\1\0\26\63\1\0\26\63\1\0\3\63\3\0"+
    "\1\72\1\0\1\73\3\0\1\73\72\0\1\303\2\0"+
    "\2\304\115\0\2\305\20\0\3\306\10\0\2\307\35\0"+
    "\3\310\123\0\2\311\57\0\2\312\53\0\2\313\1\0"+
    "\76\313\3\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\26\63\1\314\2\315\24\63\1\0\3\63"+
    "\3\0\1\63\1\0\1\63\2\0\3\63\2\0\2\63"+
    "\1\0\4\63\2\316\20\63\1\306\2\317\10\63\2\320"+
    "\12\63\1\0\3\63\3\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\310\2\321\24\63\1\0\26\63"+
    "\1\0\3\63\3\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\0\24\63\2\322\1\0\26\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\4\63\2\323\20\63\1\0\26\63\1\0"+
    "\3\63\46\0\3\314\33\0\1\107\1\0\1\107\2\0"+
    "\3\107\2\0\2\107\1\0\26\107\1\0\26\107\1\0"+
    "\3\107\14\112\1\324\64\112\22\0\2\325\2\0\2\326"+
    "\124\0\2\327\27\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\0\2\63\2\330\2\63\2\331\16\63"+
    "\1\0\26\63\1\0\3\63\3\0\1\63\1\0\1\63"+
    "\2\0\3\63\2\0\2\63\1\0\26\63\1\0\4\63"+
    "\2\332\20\63\1\0\3\63\3\0\1\63\1\0\1\63"+
    "\2\0\3\63\2\0\2\63\1\0\10\63\2\333\14\63"+
    "\1\0\26\63\1\0\3\63\36\0\2\334\44\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\16\63"+
    "\2\335\6\63\1\0\26\63\1\0\3\63\30\0\2\336"+
    "\52\0\1\63\1\0\1\337\2\0\1\63\1\337\1\63"+
    "\2\0\2\63\1\0\14\63\2\340\10\63\1\0\26\63"+
    "\1\0\3\63\3\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\0\2\63\2\341\12\63\2\342\6\63"+
    "\1\0\2\63\2\343\22\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\344\2\0\1\63\1\344\1\63\2\0\2\63"+
    "\1\0\26\63\1\0\26\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\345\2\346"+
    "\24\63\1\0\26\63\1\0\3\63\3\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\12\63\2\347"+
    "\12\63\1\0\26\63\1\0\3\63\5\0\1\350\3\0"+
    "\1\350\22\0\2\351\65\0\2\352\12\0\2\353\11\0"+
    "\2\354\33\0\1\355\3\0\1\355\106\0\3\345\111\0"+
    "\2\356\50\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\16\63\2\357\6\63\1\0\26\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\26\63\1\360\2\361\4\63\2\362\16\63"+
    "\1\0\3\63\3\0\1\63\1\0\1\363\2\0\1\63"+
    "\1\363\1\63\2\0\2\63\1\0\26\63\1\0\26\63"+
    "\1\0\3\63\3\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\0\26\63\1\0\20\63\2\364\4\63"+
    "\1\0\3\63\36\0\2\365\107\0\3\360\4\0\2\366"+
    "\27\0\1\367\3\0\1\367\156\0\2\370\13\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\14\63"+
    "\2\371\10\63\1\0\26\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\12\63"+
    "\2\372\12\63\1\0\26\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\26\63"+
    "\1\373\2\374\24\63\1\0\3\63\34\0\2\375\75\0"+
    "\2\376\113\0\3\373\33\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\377\2\u0100\2\u0101\2\u0102\2\63"+
    "\2\u0103\14\63\1\u0104\2\u0105\2\u0106\6\63\2\u0107\12\63"+
    "\1\0\3\63\3\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\0\2\63\2\u0108\14\63\2\u0109\4\63"+
    "\1\0\26\63\1\0\3\63\3\0\1\63\1\0\1\63"+
    "\2\0\3\63\2\0\2\63\1\0\26\63\1\u010a\2\u010b"+
    "\24\63\1\0\3\63\17\0\3\377\2\u010c\2\u010d\2\0"+
    "\2\u010e\14\0\3\u0104\2\u010f\6\0\2\u0110\40\0\2\u0111"+
    "\14\0\2\u0112\105\0\3\u010a\33\0\1\63\1\0\1\63"+
    "\2\0\3\63\2\0\2\63\1\0\10\63\2\u0113\14\63"+
    "\1\0\26\63\1\0\3\63\3\0\1\63\1\0\1\63"+
    "\2\0\3\63\2\0\2\63\1\0\24\63\2\u0114\1\0"+
    "\26\63\1\0\3\63\3\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\0\6\63\2\u0115\16\63\1\0"+
    "\26\63\1\0\3\63\30\0\2\u0116\113\0\2\u0117\61\0"+
    "\2\u0118\54\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\6\63\2\u0119\16\63\1\0\26\63\1\0"+
    "\3\63\26\0\2\u011a\54\0\1\63\1\0\1\u011b\2\0"+
    "\1\63\1\u011b\1\63\2\0\2\63\1\0\26\63\1\0"+
    "\26\63\1\0\3\63\26\0\2\u011c\54\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\6\63\2\u011d"+
    "\16\63\1\0\26\63\1\0\3\63\5\0\1\u011e\3\0"+
    "\1\u011e\72\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\26\63\1\0\4\63\2\u011f\20\63\1\0"+
    "\3\63\53\0\2\u0120\27\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\u0121\2\u0122\2\u0123\2\63\2\u0124"+
    "\2\u0125\14\63\1\0\26\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\14\63"+
    "\2\u0126\10\63\1\0\26\63\1\0\3\63\17\0\3\u0127"+
    "\62\0\1\63\1\0\1\63\2\0\3\63\2\0\2\63"+
    "\1\u0127\2\u0128\24\63\1\0\26\63\1\0\3\63\3\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\6\63\2\u0129\16\63\1\0\26\63\1\0\3\63\17\0"+
    "\3\u0121\2\u012a\2\0\2\u012b\2\u012c\103\0\2\u012d\71\0"+
    "\2\u012e\107\0\2\u012f\60\0\3\u0130\4\0\2\u0131\14\0"+
    "\2\u0132\3\u0133\2\u0134\77\0\2\u0135\31\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\16\63\2\u0136"+
    "\6\63\1\0\26\63\1\0\3\63\3\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\u0130\2\u0137\4\63"+
    "\2\u0138\14\63\2\u0139\1\u0133\2\u013a\2\u013b\22\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\26\63\1\0\2\63\2\u013c\22\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\6\63\2\u013d\16\63\1\0\26\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\6\63\2\u013e\16\63\1\0\26\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\2\63\2\u013f\22\63\1\0\26\63\1\0"+
    "\3\63\26\0\2\u0140\77\0\2\u0141\73\0\2\u0142\62\0"+
    "\1\u0143\3\0\1\u0143\20\0\2\u0144\50\0\1\63\1\0"+
    "\1\u0145\2\0\1\63\1\u0145\1\63\2\0\2\63\1\0"+
    "\12\63\2\u0146\12\63\1\0\26\63\1\0\3\63\3\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\2\63\2\u0147\2\u0148\20\63\1\0\26\63\1\0\3\63"+
    "\22\0\2\u0149\2\u014a\77\0\2\u014b\56\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\4\63\2\u014c"+
    "\20\63\1\0\26\63\1\0\3\63\3\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\2\63\2\u014d"+
    "\2\63\2\u014e\16\63\1\0\26\63\1\0\3\63\3\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\6\63\2\u014f\16\63\1\0\26\63\1\0\3\63\3\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\6\63\2\u0150\16\63\1\0\26\63\1\0\3\63\3\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\6\63\2\u0151\16\63\1\0\26\63\1\0\3\63\3\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\24\63\2\u0152\1\0\26\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\26\63"+
    "\1\0\6\63\2\u0153\16\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\6\63"+
    "\2\u0154\16\63\1\0\26\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\14\63"+
    "\2\u0155\10\63\1\0\26\63\1\0\3\63\22\0\2\u0156"+
    "\2\0\2\u0157\77\0\2\u0158\77\0\2\u0159\77\0\2\u015a"+
    "\115\0\2\u015b\110\0\2\u015c\50\0\2\u015d\105\0\2\u015e"+
    "\111\0\3\u015f\33\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\0\26\63\1\u015f\2\u0160\24\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\26\63\1\u0161\2\u0162\24\63\1\0\3\63"+
    "\3\0\1\63\1\0\1\63\2\0\3\63\2\0\2\63"+
    "\1\0\24\63\2\u0163\1\0\26\63\1\0\3\63\46\0"+
    "\3\u0161\74\0\2\u0164\36\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\0\26\63\1\0\6\63\2\u0165"+
    "\16\63\1\0\3\63\3\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\0\26\63\1\u0166\2\u0167\4\63"+
    "\2\u0168\16\63\1\0\3\63\55\0\2\u0169\70\0\3\u0166"+
    "\4\0\2\u016a\25\0\1\63\1\0\1\u016b\2\0\1\63"+
    "\1\u016b\1\63\2\0\2\63\1\0\26\63\1\0\26\63"+
    "\1\0\3\63\5\0\1\u016c\3\0\1\u016c\72\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\10\63"+
    "\2\u016d\14\63\1\0\24\63\2\u016e\1\0\3\63\30\0"+
    "\2\u016f\41\0\2\u0170\7\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\0\14\63\2\u0171\10\63\1\0"+
    "\26\63\1\0\3\63\34\0\2\u0172\130\0\2\u0173\15\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\26\63\1\0\16\63\2\u0174\6\63\1\0\3\63\3\0"+
    "\1\303\102\0\1\u0175\3\0\1\u0175\10\0\2\u0176\74\0"+
    "\3\u0177\101\0\2\u0178\62\0\1\u0179\3\0\1\u0179\131\0"+
    "\2\u017a\106\0\2\u017b\31\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\0\26\63\1\0\2\63\2\u017c"+
    "\22\63\1\0\3\63\3\0\1\63\1\0\1\u017d\2\0"+
    "\1\63\1\u017d\1\63\2\0\2\63\1\0\2\63\2\u017e"+
    "\22\63\1\0\26\63\1\0\3\63\3\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\u0177\2\u017f\24\63"+
    "\1\0\26\63\1\0\3\63\3\0\1\63\1\0\1\63"+
    "\2\0\3\63\2\0\2\63\1\0\2\63\2\u0180\22\63"+
    "\1\0\26\63\1\0\3\63\3\0\1\63\1\0\1\u0181"+
    "\2\0\1\63\1\u0181\1\63\2\0\2\63\1\0\26\63"+
    "\1\0\26\63\1\0\3\63\3\0\1\63\1\0\1\63"+
    "\2\0\3\63\2\0\2\63\1\0\22\63\2\u0182\2\63"+
    "\1\0\26\63\1\0\3\63\5\0\1\u0183\3\0\1\u0183"+
    "\74\0\1\u0184\3\0\1\u0184\72\0\1\63\1\0\1\u0185"+
    "\2\0\1\63\1\u0185\1\63\2\0\2\63\1\0\26\63"+
    "\1\0\26\63\1\0\3\63\3\0\1\63\1\0\1\u0186"+
    "\2\0\1\63\1\u0186\1\63\2\0\2\63\1\0\26\63"+
    "\1\0\26\63\1\0\3\63\3\0\1\63\1\0\1\63"+
    "\2\0\3\63\2\0\2\63\1\0\6\63\2\u0187\16\63"+
    "\1\0\26\63\1\0\3\63\46\0\3\u0188\33\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\26\63"+
    "\1\u0188\2\u0189\24\63\1\0\3\63\26\0\2\u018a\54\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\26\63\1\0\6\63\2\u018b\16\63\1\0\3\63\3\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\u018c"+
    "\2\u018d\24\63\1\0\26\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\2\63"+
    "\2\u018e\22\63\1\0\10\63\2\u018f\14\63\1\0\3\63"+
    "\3\0\1\63\1\0\1\63\2\0\3\63\2\0\2\63"+
    "\1\0\16\63\2\u0190\6\63\1\0\26\63\1\0\3\63"+
    "\3\0\1\63\1\0\1\63\2\0\3\63\2\0\2\63"+
    "\1\u0191\2\u0192\6\63\2\u0193\14\63\1\0\26\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\4\63\2\u0194\20\63\1\0\26\63\1\0"+
    "\3\63\5\0\1\u0195\3\0\1\u0195\12\0\2\u0196\2\u0197"+
    "\54\0\1\63\1\0\1\u0198\2\0\1\63\1\u0198\1\63"+
    "\2\0\2\63\1\0\4\63\2\u0199\2\u019a\16\63\1\0"+
    "\26\63\1\0\3\63\3\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\0\12\63\2\u019b\12\63\1\0"+
    "\26\63\1\0\3\63\55\0\2\u019c\41\0\3\u018c\101\0"+
    "\2\u019d\33\0\2\u019e\56\0\2\u019f\60\0\3\u0191\6\0"+
    "\2\u01a0\73\0\2\u01a1\105\0\2\u01a2\50\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\26\63\1\0"+
    "\12\63\2\u01a3\12\63\1\0\3\63\73\0\2\u01a4\7\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\26\63\1\0\24\63\2\u01a5\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\26\63"+
    "\1\0\2\63\2\u01a6\22\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\26\63"+
    "\1\0\2\63\2\u01a7\22\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\2\63"+
    "\2\u01a8\22\63\1\0\26\63\1\0\3\63\61\0\2\u01a9"+
    "\67\0\2\u01aa\77\0\2\u01ab\50\0\2\u01ac\60\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\16\63"+
    "\2\u01ad\6\63\1\0\26\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\u01ae\2\0\1\63\1\u01ae\1\63\2\0\2\63"+
    "\1\0\26\63\1\0\26\63\1\0\3\63\22\0\2\u01af"+
    "\60\0\1\63\1\0\1\63\2\0\3\63\2\0\2\63"+
    "\1\0\2\63\2\u01b0\22\63\1\0\26\63\1\0\3\63"+
    "\36\0\2\u01b1\46\0\1\u01b2\3\0\1\u01b2\115\0\2\u01b3"+
    "\54\0\1\63\1\0\1\63\2\0\3\63\2\0\2\63"+
    "\1\0\6\63\2\u01b4\16\63\1\0\26\63\1\0\3\63"+
    "\3\0\1\63\1\0\1\u01b5\2\0\1\63\1\u01b5\1\63"+
    "\2\0\2\63\1\0\26\63\1\0\26\63\1\0\3\63"+
    "\3\0\1\63\1\0\1\63\2\0\3\63\2\0\2\63"+
    "\1\0\26\63\1\0\10\63\2\u01b6\14\63\1\0\3\63"+
    "\3\0\1\63\1\0\1\u01b7\2\0\1\63\1\u01b7\1\63"+
    "\2\0\2\63\1\0\26\63\1\0\26\63\1\0\3\63"+
    "\51\0\2\u01b8\31\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\0\26\63\1\0\2\63\2\u01b9\22\63"+
    "\1\0\3\63\3\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\0\26\63\1\0\6\63\2\u01ba\16\63"+
    "\1\0\3\63\3\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\0\2\63\2\u01bb\22\63\1\0\26\63"+
    "\1\0\3\63\3\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\0\2\63\2\u01bc\22\63\1\0\26\63"+
    "\1\0\3\63\3\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\0\26\63\1\u01bd\2\u01be\24\63\1\0"+
    "\3\63\17\0\3\u01bf\62\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\u01bf\2\u01c0\24\63\1\0\26\63"+
    "\1\0\3\63\5\0\1\u01c1\3\0\1\u01c1\146\0\2\u01c2"+
    "\25\0\1\u01c3\3\0\1\u01c3\144\0\2\u01c4\44\0\2\u01c5"+
    "\77\0\2\u01c6\123\0\3\u01bd\33\0\1\63\1\0\1\63"+
    "\2\0\3\63\2\0\2\63\1\u01c7\2\u01c8\24\63\1\0"+
    "\26\63\1\0\3\63\3\0\1\63\1\0\1\u01c9\2\0"+
    "\1\63\1\u01c9\1\63\2\0\2\63\1\0\26\63\1\0"+
    "\26\63\1\0\3\63\3\0\1\63\1\0\1\u01ca\2\0"+
    "\1\63\1\u01ca\1\63\2\0\2\63\1\0\26\63\1\0"+
    "\26\63\1\0\3\63\17\0\3\u01c7\64\0\1\u01cb\3\0"+
    "\1\u01cb\74\0\1\u01cc\3\0\1\u01cc\72\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\4\63\2\u01cd"+
    "\20\63\1\0\26\63\1\0\3\63\24\0\2\u01ce\56\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\12\63\2\u01cf\12\63\1\0\2\63\2\u01d0\22\63\1\0"+
    "\3\63\42\0\2\u01d1\40\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\0\22\63\2\u01d2\2\63\1\0"+
    "\26\63\1\0\3\63\32\0\2\u01d3\15\0\2\u01d4\31\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\26\63\1\u01d5\2\u01d6\24\63\1\0\3\63\46\0\3\u01d5"+
    "\54\0\2\u01d7\56\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\0\4\63\2\u01d8\20\63\1\0\26\63"+
    "\1\0\3\63\3\0\1\63\1\0\1\u01d9\2\0\1\63"+
    "\1\u01d9\1\63\2\0\2\63\1\0\26\63\1\0\26\63"+
    "\1\0\3\63\3\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\0\26\63\1\0\6\63\2\u01da\16\63"+
    "\1\0\3\63\3\0\1\63\1\0\1\u01db\2\0\1\63"+
    "\1\u01db\1\63\2\0\2\63\1\0\26\63\1\0\6\63"+
    "\2\u01dc\16\63\1\0\3\63\3\0\1\63\1\0\1\63"+
    "\2\0\3\63\2\0\2\63\1\0\26\63\1\0\12\63"+
    "\2\u01dd\12\63\1\0\3\63\26\0\2\u01de\54\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\6\63"+
    "\2\u01df\16\63\1\0\26\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\26\63"+
    "\1\0\6\63\2\u01e0\16\63\1\0\3\63\5\0\1\u01e1"+
    "\3\0\1\u01e1\144\0\2\u01e2\27\0\1\u01e3\3\0\1\u01e3"+
    "\43\0\2\u01e4\103\0\2\u01e5\73\0\2\u01e6\27\0\1\u01e7"+
    "\3\0\1\u01e7\74\0\1\u01e8\3\0\1\u01e8\14\0\2\u01e9"+
    "\56\0\1\u01ea\3\0\1\u01ea\22\0\2\u01eb\50\0\1\u01ec"+
    "\3\0\1\u01ec\115\0\2\u01ed\56\0\1\u01ee\3\0\1\u01ee"+
    "\123\0\2\u01ef\46\0\1\63\1\0\1\u01f0\2\0\1\63"+
    "\1\u01f0\1\63\2\0\2\63\1\0\26\63\1\0\26\63"+
    "\1\0\3\63\3\0\1\63\1\0\1\u01f1\2\0\1\63"+
    "\1\u01f1\1\63\2\0\2\63\1\0\6\63\2\u01f2\16\63"+
    "\1\0\26\63\1\0\3\63\3\0\1\63\1\0\1\u01f3"+
    "\2\0\1\63\1\u01f3\1\63\2\0\2\63\1\0\14\63"+
    "\2\u01f4\10\63\1\0\26\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\u01f5\2\0\1\63\1\u01f5\1\63\2\0\2\63"+
    "\1\0\26\63\1\0\26\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\6\63"+
    "\2\u01f6\16\63\1\0\26\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\u01f7\2\0\1\63\1\u01f7\1\63\2\0\2\63"+
    "\1\0\26\63\1\0\26\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\14\63"+
    "\2\u01f8\10\63\1\0\26\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\26\63"+
    "\1\0\10\63\2\u01f9\14\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\2\63"+
    "\2\u01fa\22\63\1\0\26\63\1\0\3\63\57\0\2\u01fb"+
    "\42\0\2\u01fc\115\0\2\u01fd\65\0\2\u01fe\54\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\20\63"+
    "\2\u01ff\4\63\1\0\26\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\6\63"+
    "\2\u0200\16\63\1\0\26\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\26\63"+
    "\1\0\10\63\2\u0201\14\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\26\63"+
    "\1\0\10\63\2\u0202\14\63\1\0\3\63\57\0\2\u0203"+
    "\77\0\2\u0204\23\0\1\63\1\0\1\u0205\2\0\1\63"+
    "\1\u0205\1\63\2\0\2\63\1\0\26\63\1\0\26\63"+
    "\1\0\3\63\3\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\0\26\63\1\u0206\2\u0207\24\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\26\63\1\0\6\63\2\u0208\16\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\u0209\2\0\1\63\1\u0209"+
    "\1\63\2\0\2\63\1\0\26\63\1\0\26\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\2\63\2\u020a\22\63\1\0\26\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\14\63\2\u020b\10\63\1\0\26\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\12\63\2\u020c\12\63\1\0\26\63\1\0"+
    "\3\63\5\0\1\u020d\3\0\1\u020d\135\0\3\u0206\105\0"+
    "\2\u020e\27\0\1\u020f\3\0\1\u020f\111\0\2\u0210\111\0"+
    "\2\u0211\75\0\2\u0212\116\0\2\u0213\31\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\26\63\1\0"+
    "\2\63\2\u0214\22\63\1\0\3\63\34\0\2\u0215\25\0"+
    "\2\u0216\17\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\14\63\2\u0217\10\63\1\0\14\63\2\u0218"+
    "\10\63\1\0\3\63\3\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\0\26\63\1\0\6\63\2\u0219"+
    "\16\63\1\0\3\63\55\0\2\u021a\25\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\26\63\1\0"+
    "\2\63\2\u021b\22\63\1\0\3\63\36\0\2\u021c\44\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\16\63\2\u021d\6\63\1\0\26\63\1\0\3\63\3\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\26\63\1\0\24\63\2\u021e\1\0\3\63\51\0\2\u021f"+
    "\121\0\2\u0220\7\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\0\12\63\2\u0221\12\63\1\0\26\63"+
    "\1\0\3\63\32\0\2\u0222\50\0\1\63\1\0\1\63"+
    "\2\0\3\63\2\0\2\63\1\0\14\63\2\u0223\10\63"+
    "\1\0\26\63\1\0\3\63\3\0\1\63\1\0\1\63"+
    "\2\0\3\63\2\0\2\63\1\0\26\63\1\u0224\2\u0225"+
    "\24\63\1\0\3\63\34\0\2\u0226\111\0\3\u0224\33\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\26\63\1\0\10\63\2\u0227\14\63\1\0\3\63\57\0"+
    "\2\u0228\101\0\2\u0229\75\0\2\u022a\46\0\2\u022b\126\0"+
    "\2\u022c\25\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\26\63\1\0\12\63\2\u022d\12\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\26\63\1\0\10\63\2\u022e\14\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\6\63\2\u022f\16\63\1\0\26\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\26\63\1\0\6\63\2\u0230\16\63\1\0"+
    "\3\63\24\0\2\u0231\134\0\2\u0232\21\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\4\63\2\u0233"+
    "\20\63\1\0\26\63\1\0\3\63\3\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\26\63\1\0"+
    "\12\63\2\u0234\12\63\1\0\3\63\26\0\2\u0235\54\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\6\63\2\u0236\16\63\1\0\26\63\1\0\3\63\3\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\6\63\2\u0237\16\63\1\0\26\63\1\0\3\63\17\0"+
    "\3\u0238\62\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\u0238\2\u0239\24\63\1\0\26\63\1\0\3\63"+
    "\3\0\1\63\1\0\1\63\2\0\3\63\2\0\2\63"+
    "\1\0\26\63\1\0\6\63\2\u023a\16\63\1\0\3\63"+
    "\3\0\1\63\1\0\1\63\2\0\3\63\2\0\2\63"+
    "\1\0\16\63\2\u023b\6\63\1\0\26\63\1\0\3\63"+
    "\3\0\1\63\1\0\1\63\2\0\3\63\2\0\2\63"+
    "\1\0\26\63\1\u023c\2\u023d\24\63\1\0\3\63\26\0"+
    "\2\u023e\54\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\6\63\2\u023f\16\63\1\0\26\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\2\63\2\u0240\22\63\1\0\26\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\26\63\1\0\26\63\1\u0241\2\u0242\1\63"+
    "\55\0\2\u0243\25\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\0\26\63\1\0\6\63\2\u0244\16\63"+
    "\1\0\3\63\3\0\1\63\1\0\1\u0245\2\0\1\63"+
    "\1\u0245\1\63\2\0\2\63\1\0\26\63\1\0\26\63"+
    "\1\0\3\63\26\0\2\u0246\126\0\2\u0247\60\0\2\u0248"+
    "\107\0\3\u023c\52\0\2\u0249\152\0\3\u0241\6\0\1\u024a"+
    "\3\0\1\u024a\72\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\0\14\63\2\u024b\10\63\1\0\26\63"+
    "\1\0\3\63\73\0\2\u024c\7\0\1\63\1\0\1\63"+
    "\2\0\3\63\2\0\2\63\1\0\26\63\1\0\24\63"+
    "\2\u024d\1\0\3\63\3\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\u024e\2\u024f\24\63\1\0\26\63"+
    "\1\0\3\63\3\0\1\63\1\0\1\u0250\2\0\1\63"+
    "\1\u0250\1\63\2\0\2\63\1\0\26\63\1\0\26\63"+
    "\1\0\3\63\34\0\2\u0251\62\0\3\u024e\64\0\1\u0252"+
    "\3\0\1\u0252\72\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\0\26\63\1\u0253\2\u0254\24\63\1\0"+
    "\3\63\46\0\3\u0253\62\0\2\u0255\50\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\12\63\2\u0256"+
    "\12\63\1\0\26\63\1\0\3\63\3\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\26\63\1\0"+
    "\6\63\2\u0257\16\63\1\0\3\63\3\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\12\63\2\u0258"+
    "\12\63\1\0\26\63\1\0\3\63\3\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\12\63\2\u0259"+
    "\12\63\1\0\26\63\1\0\3\63\44\0\2\u025a\36\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\24\63\2\u025b\1\0\26\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\16\63"+
    "\2\u025c\6\63\1\0\26\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\26\63"+
    "\1\0\6\63\2\u025d\16\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\26\63"+
    "\1\0\20\63\2\u025e\4\63\1\0\3\63\44\0\2\u025f"+
    "\36\0\1\63\1\0\1\63\2\0\3\63\2\0\2\63"+
    "\1\0\24\63\2\u0260\1\0\26\63\1\0\3\63\5\0"+
    "\1\u0261\3\0\1\u0261\72\0\1\63\1\0\1\u0262\2\0"+
    "\1\63\1\u0262\1\63\2\0\2\63\1\0\26\63\1\0"+
    "\26\63\1\0\3\63\55\0\2\u0263\54\0\2\u0264\77\0"+
    "\2\u0265\103\0\2\u0266\116\0\2\u0267\111\0\2\u0268\15\0"+
    "\1\u0269\3\0\1\u0269\72\0\1\63\1\0\1\u026a\2\0"+
    "\1\63\1\u026a\1\63\2\0\2\63\1\0\26\63\1\0"+
    "\26\63\1\0\3\63\3\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\0\12\63\2\u026b\12\63\1\0"+
    "\26\63\1\0\3\63\3\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\0\12\63\2\u026c\12\63\1\0"+
    "\26\63\1\0\3\63\32\0\2\u026d\77\0\2\u026e\50\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\22\63\2\u026f\2\63\1\0\26\63\1\0\3\63\42\0"+
    "\2\u0270\40\0\1\63\1\0\1\u0271\2\0\1\63\1\u0271"+
    "\1\63\2\0\2\63\1\0\26\63\1\0\26\63\1\0"+
    "\3\63\34\0\2\u0272\46\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\0\14\63\2\u0273\10\63\1\0"+
    "\26\63\1\0\3\63\5\0\1\u0274\3\0\1\u0274\140\0"+
    "\2\u0275\31\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\26\63\1\0\2\63\2\u0276\22\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\6\63\2\u0277\16\63\1\0\26\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\4\63\2\u0278\20\63\1\0\26\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\12\63\2\u0279\12\63\1\0\26\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\26\63\1\0\10\63\2\u027a\14\63\1\0"+
    "\3\63\46\0\3\u027b\33\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\0\26\63\1\u027b\2\u027c\24\63"+
    "\1\0\3\63\3\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\0\26\63\1\0\20\63\2\u027d\4\63"+
    "\1\0\3\63\26\0\2\u027e\75\0\2\u027f\105\0\2\u0280"+
    "\124\0\2\u0281\107\0\2\u0282\54\0\2\u0283\65\0\2\u0284"+
    "\52\0\1\u0285\3\0\1\u0285\121\0\2\u0286\62\0\2\u0287"+
    "\130\0\3\u0288\62\0\2\u0289\77\0\2\u028a\50\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\24\63"+
    "\2\u028b\1\0\26\63\1\0\3\63\3\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\12\63\2\u028c"+
    "\12\63\1\0\26\63\1\0\3\63\3\0\1\63\1\0"+
    "\1\u028d\2\0\1\63\1\u028d\1\63\2\0\2\63\1\0"+
    "\26\63\1\0\26\63\1\0\3\63\3\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\12\63\2\u028e"+
    "\12\63\1\0\26\63\1\0\3\63\3\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\u028f\1\0\26\63\1\0"+
    "\26\63\1\0\3\63\3\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\0\26\63\1\u0288\2\u0290\24\63"+
    "\1\0\3\63\3\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\0\12\63\2\u0291\12\63\1\0\26\63"+
    "\1\0\3\63\3\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\0\12\63\2\u0292\12\63\1\0\26\63"+
    "\1\0\3\63\3\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\0\12\63\2\u0293\12\63\1\0\26\63"+
    "\1\0\3\63\32\0\2\u0294\124\0\2\u0295\23\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\26\63"+
    "\1\0\10\63\2\u0296\14\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\u0297\2\0\1\63\1\u0297\1\63\2\0\2\63"+
    "\1\0\26\63\1\0\26\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\26\63"+
    "\1\0\10\63\2\u0298\14\63\1\0\3\63\5\0\1\u0299"+
    "\3\0\1\u0299\146\0\2\u029a\23\0\1\63\1\0\1\63"+
    "\2\0\3\63\2\0\2\63\1\0\12\63\2\u029b\12\63"+
    "\1\0\26\63\1\0\3\63\34\0\2\u029c\46\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\14\63"+
    "\2\u029d\10\63\1\0\26\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\4\63"+
    "\2\u029e\20\63\1\0\26\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\12\63"+
    "\2\u029f\12\63\1\0\26\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\26\63"+
    "\1\0\16\63\2\u02a0\6\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\26\63"+
    "\1\u02a1\2\u02a2\24\63\1\0\3\63\3\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\6\63\2\u02a3"+
    "\16\63\1\0\26\63\1\0\3\63\32\0\2\u02a4\71\0"+
    "\2\u02a5\105\0\2\u02a6\132\0\2\u02a7\60\0\3\u02a1\56\0"+
    "\2\u02a8\144\0\2\u02a9\7\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\0\26\63\1\0\24\63\2\u02aa"+
    "\1\0\3\63\51\0\2\u02ab\105\0\2\u02ac\23\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\26\63"+
    "\1\0\2\63\2\u02ad\22\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\26\63"+
    "\1\0\10\63\2\u02ae\14\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\6\63"+
    "\2\u02af\16\63\1\0\26\63\1\0\3\63\26\0\2\u02b0"+
    "\126\0\2\u02b1\25\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\0\26\63\1\0\6\63\2\u02b2\16\63"+
    "\1\0\3\63\3\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\0\16\63\2\u02b3\6\63\1\0\26\63"+
    "\1\0\3\63\36\0\2\u02b4\44\0\1\63\1\0\1\63"+
    "\2\0\3\63\2\0\2\63\1\0\26\63\1\0\16\63"+
    "\2\u02b5\6\63\1\0\3\63\65\0\2\u02b6\15\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\12\63"+
    "\2\u02b7\12\63\1\0\26\63\1\0\3\63\51\0\2\u02b8"+
    "\31\0\1\63\1\0\1\63\2\0\3\63\2\0\2\63"+
    "\1\0\26\63\1\0\2\63\2\u02b9\22\63\1\0\3\63"+
    "\32\0\2\u02ba\50\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\0\26\63\1\0\12\63\2\u02bb\12\63"+
    "\1\0\3\63\61\0\2\u02bc\44\0\2\u02bd\70\0\3\u02be"+
    "\76\0\3\u02bf\125\0\3\u02c0\33\0\1\63\1\0\1\63"+
    "\2\0\3\63\2\0\2\63\1\0\6\63\2\u02c1\16\63"+
    "\1\0\26\63\1\0\3\63\3\0\1\63\1\0\1\63"+
    "\2\0\3\63\2\0\2\63\1\u02be\2\u02c2\24\63\1\0"+
    "\26\63\1\0\3\63\3\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\u02bf\2\u02c3\24\63\1\0\26\63"+
    "\1\0\3\63\3\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\0\26\63\1\u02c0\2\u02c4\24\63\1\0"+
    "\3\63\26\0\2\u02c5\105\0\2\u02c6\46\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\6\63\2\u02c7"+
    "\16\63\1\0\26\63\1\0\3\63\3\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\14\63\2\u02c8"+
    "\10\63\1\0\26\63\1\0\3\63\3\0\1\63\1\0"+
    "\1\u02c9\2\0\1\63\1\u02c9\1\63\2\0\2\63\1\0"+
    "\26\63\1\0\26\63\1\0\3\63\3\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\6\63\2\u02ca"+
    "\16\63\1\0\26\63\1\0\3\63\3\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\26\63\1\0"+
    "\2\63\2\u02cb\22\63\1\0\3\63\26\0\2\u02cc\54\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\6\63\2\u02cd\16\63\1\0\26\63\1\0\3\63\32\0"+
    "\2\u02ce\50\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\12\63\2\u02cf\12\63\1\0\26\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\26\63\1\u02d0\2\u02d1\24\63\1\0\3\63"+
    "\44\0\2\u02d2\36\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\0\24\63\2\u02d3\1\0\26\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\26\63\1\0\2\63\2\u02d4\22\63\1\0"+
    "\3\63\5\0\1\u02d5\3\0\1\u02d5\115\0\2\u02d6\122\0"+
    "\2\u02d7\74\0\3\u02d0\101\0\2\u02d8\31\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\12\63\2\u02d9"+
    "\12\63\1\0\26\63\1\0\3\63\5\0\1\u02da\3\0"+
    "\1\u02da\72\0\1\63\1\0\1\u02db\2\0\1\63\1\u02db"+
    "\1\63\2\0\2\63\1\0\26\63\1\0\26\63\1\0"+
    "\3\63\55\0\2\u02dc\25\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\0\26\63\1\0\6\63\2\u02dd"+
    "\16\63\1\0\3\63\32\0\2\u02de\140\0\2\u02df\7\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\26\63\1\0\24\63\2\u02e0\1\0\3\63\46\0\3\u02e1"+
    "\33\0\1\63\1\0\1\63\2\0\3\63\2\0\2\63"+
    "\1\0\26\63\1\u02e1\2\u02e2\24\63\1\0\3\63\3\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\u02e3"+
    "\2\u02e4\24\63\1\0\26\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\u02e5\2\u02e6"+
    "\24\63\1\0\26\63\1\0\3\63\3\0\1\63\1\0"+
    "\1\u02e7\2\0\1\63\1\u02e7\1\63\2\0\2\63\1\0"+
    "\26\63\1\0\26\63\1\0\3\63\5\0\1\u02e8\3\0"+
    "\1\u02e8\72\0\1\63\1\0\1\u02e9\2\0\1\63\1\u02e9"+
    "\1\63\2\0\2\63\1\0\26\63\1\0\26\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\u02ea\2\0\1\63\1\u02ea"+
    "\1\63\2\0\2\63\1\0\26\63\1\0\26\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\4\63\2\u02eb\20\63\1\0\26\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\26\63\1\0\6\63\2\u02ec\16\63\1\0"+
    "\3\63\17\0\3\u02e3\76\0\3\u02e5\64\0\1\u02ed\3\0"+
    "\1\u02ed\74\0\1\u02ee\3\0\1\u02ee\113\0\2\u02ef\130\0"+
    "\2\u02f0\50\0\2\u02f1\54\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\0\6\63\2\u02f2\16\63\1\0"+
    "\26\63\1\0\3\63\57\0\2\u02f3\23\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\26\63\1\0"+
    "\10\63\2\u02f4\14\63\1\0\3\63\73\0\2\u02f5\7\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\26\63\1\0\24\63\2\u02f6\1\0\3\63\3\0\1\63"+
    "\1\0\1\u02f7\2\0\1\63\1\u02f7\1\63\2\0\2\63"+
    "\1\0\26\63\1\0\26\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\22\63"+
    "\2\u02f8\2\63\1\0\26\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\12\63"+
    "\2\u02f9\12\63\1\0\26\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\2\63"+
    "\2\u02fa\22\63\1\0\26\63\1\0\3\63\51\0\2\u02fb"+
    "\31\0\1\63\1\0\1\63\2\0\3\63\2\0\2\63"+
    "\1\0\26\63\1\0\2\63\2\u02fc\22\63\1\0\3\63"+
    "\3\0\1\63\1\0\1\63\2\0\3\63\2\0\2\63"+
    "\1\0\26\63\1\0\6\63\2\u02fd\16\63\1\0\3\63"+
    "\5\0\1\u02fe\3\0\1\u02fe\131\0\2\u02ff\67\0\2\u0300"+
    "\67\0\2\u0301\132\0\2\u0302\70\0\3\u0303\56\0\2\u0304"+
    "\126\0\2\u0305\41\0\3\u0306\64\0\1\u0307\3\0\1\u0307"+
    "\144\0\2\u0308\27\0\1\u0309\3\0\1\u0309\72\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\26\63"+
    "\1\u0303\2\u030a\24\63\1\0\3\63\3\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\6\63\2\u030b"+
    "\16\63\1\0\26\63\1\0\3\63\3\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\26\63\1\0"+
    "\6\63\2\u030c\16\63\1\0\3\63\3\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\u0306\2\u030d\24\63"+
    "\1\0\26\63\1\0\3\63\3\0\1\63\1\0\1\u030e"+
    "\2\0\1\63\1\u030e\1\63\2\0\2\63\1\0\26\63"+
    "\1\0\26\63\1\0\3\63\3\0\1\63\1\0\1\63"+
    "\2\0\3\63\2\0\2\63\1\0\26\63\1\0\6\63"+
    "\2\u030f\16\63\1\0\3\63\3\0\1\63\1\0\1\u0310"+
    "\2\0\1\63\1\u0310\1\63\2\0\2\63\1\0\26\63"+
    "\1\0\26\63\1\0\3\63\3\0\1\63\1\0\1\63"+
    "\2\0\3\63\2\0\2\63\1\0\26\63\1\0\6\63"+
    "\2\u0311\16\63\1\0\3\63\55\0\2\u0312\77\0\2\u0313"+
    "\25\0\1\63\1\0\1\63\2\0\3\63\2\0\2\63"+
    "\1\0\26\63\1\0\6\63\2\u0314\16\63\1\0\3\63"+
    "\3\0\1\63\1\0\1\63\2\0\3\63\2\0\2\63"+
    "\1\u0315\2\u0316\24\63\1\0\26\63\1\0\3\63\3\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\16\63\2\u0317\6\63\1\0\26\63\1\0\3\63\17\0"+
    "\3\u0315\115\0\2\u0318\112\0\2\u0319\31\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\26\63\1\0"+
    "\2\63\2\u031a\22\63\1\0\3\63\3\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\22\63\2\u031b"+
    "\2\63\1\0\26\63\1\0\3\63\3\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\26\63\1\0"+
    "\22\63\2\u031c\2\63\1\0\3\63\51\0\2\u031d\31\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\26\63\1\0\2\63\2\u031e\22\63\1\0\3\63\42\0"+
    "\2\u031f\126\0\2\u0320\13\0\1\u0321\3\0\1\u0321\72\0"+
    "\1\63\1\0\1\u0322\2\0\1\63\1\u0322\1\63\2\0"+
    "\2\63\1\0\26\63\1\0\26\63\1\0\3\63\3\0"+
    "\1\63\1\0\1\u0323\2\0\1\63\1\u0323\1\63\2\0"+
    "\2\63\1\0\26\63\1\0\26\63\1\0\3\63\5\0"+
    "\1\u0324\3\0\1\u0324\121\0\2\u0325\50\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\12\63\2\u0326"+
    "\12\63\1\0\26\63\1\0\3\63\3\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\26\63\1\0"+
    "\6\63\2\u0327\16\63\1\0\3\63\55\0\2\u0328\25\0"+
    "\1\63\1\0\1\u0329\2\0\1\63\1\u0329\1\63\2\0"+
    "\2\63\1\0\26\63\1\0\26\63\1\0\3\63\5\0"+
    "\1\u032a\3\0\1\u032a\135\0\3\u032b\101\0\2\u032c\31\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\26\63\1\u032b\2\u032d\24\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\26\63"+
    "\1\0\2\63\2\u032e\22\63\1\0\3\63\46\0\3\u032f"+
    "\33\0\1\63\1\0\1\63\2\0\3\63\2\0\2\63"+
    "\1\0\26\63\1\u032f\2\u0330\24\63\1\0\3\63\3\0"+
    "\1\63\1\0\1\u0331\2\0\1\63\1\u0331\1\63\2\0"+
    "\2\63\1\0\26\63\1\0\26\63\1\0\3\63\55\0"+
    "\2\u0332\25\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\26\63\1\0\6\63\2\u0333\16\63\1\0"+
    "\3\63\24\0\2\u0334\56\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\0\4\63\2\u0335\20\63\1\0"+
    "\26\63\1\0\3\63\5\0\1\u0336\3\0\1\u0336\72\0"+
    "\1\63\1\0\1\u0337\2\0\1\63\1\u0337\1\63\2\0"+
    "\2\63\1\0\26\63\1\0\26\63\1\0\3\63\3\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\6\63\2\u0338\16\63\1\0\26\63\1\0\3\63\5\0"+
    "\1\u0339\3\0\1\u0339\115\0\2\u033a\54\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\26\63\1\0"+
    "\6\63\2\u033b\16\63\1\0\3\63\32\0\2\u033c\50\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\12\63\2\u033d\12\63\1\0\26\63\1\0\3\63\24\0"+
    "\2\u033e\56\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\4\63\2\u033f\20\63\1\0\26\63\1\0"+
    "\3\63\55\0\2\u0340\73\0\2\u0341\31\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\26\63\1\0"+
    "\2\63\2\u0342\22\63\1\0\3\63\24\0\2\u0343\56\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\4\63\2\u0344\20\63\1\0\26\63\1\0\3\63\5\0"+
    "\1\u0345\3\0\1\u0345\72\0\1\63\1\0\1\u0346\2\0"+
    "\1\63\1\u0346\1\63\2\0\2\63\1\0\26\63\1\0"+
    "\26\63\1\0\3\63\46\0\3\u0347\33\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\26\63\1\u0347"+
    "\2\u0348\24\63\1\0\3\63\3\0\1\63\1\0\1\63"+
    "\2\0\3\63\2\0\2\63\1\0\26\63\1\0\2\63"+
    "\2\u0349\22\63\1\0\3\63\15\0\2\u034a\65\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\u034b\1\0\26\63"+
    "\1\0\26\63\1\0\3\63\3\0\1\63\1\0\1\u034c"+
    "\2\0\1\63\1\u034c\1\63\2\0\2\63\1\0\26\63"+
    "\1\0\26\63\1\0\3\63\3\0\1\63\1\0\1\63"+
    "\2\0\3\63\2\0\2\63\1\0\4\63\2\u034d\20\63"+
    "\1\0\26\63\1\0\3\63\51\0\2\u034e\33\0\1\u034f"+
    "\3\0\1\u034f\113\0\2\u0350\101\0\2\u0351\54\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\6\63"+
    "\2\u0352\16\63\1\0\26\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\u0353\2\0\1\63\1\u0353\1\63\2\0\2\63"+
    "\1\0\26\63\1\0\6\63\2\u0354\16\63\1\0\3\63"+
    "\3\0\1\63\1\0\1\63\2\0\3\63\2\0\2\63"+
    "\1\0\6\63\2\u0355\16\63\1\0\26\63\1\0\3\63"+
    "\24\0\2\u0356\56\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\0\4\63\2\u0357\20\63\1\0\26\63"+
    "\1\0\3\63\3\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\u0358\2\u0359\24\63\1\0\26\63\1\0"+
    "\3\63\5\0\1\u035a\3\0\1\u035a\43\0\2\u035b\50\0"+
    "\2\u035c\70\0\3\u0358\134\0\2\u035d\66\0\2\u035e\40\0"+
    "\1\u035f\3\0\1\u035f\133\0\2\u0360\55\0\2\u0361\60\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\26\63\1\0\6\63\2\u0362\16\63\1\0\3\63\3\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\24\63\2\u0363\1\0\26\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\u0364\2\0\1\63\1\u0364\1\63\2\0\2\63"+
    "\1\0\26\63\1\0\26\63\1\0\3\63\3\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\24\63"+
    "\2\u0365\1\0\26\63\1\0\3\63\3\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\2\63\2\u0366"+
    "\22\63\1\0\26\63\1\0\3\63\3\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\2\63\2\u0367"+
    "\22\63\1\0\26\63\1\0\3\63\22\0\2\u0368\77\0"+
    "\2\u0369\60\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\2\63\2\u036a\22\63\1\0\26\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\u036b\2\0\1\63\1\u036b"+
    "\1\63\2\0\2\63\1\0\26\63\1\0\26\63\1\0"+
    "\3\63\24\0\2\u036c\56\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\0\4\63\2\u036d\20\63\1\0"+
    "\26\63\1\0\3\63\5\0\1\u036e\3\0\1\u036e\154\0"+
    "\2\u036f\15\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\26\63\1\0\16\63\2\u0370\6\63\1\0"+
    "\3\63\53\0\2\u0371\27\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\0\26\63\1\0\4\63\2\u0372"+
    "\20\63\1\0\3\63\51\0\2\u0373\31\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\26\63\1\0"+
    "\2\63\2\u0374\22\63\1\0\3\63\46\0\3\u0375\33\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\26\63\1\u0375\2\u0376\24\63\1\0\3\63\26\0\2\u0377"+
    "\54\0\1\63\1\0\1\63\2\0\3\63\2\0\2\63"+
    "\1\0\6\63\2\u0378\16\63\1\0\26\63\1\0\3\63"+
    "\3\0\1\63\1\0\1\63\2\0\3\63\2\0\2\63"+
    "\1\0\26\63\1\0\26\63\1\0\2\63\1\u0379\100\0"+
    "\1\u037a\3\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\12\63\2\u037b\12\63\1\0\26\63\1\0"+
    "\3\63\26\0\2\u037c\54\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\0\6\63\2\u037d\16\63\1\0"+
    "\26\63\1\0\3\63\32\0\2\u037e\73\0\2\u037f\54\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\6\63\2\u0380\16\63\1\0\26\63\1\0\3\63\53\0"+
    "\2\u0381\27\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\26\63\1\0\4\63\2\u0382\20\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\4\63\2\u0383\20\63\1\0\26\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\26\63\1\0\26\63\1\u0384\2\u0385\1\63"+
    "\24\0\2\u0386\150\0\3\u0384\4\0\1\63\1\0\1\63"+
    "\2\0\3\63\2\0\2\63\1\0\24\63\2\u0387\1\0"+
    "\26\63\1\0\3\63\3\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\0\26\63\1\0\20\63\2\u0388"+
    "\4\63\1\0\3\63\26\0\2\u0389\54\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\6\63\2\u038a"+
    "\16\63\1\0\26\63\1\0\3\63\5\0\1\u038b\3\0"+
    "\1\u038b\72\0\1\63\1\0\1\u038c\2\0\1\63\1\u038c"+
    "\1\63\2\0\2\63\1\0\26\63\1\0\26\63\1\0"+
    "\3\63\44\0\2\u038d\122\0\2\u038e\36\0\2\u038f\75\0"+
    "\2\u0390\75\0\2\u0391\60\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\0\6\63\2\u0392\16\63\1\0"+
    "\26\63\1\0\3\63\3\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\0\4\63\2\u0393\20\63\1\0"+
    "\26\63\1\0\3\63\3\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\0\2\63\2\u0394\22\63\1\0"+
    "\26\63\1\0\3\63\32\0\2\u0395\50\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\12\63\2\u0396"+
    "\12\63\1\0\26\63\1\0\3\63\5\0\1\u0397\3\0"+
    "\1\u0397\72\0\1\63\1\0\1\u0398\2\0\1\63\1\u0398"+
    "\1\63\2\0\2\63\1\0\26\63\1\0\26\63\1\0"+
    "\3\63\26\0\2\u0399\54\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\0\6\63\2\u039a\16\63\1\0"+
    "\26\63\1\0\3\63\51\0\2\u039b\31\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\26\63\1\0"+
    "\2\63\2\u039c\22\63\1\0\3\63\3\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\6\63\2\u039d"+
    "\14\63\2\u039e\1\0\26\63\1\0\3\63\26\0\2\u039f"+
    "\14\0\2\u03a0\36\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\0\26\63\1\0\16\63\2\u03a1\6\63"+
    "\1\0\3\63\46\0\3\u03a2\33\0\1\63\1\0\1\63"+
    "\2\0\3\63\2\0\2\63\1\0\26\63\1\u03a2\2\u03a3"+
    "\24\63\1\0\3\63\65\0\2\u03a4\17\0\1\u03a5\3\0"+
    "\1\u03a5\72\0\1\63\1\0\1\u03a6\2\0\1\63\1\u03a6"+
    "\1\63\2\0\2\63\1\0\26\63\1\0\26\63\1\0"+
    "\3\63\3\0\1\63\1\0\1\u03a7\2\0\1\63\1\u03a7"+
    "\1\63\2\0\2\63\1\0\26\63\1\0\26\63\1\0"+
    "\3\63\5\0\1\u03a8\3\0\1\u03a8\72\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\2\63\2\u03a9"+
    "\22\63\1\0\26\63\1\0\3\63\22\0\2\u03aa\62\0"+
    "\1\u03ab\3\0\1\u03ab\115\0\2\u03ac\136\0\2\u03ad\15\0"+
    "\1\63\1\0\1\u03ae\2\0\1\63\1\u03ae\1\63\2\0"+
    "\2\63\1\0\26\63\1\0\26\63\1\0\3\63\3\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\6\63\2\u03af\16\63\1\0\26\63\1\0\3\63\3\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\26\63\1\0\16\63\2\u03b0\6\63\1\0\3\63\5\0"+
    "\1\u03b1\3\0\1\u03b1\72\0\1\63\1\0\1\u03b2\2\0"+
    "\1\63\1\u03b2\1\63\2\0\2\63\1\0\26\63\1\0"+
    "\26\63\1\0\3\63\26\0\2\u03b3\54\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\6\63\2\u03b4"+
    "\16\63\1\0\26\63\1\0\3\63\3\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\26\63\1\u03b5"+
    "\2\u03b6\24\63\1\0\3\63\3\0\1\63\1\0\1\63"+
    "\2\0\3\63\2\0\2\63\1\0\26\63\1\0\6\63"+
    "\2\u03b7\16\63\1\0\3\63\46\0\3\u03b5\105\0\2\u03b8"+
    "\56\0\2\u03b9\46\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\0\14\63\2\u03ba\10\63\1\0\26\63"+
    "\1\0\3\63\3\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\u03bb\2\u03bc\24\63\1\0\26\63\1\0"+
    "\3\63\17\0\3\u03bb\62\0\1\63\1\0\1\u03bd\2\0"+
    "\1\63\1\u03bd\1\63\2\0\2\63\1\0\26\63\1\0"+
    "\26\63\1\0\3\63\5\0\1\u03be\3\0\1\u03be\125\0"+
    "\2\u03bf\44\0\1\63\1\0\1\63\2\0\3\63\2\0"+
    "\2\63\1\0\16\63\2\u03c0\6\63\1\0\26\63\1\0"+
    "\3\63\36\0\2\u03c1\44\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\0\16\63\2\u03c2\6\63\1\0"+
    "\26\63\1\0\3\63\3\0\1\63\1\0\1\63\2\0"+
    "\3\63\2\0\2\63\1\0\6\63\2\u03c3\16\63\1\0"+
    "\26\63\1\0\3\63\26\0\2\u03c4\122\0\2\u03c5\31\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\0"+
    "\26\63\1\0\2\63\2\u03c6\22\63\1\0\3\63\5\0"+
    "\1\u03c7\3\0\1\u03c7\72\0\1\63\1\0\1\u03c8\2\0"+
    "\1\63\1\u03c8\1\63\2\0\2\63\1\0\26\63\1\0"+
    "\26\63\1\0\3\63\5\0\1\u03c9\3\0\1\u03c9\72\0"+
    "\1\63\1\0\1\u03ca\2\0\1\63\1\u03ca\1\63\2\0"+
    "\2\63\1\0\26\63\1\0\26\63\1\0\3\63\3\0"+
    "\1\63\1\0\1\u03cb\2\0\1\63\1\u03cb\1\63\2\0"+
    "\2\63\1\0\26\63\1\0\26\63\1\0\3\63\5\0"+
    "\1\u03cc\3\0\1\u03cc\140\0\2\u03cd\31\0\1\63\1\0"+
    "\1\63\2\0\3\63\2\0\2\63\1\0\26\63\1\0"+
    "\2\63\2\u03ce\22\63\1\0\3\63\17\0\3\u03cf\62\0"+
    "\1\63\1\0\1\63\2\0\3\63\2\0\2\63\1\u03cf"+
    "\2\u03d0\24\63\1\0\26\63\1\0\3\63\26\0\2\u03d1"+
    "\54\0\1\63\1\0\1\63\2\0\3\63\2\0\2\63"+
    "\1\0\6\63\2\u03d2\16\63\1\0\26\63\1\0\3\63"+
    "\26\0\2\u03d3\54\0\1\63\1\0\1\63\2\0\3\63"+
    "\2\0\2\63\1\0\6\63\2\u03d4\16\63\1\0\26\63"+
    "\1\0\3\63\55\0\2\u03d5\25\0\1\63\1\0\1\63"+
    "\2\0\3\63\2\0\2\63\1\0\26\63\1\0\6\63"+
    "\2\u03d6\16\63\1\0\3\63\36\0\2\u03d7\44\0\1\63"+
    "\1\0\1\63\2\0\3\63\2\0\2\63\1\0\16\63"+
    "\2\u03d8\6\63\1\0\26\63\1\0\3\63\61\0\2\u03d9"+
    "\21\0\1\63\1\0\1\63\2\0\3\63\2\0\2\63"+
    "\1\0\26\63\1\0\12\63\2\u03da\12\63\1\0\3\63";

  private static int [] zzUnpackTrans() {
    int [] result = new int[50375];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String[] ZZ_ERROR_MSG = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\70\1\6\0\5\1\1\0\1\1\1\0"+
    "\1\11\3\0\3\1\1\0\1\1\1\0\5\1\5\0"+
    "\5\1\2\0\1\11\2\0\3\1\3\0\3\1\3\0"+
    "\6\1\1\11\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\2\1\1\0\2\1\3\0\1\11"+
    "\3\0\10\1\3\0\2\1\1\0\12\1\11\0\3\1"+
    "\2\0\2\1\2\0\1\1\1\0\2\1\1\0\1\11"+
    "\1\1\2\0\2\1\5\0\1\11\1\0\1\11\1\0"+
    "\7\1\1\11\1\0\1\11\1\0\4\1\1\0\1\1"+
    "\1\0\6\1\1\0\2\1\7\0\1\1\1\0\4\1"+
    "\4\0\2\1\1\0\1\1\1\0\1\1\1\0\4\1"+
    "\1\0\5\1\1\0\1\1\6\0\4\1\3\0\1\1"+
    "\1\0\1\1\1\0\1\1\1\0\1\1\2\0\5\1"+
    "\1\0\2\1\14\0\12\1\1\11\4\0\4\1\2\0"+
    "\1\11\12\1\1\11\4\0\1\11\4\0\1\1\1\0"+
    "\2\1\1\0\1\1\1\0\2\1\2\0\1\1\1\0"+
    "\2\1\2\0\1\1\1\0\1\11\1\1\4\0\3\11"+
    "\7\1\2\0\3\1\1\0\1\1\1\11\1\1\1\0"+
    "\4\1\1\0\3\1\1\11\1\0\1\11\4\1\7\0"+
    "\1\1\1\0\5\1\1\0\1\11\1\0\2\1\1\11"+
    "\1\1\1\11\2\0\4\1\1\0\4\1\1\0\1\1"+
    "\1\0\1\1\7\0\3\1\2\0\1\1\1\0\4\1"+
    "\1\0\1\11\1\0\1\1\1\11\6\1\1\0\2\1"+
    "\4\0\1\11\5\0\1\11\4\0\13\1\1\0\2\11"+
    "\1\0\4\1\2\0\1\1\1\0\6\1\7\0\1\1"+
    "\2\0\3\1\1\0\1\1\1\0\2\1\1\11\1\0"+
    "\1\1\1\0\1\1\1\0\1\1\1\0\1\1\5\0"+
    "\4\1\2\0\2\1\1\11\2\1\1\11\3\1\1\0"+
    "\1\1\1\0\2\1\1\11\1\1\1\0\2\1\5\0"+
    "\1\1\1\0\1\1\1\0\2\1\1\0\1\11\1\0"+
    "\1\1\1\0\4\1\1\0\4\1\1\11\1\1\1\11"+
    "\1\1\7\0\3\1\2\11\1\1\1\11\1\1\1\0"+
    "\1\1\1\11\1\0\5\1\1\0\2\1\11\0\1\1"+
    "\1\0\1\11\1\0\11\1\2\0\3\1\2\0\1\1"+
    "\1\0\4\1\1\0\2\1\1\11\1\0\1\11\1\0"+
    "\2\11\1\1\1\11\1\0\3\1\2\0\2\1\1\0"+
    "\1\1\1\11\1\1\1\11\1\1\1\0\1\1\2\11"+
    "\1\0\1\11\1\0\4\1\1\11\1\0\5\1\1\11"+
    "\1\1\1\0\1\1\1\0\1\1\1\0\2\1\1\11"+
    "\1\0\1\11\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\2\0\1\1\1\0\1\1\1\0\1\1\1\0\2\1"+
    "\1\0\4\1\1\0\1\11\2\0\1\11\1\1\1\0"+
    "\1\1\1\11\5\1\1\0\2\1\2\11\4\0\1\11"+
    "\4\0\1\11\10\1\2\0\1\1\1\11\2\1\2\11"+
    "\3\1\1\0\1\1\1\11\1\0\1\11\2\1\1\11"+
    "\1\0\2\1\1\11\1\1\1\11\1\0\1\11\2\1"+
    "\1\0\2\1\1\0\1\1\1\0\1\1\1\11\2\1"+
    "\1\11\1\0\1\1\1\11\1\1\1\0\1\1\1\0"+
    "\1\11\1\1\1\0\1\1\1\11\1\1\1\0\2\1"+
    "\1\11\3\1\1\0\1\11\1\0\1\11\4\1\1\0"+
    "\1\1\1\0\1\1\2\0\1\11\1\0\1\11\1\0"+
    "\1\11\1\0\6\1\2\11\2\1\1\0\1\1\2\11"+
    "\1\1\1\0\1\1\1\0\1\1\1\0\1\1\1\11"+
    "\2\1\1\0\1\1\1\0\1\1\1\0\1\11\1\1"+
    "\1\0\2\1\1\11\1\1\1\0\2\1\1\11\1\1"+
    "\1\11\1\1\1\11\4\0\3\1\1\0\1\1\1\11"+
    "\1\1\1\11\1\1\1\0\3\1\2\0\1\1\1\0"+
    "\1\1\2\11\2\1\1\0\1\1\1\0\3\11\3\1"+
    "\1\0\1\1\1\11\1\1\1\0\2\1\2\0\1\1"+
    "\1\11\2\1\1\11\1\0\1\1\1\0\2\1\1\0"+
    "\1\11\1\1\1\0\4\1\1\11\1\0\1\1\1\0"+
    "\1\1\1\11\1\1\1\0\1\1\1\0\1\1\1\0"+
    "\1\1\1\11\1\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[986];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private CharSequence zzBuffer = "";

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /**
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
  public _RoomSqlLexer() {
    this((java.io.Reader)null);
  }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public _RoomSqlLexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    int size = 0;
    for (int i = 0, length = packed.length(); i < length; i += 2) {
      size += packed.charAt(i);
    }
    char[] map = new char[size];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < packed.length()) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }

  public final int getTokenStart() {
    return zzStartRead;
  }

  public final int getTokenEnd() {
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end, int initialState) {
    zzBuffer = buffer;
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   *
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final CharSequence yytext() {
    return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
  }


  /**
   * Returns the character at position <tt>pos</tt> from the
   * matched text.
   *
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch.
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer.charAt(zzStartRead+pos);
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of
   * yypushback(int) and a match-all fallback rule) this method
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + ZZ_CMAP(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { return BAD_CHARACTER;
            }
          case 122: break;
          case 2: 
            { return WHITE_SPACE;
            }
          case 123: break;
          case 3: 
            { return NUMERIC_LITERAL;
            }
          case 124: break;
          case 4: 
            { return NAME_LITERAL;
            }
          case 125: break;
          case 5: 
            { return PARAMETER_NAME;
            }
          case 126: break;
          case 6: 
            { return STRING_LITERAL;
            }
          case 127: break;
          case 7: 
            { return TO;
            }
          case 128: break;
          case 8: 
            { return OF;
            }
          case 129: break;
          case 9: 
            { return OR;
            }
          case 130: break;
          case 10: 
            { return ON;
            }
          case 131: break;
          case 11: 
            { return IF;
            }
          case 132: break;
          case 12: 
            { return NO;
            }
          case 133: break;
          case 13: 
            { return AS;
            }
          case 134: break;
          case 14: 
            { return BY;
            }
          case 135: break;
          case 15: 
            { return END;
            }
          case 136: break;
          case 16: 
            { return COMMENT;
            }
          case 137: break;
          case 17: 
            { return BLOB_LITERAL;
            }
          case 138: break;
          case 18: 
            { return SET;
            }
          case 139: break;
          case 19: 
            { return FOR;
            }
          case 140: break;
          case 20: 
            { return ROW;
            }
          case 141: break;
          case 21: 
            { return NOT;
            }
          case 142: break;
          case 22: 
            { return ASC;
            }
          case 143: break;
          case 23: 
            { return ALL;
            }
          case 144: break;
          case 24: 
            { return ADD;
            }
          case 145: break;
          case 25: 
            { return KEY;
            }
          case 146: break;
          case 26: 
            { return ELSE;
            }
          case 147: break;
          case 27: 
            { return EACH;
            }
          case 148: break;
          case 28: 
            { return JOIN;
            }
          case 149: break;
          case 29: 
            { return LEFT;
            }
          case 150: break;
          case 30: 
            { return CASE;
            }
          case 151: break;
          case 31: 
            { return CAST;
            }
          case 152: break;
          case 32: 
            { return TEMP;
            }
          case 153: break;
          case 33: 
            { return THEN;
            }
          case 154: break;
          case 34: 
            { return FROM;
            }
          case 155: break;
          case 35: 
            { return FAIL;
            }
          case 156: break;
          case 36: 
            { return WHEN;
            }
          case 157: break;
          case 37: 
            { return WITH;
            }
          case 158: break;
          case 38: 
            { return DESC;
            }
          case 159: break;
          case 39: 
            { return DROP;
            }
          case 160: break;
          case 40: 
            { return INTO;
            }
          case 161: break;
          case 41: 
            { return NULL;
            }
          case 162: break;
          case 42: 
            { return VIEW;
            }
          case 163: break;
          case 43: 
            { return PLAN;
            }
          case 164: break;
          case 44: 
            { return LIMIT;
            }
          case 165: break;
          case 45: 
            { return CROSS;
            }
          case 166: break;
          case 46: 
            { return CHECK;
            }
          case 167: break;
          case 47: 
            { return TABLE;
            }
          case 168: break;
          case 48: 
            { return ROWID;
            }
          case 169: break;
          case 49: 
            { return RAISE;
            }
          case 170: break;
          case 50: 
            { return ORDER;
            }
          case 171: break;
          case 51: 
            { return OUTER;
            }
          case 172: break;
          case 52: 
            { return MATCH;
            }
          case 173: break;
          case 53: 
            { return WHERE;
            }
          case 174: break;
          case 54: 
            { return INDEX;
            }
          case 175: break;
          case 55: 
            { return INNER;
            }
          case 176: break;
          case 56: 
            { return ALTER;
            }
          case 177: break;
          case 57: 
            { return AFTER;
            }
          case 178: break;
          case 58: 
            { return ABORT;
            }
          case 179: break;
          case 59: 
            { return USING;
            }
          case 180: break;
          case 60: 
            { return UNION;
            }
          case 181: break;
          case 61: 
            { return QUERY;
            }
          case 182: break;
          case 62: 
            { return BEGIN;
            }
          case 183: break;
          case 63: 
            { return GROUP;
            }
          case 184: break;
          case 64: 
            { return EXCEPT;
            }
          case 185: break;
          case 65: 
            { return EXISTS;
            }
          case 186: break;
          case 66: 
            { return SELECT;
            }
          case 187: break;
          case 67: 
            { return CREATE;
            }
          case 188: break;
          case 68: 
            { return COLUMN;
            }
          case 189: break;
          case 69: 
            { return COMMIT;
            }
          case 190: break;
          case 70: 
            { return RENAME;
            }
          case 191: break;
          case 71: 
            { return OFFSET;
            }
          case 192: break;
          case 72: 
            { return HAVING;
            }
          case 193: break;
          case 73: 
            { return DELETE;
            }
          case 194: break;
          case 74: 
            { return DETACH;
            }
          case 195: break;
          case 75: 
            { return INSERT;
            }
          case 196: break;
          case 76: 
            { return IGNORE;
            }
          case 197: break;
          case 77: 
            { return VALUES;
            }
          case 198: break;
          case 78: 
            { return VACUUM;
            }
          case 199: break;
          case 79: 
            { return ACTION;
            }
          case 200: break;
          case 80: 
            { return ATTACH;
            }
          case 201: break;
          case 81: 
            { return UNIQUE;
            }
          case 202: break;
          case 82: 
            { return UPDATE;
            }
          case 203: break;
          case 83: 
            { return PRAGMA;
            }
          case 204: break;
          case 84: 
            { return BEFORE;
            }
          case 205: break;
          case 85: 
            { return EXPLAIN;
            }
          case 206: break;
          case 86: 
            { return COLLATE;
            }
          case 207: break;
          case 87: 
            { return CASCADE;
            }
          case 208: break;
          case 88: 
            { return TRIGGER;
            }
          case 209: break;
          case 89: 
            { return FOREIGN;
            }
          case 210: break;
          case 90: 
            { return RELEASE;
            }
          case 211: break;
          case 91: 
            { return REINDEX;
            }
          case 212: break;
          case 92: 
            { return REPLACE;
            }
          case 213: break;
          case 93: 
            { return WITHOUT;
            }
          case 214: break;
          case 94: 
            { return DEFAULT;
            }
          case 215: break;
          case 95: 
            { return INSTEAD;
            }
          case 216: break;
          case 96: 
            { return INDEXED;
            }
          case 217: break;
          case 97: 
            { return NATURAL;
            }
          case 218: break;
          case 98: 
            { return VIRTUAL;
            }
          case 219: break;
          case 99: 
            { return ANALYZE;
            }
          case 220: break;
          case 100: 
            { return PRIMARY;
            }
          case 221: break;
          case 101: 
            { return CONFLICT;
            }
          case 222: break;
          case 102: 
            { return RESTRICT;
            }
          case 223: break;
          case 103: 
            { return ROLLBACK;
            }
          case 224: break;
          case 104: 
            { return DEFERRED;
            }
          case 225: break;
          case 105: 
            { return DISTINCT;
            }
          case 226: break;
          case 106: 
            { return DATABASE;
            }
          case 227: break;
          case 107: 
            { return EXCLUSIVE;
            }
          case 228: break;
          case 108: 
            { return SAVEPOINT;
            }
          case 229: break;
          case 109: 
            { return TEMPORARY;
            }
          case 230: break;
          case 110: 
            { return RECURSIVE;
            }
          case 231: break;
          case 111: 
            { return IMMEDIATE;
            }
          case 232: break;
          case 112: 
            { return INTERSECT;
            }
          case 233: break;
          case 113: 
            { return INITIALLY;
            }
          case 234: break;
          case 114: 
            { return CONSTRAINT;
            }
          case 235: break;
          case 115: 
            { return REFERENCES;
            }
          case 236: break;
          case 116: 
            { return DEFERRABLE;
            }
          case 237: break;
          case 117: 
            { return TRANSACTION;
            }
          case 238: break;
          case 118: 
            { return CURRENT_TIME;
            }
          case 239: break;
          case 119: 
            { return CURRENT_DATE;
            }
          case 240: break;
          case 120: 
            { return AUTOINCREMENT;
            }
          case 241: break;
          case 121: 
            { return CURRENT_TIMESTAMP;
            }
          case 242: break;
          default:
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
