/*
 * Copyright (C) 2015 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * THIS FILE WAS GENERATED BY codergen. EDIT WITH CARE.
 */
package com.android.tools.idea.editors.gfxtrace.service;

import org.jetbrains.annotations.NotNull;
import com.android.tools.rpclib.binary.Decoder;
import com.android.tools.rpclib.binary.Encoder;
import java.io.IOException;

public enum TimingFlags {
  TimingCPU(0),
  TimingGPU(1),
  TimingPerCommand(2),
  TimingPerDrawCall(4),
  TimingPerFrame(8);

  private final int myValue;
  TimingFlags(int value) {
    myValue = value;
  }
  public int getValue() { return myValue; }

  public void encode(@NotNull Encoder e) throws IOException {
    e.int32(myValue);
  }

  public static TimingFlags decode(@NotNull Decoder d) throws IOException {
    int value = d.int32();
    switch (value) {
    case 0:
      return TimingCPU;
    case 1:
      return TimingGPU;
    case 2:
      return TimingPerCommand;
    case 4:
      return TimingPerDrawCall;
    case 8:
      return TimingPerFrame;
    }
    throw new IOException("Invalid value for TimingFlags");
  }
}
