// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gapid/gfxapi/gfxapi.proto

package com.android.tools.idea.editors.gfxtrace.service.gfxapi;

public final class GfxAPIProtos {
  private GfxAPIProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code gfxapi.DrawPrimitive}
   *
   * <pre>
   * DrawPrimitive is an enumerator of primitive draw modes
   * </pre>
   */
  public enum DrawPrimitive
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Points = 0;</code>
     */
    Points(0, 0),
    /**
     * <code>Lines = 1;</code>
     */
    Lines(1, 1),
    /**
     * <code>LineStrip = 2;</code>
     */
    LineStrip(2, 2),
    /**
     * <code>LineLoop = 3;</code>
     */
    LineLoop(3, 3),
    /**
     * <code>Triangles = 4;</code>
     */
    Triangles(4, 4),
    /**
     * <code>TriangleStrip = 5;</code>
     */
    TriangleStrip(5, 5),
    /**
     * <code>TriangleFan = 6;</code>
     */
    TriangleFan(6, 6),
    UNRECOGNIZED(-1, -1),
    ;

    /**
     * <code>Points = 0;</code>
     */
    public static final int Points_VALUE = 0;
    /**
     * <code>Lines = 1;</code>
     */
    public static final int Lines_VALUE = 1;
    /**
     * <code>LineStrip = 2;</code>
     */
    public static final int LineStrip_VALUE = 2;
    /**
     * <code>LineLoop = 3;</code>
     */
    public static final int LineLoop_VALUE = 3;
    /**
     * <code>Triangles = 4;</code>
     */
    public static final int Triangles_VALUE = 4;
    /**
     * <code>TriangleStrip = 5;</code>
     */
    public static final int TriangleStrip_VALUE = 5;
    /**
     * <code>TriangleFan = 6;</code>
     */
    public static final int TriangleFan_VALUE = 6;


    public final int getNumber() {
      if (index == -1) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    public static DrawPrimitive valueOf(int value) {
      switch (value) {
        case 0: return Points;
        case 1: return Lines;
        case 2: return LineStrip;
        case 3: return LineLoop;
        case 4: return Triangles;
        case 5: return TriangleStrip;
        case 6: return TriangleFan;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DrawPrimitive>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DrawPrimitive> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DrawPrimitive>() {
            public DrawPrimitive findValueByNumber(int number) {
              return DrawPrimitive.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.android.tools.idea.editors.gfxtrace.service.gfxapi.GfxAPIProtos.getDescriptor().getEnumTypes().get(0);
    }

    private static final DrawPrimitive[] VALUES = values();

    public static DrawPrimitive valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DrawPrimitive(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:gfxapi.DrawPrimitive)
  }

  /**
   * Protobuf enum {@code gfxapi.ResourceType}
   *
   * <pre>
   * ResourceType is an enumerator of resource types.
   * </pre>
   */
  public enum ResourceType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Unknown = 0;</code>
     *
     * <pre>
     * Unknown represents an unknown resource type
     * </pre>
     */
    Unknown(0, 0),
    /**
     * <code>Texture1D = 1;</code>
     *
     * <pre>
     * Texture1D represents the Texture1D resource type
     * </pre>
     */
    Texture1D(1, 1),
    /**
     * <code>Texture2D = 2;</code>
     *
     * <pre>
     * Texture2D represents the Texture2D resource type
     * </pre>
     */
    Texture2D(2, 2),
    /**
     * <code>Texture3D = 3;</code>
     *
     * <pre>
     * Texture3D represents the Texture2D resource type
     * </pre>
     */
    Texture3D(3, 3),
    /**
     * <code>Cubemap = 4;</code>
     *
     * <pre>
     * Cubemap represents the Cubemap resource type
     * </pre>
     */
    Cubemap(4, 4),
    UNRECOGNIZED(-1, -1),
    ;

    /**
     * <code>Unknown = 0;</code>
     *
     * <pre>
     * Unknown represents an unknown resource type
     * </pre>
     */
    public static final int Unknown_VALUE = 0;
    /**
     * <code>Texture1D = 1;</code>
     *
     * <pre>
     * Texture1D represents the Texture1D resource type
     * </pre>
     */
    public static final int Texture1D_VALUE = 1;
    /**
     * <code>Texture2D = 2;</code>
     *
     * <pre>
     * Texture2D represents the Texture2D resource type
     * </pre>
     */
    public static final int Texture2D_VALUE = 2;
    /**
     * <code>Texture3D = 3;</code>
     *
     * <pre>
     * Texture3D represents the Texture2D resource type
     * </pre>
     */
    public static final int Texture3D_VALUE = 3;
    /**
     * <code>Cubemap = 4;</code>
     *
     * <pre>
     * Cubemap represents the Cubemap resource type
     * </pre>
     */
    public static final int Cubemap_VALUE = 4;


    public final int getNumber() {
      if (index == -1) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    public static ResourceType valueOf(int value) {
      switch (value) {
        case 0: return Unknown;
        case 1: return Texture1D;
        case 2: return Texture2D;
        case 3: return Texture3D;
        case 4: return Cubemap;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ResourceType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ResourceType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ResourceType>() {
            public ResourceType findValueByNumber(int number) {
              return ResourceType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.android.tools.idea.editors.gfxtrace.service.gfxapi.GfxAPIProtos.getDescriptor().getEnumTypes().get(1);
    }

    private static final ResourceType[] VALUES = values();

    public static ResourceType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ResourceType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:gfxapi.ResourceType)
  }

  /**
   * Protobuf enum {@code gfxapi.FramebufferAttachment}
   *
   * <pre>
   * FramebufferAttachment values indicate the type of frame buffer attachment.
   * </pre>
   */
  public enum FramebufferAttachment
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Color = 0;</code>
     */
    Color(0, 0),
    /**
     * <code>Depth = 1;</code>
     */
    Depth(1, 1),
    /**
     * <code>Stencil = 2;</code>
     */
    Stencil(2, 2),
    UNRECOGNIZED(-1, -1),
    ;

    /**
     * <code>Color = 0;</code>
     */
    public static final int Color_VALUE = 0;
    /**
     * <code>Depth = 1;</code>
     */
    public static final int Depth_VALUE = 1;
    /**
     * <code>Stencil = 2;</code>
     */
    public static final int Stencil_VALUE = 2;


    public final int getNumber() {
      if (index == -1) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    public static FramebufferAttachment valueOf(int value) {
      switch (value) {
        case 0: return Color;
        case 1: return Depth;
        case 2: return Stencil;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FramebufferAttachment>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FramebufferAttachment> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FramebufferAttachment>() {
            public FramebufferAttachment findValueByNumber(int number) {
              return FramebufferAttachment.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.android.tools.idea.editors.gfxtrace.service.gfxapi.GfxAPIProtos.getDescriptor().getEnumTypes().get(2);
    }

    private static final FramebufferAttachment[] VALUES = values();

    public static FramebufferAttachment valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private FramebufferAttachment(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:gfxapi.FramebufferAttachment)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\031gapid/gfxapi/gfxapi.proto\022\006gfxapi*v\n\rD" +
      "rawPrimitive\022\n\n\006Points\020\000\022\t\n\005Lines\020\001\022\r\n\tL" +
      "ineStrip\020\002\022\014\n\010LineLoop\020\003\022\r\n\tTriangles\020\004\022" +
      "\021\n\rTriangleStrip\020\005\022\017\n\013TriangleFan\020\006*U\n\014R" +
      "esourceType\022\013\n\007Unknown\020\000\022\r\n\tTexture1D\020\001\022" +
      "\r\n\tTexture2D\020\002\022\r\n\tTexture3D\020\003\022\013\n\007Cubemap" +
      "\020\004*:\n\025FramebufferAttachment\022\t\n\005Color\020\000\022\t" +
      "\n\005Depth\020\001\022\013\n\007Stencil\020\002BF\n6com.android.to" +
      "ols.idea.editors.gfxtrace.service.gfxapi" +
      "B\014GfxAPIProtosb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
