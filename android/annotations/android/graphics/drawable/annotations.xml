<?xml version="1.0" encoding="UTF-8"?>
<root>
  <item name="android.graphics.drawable.AnimatedStateListDrawable void addState(int[], android.graphics.drawable.Drawable, int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.graphics.drawable.AnimatedStateListDrawable void addState(int[], android.graphics.drawable.Drawable, int) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.graphics.drawable.AnimatedStateListDrawable void addTransition(int, int, T, boolean) 2">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.graphics.drawable.AnimatedStateListDrawable void applyTheme(android.content.res.Resources.Theme) 0">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.graphics.drawable.AnimatedStateListDrawable void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources.Theme) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.graphics.drawable.AnimatedStateListDrawable void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources.Theme) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.graphics.drawable.AnimatedStateListDrawable void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources.Theme) 2">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.graphics.drawable.AnimatedStateListDrawable void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources.Theme) 3">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.graphics.drawable.AnimatedStateListDrawable void setConstantState(android.graphics.drawable.DrawableContainer.DrawableContainerState) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.graphics.drawable.AnimatedVectorDrawable void getOutline(android.graphics.Outline) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.graphics.drawable.AnimationDrawable android.graphics.drawable.Drawable mutate()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.graphics.drawable.AnimationDrawable void addFrame(android.graphics.drawable.Drawable, int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.graphics.drawable.AnimationDrawable void setConstantState(android.graphics.drawable.DrawableContainer.DrawableContainerState) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.graphics.drawable.BitmapDrawable void getOutline(android.graphics.Outline) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.graphics.drawable.ColorDrawable ColorDrawable(int) 0">
    <annotation name="android.support.annotation.ColorInt" />
  </item>
  <item name="android.graphics.drawable.ColorDrawable int getColor()">
    <annotation name="android.support.annotation.ColorInt" />
  </item>
  <item name="android.graphics.drawable.ColorDrawable void getOutline(android.graphics.Outline) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.graphics.drawable.ColorDrawable void setColor(int) 0">
    <annotation name="android.support.annotation.ColorInt" />
  </item>
  <item name="android.graphics.drawable.Drawable boolean getPadding(android.graphics.Rect) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.graphics.drawable.Drawable void getOutline(android.graphics.Outline) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.graphics.drawable.Drawable void setColorFilter(android.graphics.ColorFilter) 0">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.graphics.drawable.Drawable void setColorFilter(int, android.graphics.PorterDuff.Mode) 0">
    <annotation name="android.support.annotation.ColorInt" />
  </item>
  <item name="android.graphics.drawable.Drawable void setColorFilter(int, android.graphics.PorterDuff.Mode) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.graphics.drawable.Drawable void setTint(int) 0">
    <annotation name="android.support.annotation.ColorInt" />
  </item>
  <item name="android.graphics.drawable.Drawable void setTintList(android.content.res.ColorStateList) 0">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.graphics.drawable.Drawable void setTintMode(android.graphics.PorterDuff.Mode) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.graphics.drawable.DrawableContainer void getOutline(android.graphics.Outline) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.graphics.drawable.GradientDrawable GradientDrawable(android.graphics.drawable.GradientDrawable.Orientation, int[]) 1">
    <annotation name="android.support.annotation.ColorInt" />
  </item>
  <item name="android.graphics.drawable.GradientDrawable void setColor(int) 0">
    <annotation name="android.support.annotation.ColorInt" />
  </item>
  <item name="android.graphics.drawable.GradientDrawable void setColors(int[]) 0">
    <annotation name="android.support.annotation.ColorInt" />
  </item>
  <item name="android.graphics.drawable.GradientDrawable void setStroke(int, int) 1">
    <annotation name="android.support.annotation.ColorInt" />
  </item>
  <item name="android.graphics.drawable.GradientDrawable void setStroke(int, int, float, float) 1">
    <annotation name="android.support.annotation.ColorInt" />
  </item>
  <item name="android.graphics.drawable.InsetDrawable void getOutline(android.graphics.Outline) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.graphics.drawable.LayerDrawable void getOutline(android.graphics.Outline) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.graphics.drawable.LevelListDrawable void setConstantState(android.graphics.drawable.DrawableContainer.DrawableContainerState) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.graphics.drawable.NinePatchDrawable void getOutline(android.graphics.Outline) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.graphics.drawable.RippleDrawable RippleDrawable(android.content.res.ColorStateList, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.graphics.drawable.RippleDrawable RippleDrawable(android.content.res.ColorStateList, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable) 1">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.graphics.drawable.RippleDrawable RippleDrawable(android.content.res.ColorStateList, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable) 2">
    <annotation name="android.support.annotation.Nullable" />
  </item>
  <item name="android.graphics.drawable.RippleDrawable void draw(android.graphics.Canvas) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.graphics.drawable.RippleDrawable void getOutline(android.graphics.Outline) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.graphics.drawable.StateListDrawable void setConstantState(android.graphics.drawable.DrawableContainer.DrawableContainerState) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
</root>

