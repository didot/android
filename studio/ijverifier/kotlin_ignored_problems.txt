// See com.jetbrains.pluginverifier.filtering.IgnoreCondition for possible line formats.
// Also see com.jetbrains.pluginverifier.filtering.IgnoredProblemsFilter for how lines are matched.
// Each regex is matched against the *short* error description, not the long version.
//   (The short error descriptions can be found in the report.html file.)
// Note that the regex must match the *entire* error description.

// Unfortunately, the Kotlin plugin tends to have several unresolved self-references caused by the bundling
// of experimental/inactive code. Luckily, we are primarily concerned only with incompatibilities between
// the Kotlin plugin and IntelliJ platform. So for now we ignore any unresolved references to the
// org.jetbrains.kotlin package (and trust the Kotlin plugin build).
Access to unresolved class org\.jetbrains\.kotlin\..*
Package 'org\.jetbrains\.kotlin\..*' is not found

// We do not bundle the Maven plugin (and Kotlin's dependency on Maven is optional).
Package 'org\.jetbrains\.idea\.maven\..*' is not found
Access to unresolved class org\.jetbrains\.idea\.maven\..*

// This will be fixed upstream soon by https://github.com/JetBrains/intellij-community/commit/e01be04df5.
Package 'android\.view' is not found

// Referenced by, e.g., kotlin-android-extensions-runtime (which is injected into apps).
Package 'android\.os' is not found

// We do not bundle the Grazie plugin.
Access to unresolved class com\.intellij\.grazie\..*
Package 'com\.intellij\.grazie\.text' is not found

// IDEA 221.4165.146
Invocation of unresolved constructor com.intellij.execution.ui.ShortenCommandLineModeCombo.*
Invocation of unresolved method com.intellij.refactoring.rename.RenameProcessor.assertNonCompileElement.*
Invocation of unresolved method com.intellij.refactoring.suggested.SuggestedChangeSignatureData.copy.*
