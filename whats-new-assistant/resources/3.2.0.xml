<?xml version="1.0"?>
<!--
  ~ Copyright (C) 2018 The Android Open Source Project
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<tutorialBundle
    name="What's New"
    logo="core/whats_new_logo.png"
    resourceRoot="/">
  <feature
      name="What's New in 3.2">
    <tutorial
        key="whats-new"
        label=""
        icon="core/whats_new_logo.png"
        remoteLink="https://developer.android.com/studio/releases/index.html"
        remoteLinkLabel="">
      <description>
        <![CDATA[

          You're now running <b>Android Studio 3.2</b>. Learn about the new features and behavior changes
          below.

        <div style="padding-left: 10px; padding-right: 10px;">

          <h1>Improved editor for CMake scripts</h1>

          Android Studio now includes improved features to help you
          <a href="https://developer.android.com/studio/projects/configure-cmake.html?utm_source=android-studio&utm_medium=studio-assistant">
          configure your CMake build scripts</a>, such as syntax highlighting,
          code-completion, and safe code refactoring.
          <a href="https://d.android.com/studio/preview/features/index.html?utm_source=android-studio&utm_medium=studio-assistant#cmake-editor">
          Learn more</a>

          <br><br>
          <div align="center">
            <img src="https://d.android.com/studio/releases/assistant/3.2.0/cmake-ide-features.gif">
          </div>

          <br>
          <h1>Inspect JNI references</h1>

          If you deploy your app to a device running Android 8.0 (API level 26) or higher,
          you can now inspect memory allocations for your appâ€™s JNI code using
          <a href="https://d.android.com/studio/profile/memory-profiler.html?utm_source=android-studio&utm_medium=studio-assistant">
          the Memory Profiler</a>.
          <br><br>
          While your app is
          running, select a portion of the timeline that you want to inspect and select
          <b>JNI heap</b> from the drop-down menu above the class list.

          <br><br>
          <div align="center">
            <img src="https://d.android.com/studio/releases/assistant/3.2.0/memory-profiler-jni-heap.png">
          </div>

          <br>
          You can then inspect objects in the heap as you normally would and double-click objects
          in the <b>Allocation Call Stack</b> tab to see where the JNI references are
          allocated and released by your code.

          <br><br>
          <h1>Navigate external header files</h1>

          In the <b>Project</b> window, you can now view and inspect header files from
          external C/C++ library dependencies that you import into your app. Look for them organized under the <b>include</b>
          node for each of your local C/C++ library projects, as shown below.

          <br><br>
          <div align="center">
            <img src="https://d.android.com/studio/releases/assistant/3.2.0/project-include-nodes.png">
          </div>

          <br>
          <h1>Changed set of default ABIs</h1>

          When <a href="https://d.android.com/studio/build/configure-apk-splits.html?utm_source=android-studio&utm_medium=studio-assistant">
          building multiple APKs</a> that each target a different ABI, Android plugin for Gradle 3.2.0 no longer generates APKs for the
          following ABIs by default: <code>mips</code>, <code>mips64</code>, and <code>armeabi</code>.

          <br><br>
          If you want to build APKs that target these ABIs, you must use
          <a href="https://d.android.com/ndk/downloads/revision_history.html?utm_source=android-studio&utm_medium=studio-assistant">
          NDK r16b or lower</a> and specify the ABIs in your <code>build.gradle</code> file, as shown below:

          <br><br>
          <div style="border: solid gray 1px; padding-left: 10px;">
          <pre>splits {
    abi {
        include 'armeabi', 'mips', 'mips64'
        ...
    }
}</pre>
          </div>

          <br><br><hr><br>
          If you'd rather read this in a browser, go to the
          <a href="https://d.android.com/r/studio-ui/whats-new-assistant/canary-release-notes.html">Android Studio preview website</a>.

          <br><br>
          <a href="https://d.android.com/r/studio-wna/feedback.html">Submit feedback</a> for this panel.
        </div>
        ]]>
      </description>
    </tutorial>
  </feature>
</tutorialBundle>
